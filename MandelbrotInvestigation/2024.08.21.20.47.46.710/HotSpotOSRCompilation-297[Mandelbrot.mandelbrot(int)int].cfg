begin_compilation
  name " HotSpotOSRCompilation-297[Mandelbrot.mandelbrot(int)@73]"
  method "HotSpotOSRCompilation-297[Mandelbrot.mandelbrot(int)@73]"
  date 1724269707994
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i824 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i824  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 v885 v886 v887 v888 v889 v890 v891 v892 v893 v894 v895 v896 v897 v898 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
displacement: 160
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i824 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v885 
lastLocationAccess: - 
=== Succesors ===
next: i827 
=== Usages ===
v207 v39 d219 i462 v14 ?379 ?238 ?47 ?312 ?75 ?153 
=== Predecessor ===
v819 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v885 lastLocationAccess: - #next: i827  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
displacement: 152
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i827 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
lastLocationAccess: - 
=== Succesors ===
next: i830 
=== Usages ===
i467 ?379 i475 i461 
=== Predecessor ===
i824 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v886 lastLocationAccess: - #next: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
displacement: 144
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i830 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v887 
lastLocationAccess: - 
=== Succesors ===
next: i833 
=== Usages ===
?379 i454 
=== Predecessor ===
i827 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v887 lastLocationAccess: - #next: i833  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
displacement: 136
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i833 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v888 
lastLocationAccess: - 
=== Succesors ===
next: i836 
=== Usages ===
v457 ?379 i608 i456 
=== Predecessor ===
i830 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v888 lastLocationAccess: - #next: i836  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
displacement: 128
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i836 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v889 
lastLocationAccess: - 
=== Succesors ===
next: d839 
=== Usages ===
i339 ?379 ?312 ?238 
=== Predecessor ===
i833 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v889 lastLocationAccess: - #next: d839  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d839 <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v890 
lastLocationAccess: - 
=== Succesors ===
next: i842 
=== Usages ===
d296 d527 d674 ?312 d624 d437 ?379 ?238 
=== Predecessor ===
i836 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v890 lastLocationAccess: - #next: i842  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
displacement: 104
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i842 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v891 
lastLocationAccess: - 
=== Succesors ===
next: d845 
=== Usages ===
v463 i478 ?379 
=== Predecessor ===
d839 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v891 lastLocationAccess: - #next: d845  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d845 <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v892 
lastLocationAccess: - 
=== Succesors ===
next: d848 
=== Usages ===
d523 
=== Predecessor ===
i842 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v892 lastLocationAccess: - #next: d848  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d848 <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v893 
lastLocationAccess: - 
=== Succesors ===
next: d851 
=== Usages ===
d526 
=== Predecessor ===
d845 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v893 lastLocationAccess: - #next: d851  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d851 <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v894 
lastLocationAccess: - 
=== Succesors ===
next: d854 
=== Usages ===
d523 
=== Predecessor ===
d848 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v894 lastLocationAccess: - #next: d854  <|@  <|@
f <@~|@floating>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d854 <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v895 
lastLocationAccess: - 
=== Succesors ===
next: i857 
=== Usages ===
?379 d524 d621 d434 
=== Predecessor ===
d851 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v895 lastLocationAccess: - #next: i857  <|@  <|@
f <@~|@floating>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i857 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v896 
lastLocationAccess: - 
=== Succesors ===
next: i860 
=== Usages ===
i541 v519 i790 
=== Predecessor ===
d854 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v896 lastLocationAccess: - #next: i860  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i860 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v897 
lastLocationAccess: - 
=== Succesors ===
next: i863 
=== Usages ===
i538 v515 
=== Predecessor ===
i857 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v897 lastLocationAccess: - #next: i863  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i863 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: v821 
=== Usages ===
i430 i539 i430 
=== Predecessor ===
i860 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: v821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{OSR_migration_end(long)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}
descriptorName: OSR_migration_end
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j820 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
i863 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j820 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i469 i494 i493 i494 i37 i687 i784 v92 i752 i33 i34 i34 i33 v515 i538 v396 i656 i468 i468 i469 i751 i720 v255 i688 i493 v612 i638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i860 
y: i4 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i860 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i752 i783 i151 i154 i156 i182 i184 i688 i719 i310 i313 i315 i337 i339 i541 i655 i451 i454 i456 i478 i539 i751 i637 i721 i785 i687 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d139 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 128]
rawvalue: 4.0
stableDimension: 0
stamp: f64! [4.0]
stampKind: f64
value: double[4.0|0x4010000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 v141 v300 v441 v628 v678 v742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 16]
rawvalue: 2.0
stableDimension: 0
stamp: f64! [2.0]
stampKind: f64
value: double[2.0|0x4000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d23 d52 d133 d525 d218 d294 d435 d622 d672 d736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 80]
rawvalue: 50
stableDimension: 0
stamp: i32 [50]
stampKind: i32
value: int[50|0x32]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 v268 v409 v519 v616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v516 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v517 #falseSuccessor: v516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i106 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i857 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v520 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v521 #falseSuccessor: v520  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid d523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d845 
y: d851 
=== Succesors ===
=== Usages ===
d524 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d845 y: d851  <|@  <|@
f <@~|@floating>@ <|@
tid d524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d523 
y: d854 
=== Succesors ===
=== Usages ===
d525 d528 d528 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d523 y: d854  <|@  <|@
f <@~|@floating>@ <|@
tid d528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d524 
y: d524 
=== Succesors ===
=== Usages ===
d530 d620 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d524 y: d524  <|@  <|@
f <@~|@floating>@ <|@
tid d525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d524 
y: d21 
=== Succesors ===
=== Usages ===
d526 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d524 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d525 
y: d848 
=== Succesors ===
=== Usages ===
d527 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d525 y: d848  <|@  <|@
f <@~|@floating>@ <|@
tid d527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d526 
y: d839 
=== Succesors ===
=== Usages ===
d529 d529 d623 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d526 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d527 
y: d527 
=== Succesors ===
=== Usages ===
d530 d620 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d527 y: d527  <|@  <|@
f <@~|@floating>@ <|@
tid d530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d528 
y: d529 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d528 y: d529  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d530 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d530  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v533 #falseSuccessor: v532  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v536 
values: i860 i4 
=== Succesors ===
=== Usages ===
v612 i638 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v536 values: i860 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v536 
values: i863 i57 
=== Succesors ===
=== Usages ===
i430 i430 i637 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v536 values: i863 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v535 v537 
=== Succesors ===
next: v615 
=== Usages ===
i538 i539 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v537 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i538 
y: i4 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i538 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v613 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v614 #falseSuccessor: v613  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid i541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i857 
y: i57 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i857 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i541 
y: i106 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i541 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v616 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v616 #trueSuccessor: v618 #falseSuccessor: v617  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid d620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d528 
y: d529 
=== Succesors ===
=== Usages ===
d621 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d528 y: d529  <|@  <|@
f <@~|@floating>@ <|@
tid d621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d620 
y: d854 
=== Succesors ===
=== Usages ===
d622 d625 d625 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d620 y: d854  <|@  <|@
f <@~|@floating>@ <|@
tid d625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d621 
y: d621 
=== Succesors ===
=== Usages ===
d627 d660 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d621 y: d621  <|@  <|@
f <@~|@floating>@ <|@
tid d622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d621 
y: d21 
=== Succesors ===
=== Usages ===
d623 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d621 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d527 
y: d622 
=== Succesors ===
=== Usages ===
d624 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d527 y: d622  <|@  <|@
f <@~|@floating>@ <|@
tid d624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d623 
y: d839 
=== Succesors ===
=== Usages ===
d626 d626 d659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d623 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d624 
y: d624 
=== Succesors ===
=== Usages ===
d627 d658 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d624 y: d624  <|@  <|@
f <@~|@floating>@ <|@
tid d627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d625 
y: d626 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d625 y: d626  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d627 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d627  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v628 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v628 #trueSuccessor: v630 #falseSuccessor: v629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v635 
values: i539 i57 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v635 values: i539 i57  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v635 
values: i538 i4 
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v635 values: i538 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v633 v634 
=== Succesors ===
next: v363 
=== Usages ===
i637 i638 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v633 v634 #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i789 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i857 
y: i789 
=== Succesors ===
=== Usages ===
i657 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i857 y: i789  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid d660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v364 
values: d625 d438 d438 
=== Succesors ===
=== Usages ===
?379 d433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: d625 d438 d438  <|@  <|@
f <@~|@floating>@ <|@
tid d659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v364 
values: d624 d437 d437 
=== Succesors ===
=== Usages ===
?379 d436 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: d624 d437 d437  <|@  <|@
f <@~|@floating>@ <|@
tid d658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v364 
values: d626 d439 d439 
=== Succesors ===
=== Usages ===
?379 d433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: d626 d439 d439  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i790 i451 i451 
=== Succesors ===
=== Usages ===
?379 i451 v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: i790 i451 i451  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i638 i656 i4 
=== Succesors ===
=== Usages ===
?379 v396 i656 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: i638 i656 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i637 i655 i57 
=== Succesors ===
=== Usages ===
?379 i430 i430 i655 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: i637 i655 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 223
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
osrLoop: true
peelings: 2
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v363 
=== Succesors ===
next: v408 
=== Usages ===
d660 d659 d658 v398 i657 i656 i655 v413 v452 v607 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v363 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i656 
y: i4 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i656 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v396 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v396 #trueSuccessor: v398 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i657 
y: i106 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i657 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v409 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v409 #trueSuccessor: v431 #falseSuccessor: v413  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
tid ?379 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iload
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i827 i830 i833 i836 d839 - i842 d660 - d659 - d658 - d854 - i657 i656 i655 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i827 i830 i833 i836 d839 - i842 d660 - d659 - d658 - d854 - i657 i656 i655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateBefore: ?379 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?379 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i657 
y: i57 
=== Succesors ===
=== Usages ===
i657 i657 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i657 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d660 
y: d658 
=== Succesors ===
=== Usages ===
d434 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d660 y: d658  <|@  <|@
f <@~|@floating>@ <|@
tid d434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d433 
y: d854 
=== Succesors ===
=== Usages ===
d435 d438 d438 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d433 y: d854  <|@  <|@
f <@~|@floating>@ <|@
tid d438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d434 
y: d434 
=== Succesors ===
=== Usages ===
d660 d440 d660 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d434 y: d434  <|@  <|@
f <@~|@floating>@ <|@
tid d435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d434 
y: d21 
=== Succesors ===
=== Usages ===
d436 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d434 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d435 
y: d659 
=== Succesors ===
=== Usages ===
d437 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d435 y: d659  <|@  <|@
f <@~|@floating>@ <|@
tid d437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d436 
y: d839 
=== Succesors ===
=== Usages ===
d659 d439 d439 d659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d436 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d437 
y: d437 
=== Succesors ===
=== Usages ===
d658 d440 d658 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d437 y: d437  <|@  <|@
f <@~|@floating>@ <|@
tid d440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d438 
y: d439 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d438 y: d439  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d440 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d440  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v364 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v364 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v364 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v364 #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v364 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v364 #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v411 
values: i655 i655 i863 i863 i539 i539 
=== Succesors ===
=== Usages ===
i455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v411 values: i655 i655 i863 i863 i539 i539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v410 v412 v609 v610 v791 v792 
=== Succesors ===
next: v460 
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v410 v412 v609 v610 v791 v792 #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 149]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i830 
y: i57 
=== Succesors ===
=== Usages ===
i455 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i830 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 152]
stamp: i32
=== Inputs ===
x: i430 
y: i454 
=== Succesors ===
=== Usages ===
i461 i468 i474 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i454  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v316 v457 i602 i606 i608 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i833 
y: i158 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i833 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 180]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 180]
stamp: i32
=== Inputs ===
x: i824 
y: i165 
=== Succesors ===
=== Usages ===
v463 v322 v167 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i824 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
profileData: PROFILED designatedSuccessorProbability: 0.12399999916610138
stamp: void
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v459 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v459 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 166]
stamp: i32
=== Inputs ===
x: i455 
y: i827 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i455 y: i827  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i462 
y: i842 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i462 y: i842  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.0015220706491220204
stamp: void
=== Inputs ===
condition: v463 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v463 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid i608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 189]
stamp: i32
=== Inputs ===
x: i158 
y: i833 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i158 y: i833  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 190]
stamp: i32
=== Inputs ===
x: i455 
y: i608 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i455 y: i608  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 194]
stamp: i32
=== Inputs ===
x: i474 
y: i827 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i474 y: i827  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v470 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 154]
stamp: i32
=== Inputs ===
x: i833 
y: i57 
=== Succesors ===
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i833 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v465 
values: i461 i827 i475 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v465 values: i461 i827 i475  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v465 
values: i4 i455 i4 
=== Succesors ===
=== Usages ===
i493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v465 values: i4 i455 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v465 
values: i4 i456 i4 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v465 values: i4 i456 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v464 v466 v476 
=== Succesors ===
next: v197 
=== Usages ===
i467 i468 i469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v464 v466 v476 #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
=== Inputs ===
x: i842 
y: i57 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i842 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 56]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i824 
=== Succesors ===
=== Usages ===
d220 d25 d54 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i824  <|@  <|@
f <@~|@floating>@ <|@
tid d55 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 58]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d56 d221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
rawvalue: 0.0
stableDimension: 0
stamp: f64! [0.0]
stampKind: f64
value: double[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
d735 d671 d796 d795 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v198 
values: i478 i337 i337 i337 
=== Succesors ===
=== Usages ===
?312 v207 d217 v322 ?238 i337 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v198 values: i478 i337 i337 i337  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v198 
values: i469 i4 i4 i315 
=== Succesors ===
=== Usages ===
v316 i606 ?312 ?238 i315 i351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v198 values: i469 i4 i4 i315  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v198 
values: i468 i4 i4 i314 
=== Succesors ===
=== Usages ===
i313 i350 ?312 ?238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v198 values: i468 i4 i4 i314  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v198 
values: i467 i320 i334 i492 
=== Succesors ===
=== Usages ===
i492 i334 ?312 ?238 i320 i349 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v198 values: i467 i320 i334 i492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
osrLoop: true
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v197 
=== Succesors ===
next: v216 
=== Usages ===
i497 v338 v604 i494 i493 i492 v605 v208 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v197 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i824 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i824  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.9986666670314993
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v215 #falseSuccessor: v208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid d217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 53]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i497 
=== Succesors ===
=== Usages ===
d218 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i497  <|@  <|@
f <@~|@floating>@ <|@
tid d218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 54]
stamp: f64
=== Inputs ===
x: d217 
y: d21 
=== Succesors ===
=== Usages ===
d220 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d217 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 57]
stamp: f64
=== Inputs ===
x: d218 
y: d219 
=== Succesors ===
=== Usages ===
d221 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d218 y: d219  <|@  <|@
f <@~|@floating>@ <|@
tid d221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 61]
stamp: f64
=== Inputs ===
x: d220 
y: d55 
=== Succesors ===
=== Usages ===
d293 ?238 d671 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d220 y: d55  <|@  <|@
f <@~|@floating>@ <|@
tid d671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d221 
y: d50 
=== Succesors ===
=== Usages ===
d672 d675 d675 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d221 y: d50  <|@  <|@
f <@~|@floating>@ <|@
tid d675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d671 
y: d671 
=== Succesors ===
=== Usages ===
d677 d723 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d671 y: d671  <|@  <|@
f <@~|@floating>@ <|@
tid d672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d671 
y: d21 
=== Succesors ===
=== Usages ===
d795 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d671 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d672 
y: d50 
=== Succesors ===
=== Usages ===
d674 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d672 y: d50  <|@  <|@
f <@~|@floating>@ <|@
tid d674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d795 
y: d839 
=== Succesors ===
=== Usages ===
d676 d676 d724 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d795 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d674 
y: d674 
=== Succesors ===
=== Usages ===
d677 d722 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d674 y: d674  <|@  <|@
f <@~|@floating>@ <|@
tid d677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d675 
y: d676 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d675 y: d676  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d677 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d677  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v680 #falseSuccessor: v679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
v679 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v685 
values: i4 i57 
=== Succesors ===
=== Usages ===
i719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v685 values: i4 i57  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v685 
values: i57 i4 
=== Succesors ===
=== Usages ===
i720 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v685 values: i57 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v683 v684 
=== Succesors ===
next: v222 
=== Usages ===
i687 i688 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v683 v684 #next: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid d724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v223 
values: d674 d296 d296 
=== Succesors ===
=== Usages ===
?238 d295 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: d674 d296 d296  <|@  <|@
f <@~|@floating>@ <|@
tid d723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v223 
values: d675 d297 d297 
=== Succesors ===
=== Usages ===
?238 d292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: d675 d297 d297  <|@  <|@
f <@~|@floating>@ <|@
tid d722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v223 
values: d676 d298 d298 
=== Succesors ===
=== Usages ===
?238 d292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: d676 d298 d298  <|@  <|@
f <@~|@floating>@ <|@
tid i721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v223 
values: i57 i310 i310 
=== Succesors ===
=== Usages ===
?238 i310 v268 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: i57 i310 i310  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v223 
values: i688 i720 i4 
=== Succesors ===
=== Usages ===
?238 v255 i720 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: i688 i720 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v223 
values: i687 i719 i57 
=== Succesors ===
=== Usages ===
?238 ?312 i314 i719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: i687 i719 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 60
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v222 
=== Succesors ===
next: v267 
=== Usages ===
v311 v272 v257 d724 d723 d722 i721 i720 i719 v603 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v222 #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i720 
y: i4 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i720 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v257 #falseSuccessor: v256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i721 
y: i106 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i721 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v290 #falseSuccessor: v272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iload
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i492 i493 i494 i836 d839 - i497 d723 - d724 - d722 - d221 - i721 i720 i719 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i492 i493 i494 i836 d839 - i497 d723 - d724 - d722 - d221 - i721 i720 i719  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?238 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i721 
y: i57 
=== Succesors ===
=== Usages ===
i721 i721 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i721 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d723 
y: d722 
=== Succesors ===
=== Usages ===
d293 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d723 y: d722  <|@  <|@
f <@~|@floating>@ <|@
tid d293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d221 
y: d292 
=== Succesors ===
=== Usages ===
d294 d297 d297 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d221 y: d292  <|@  <|@
f <@~|@floating>@ <|@
tid d297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d293 
y: d293 
=== Succesors ===
=== Usages ===
d723 d299 d723 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d293 y: d293  <|@  <|@
f <@~|@floating>@ <|@
tid d294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d293 
y: d21 
=== Succesors ===
=== Usages ===
d295 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d293 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d294 
y: d724 
=== Succesors ===
=== Usages ===
d296 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d294 y: d724  <|@  <|@
f <@~|@floating>@ <|@
tid d296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d295 
y: d839 
=== Succesors ===
=== Usages ===
d724 d298 d298 d724 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d295 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d296 
y: d296 
=== Succesors ===
=== Usages ===
d722 d299 d722 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d296 y: d296  <|@  <|@
f <@~|@floating>@ <|@
tid d299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d297 
y: d298 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d297 y: d298  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d299 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d299  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v302 #falseSuccessor: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v223 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v223 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v271 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v271 #next: v812  <|@  <|@
tid ?312 <|@
d <@d|@=== Debug Properties ===
bci: 147
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i492 i493 i494 i836 d839 - i497 - - - - - - - - - - i719 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i492 i493 i494 i836 d839 - i497 - - - - - - - - - - i719  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
stateBefore: ?312 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?312 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 149]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i493 
y: i57 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i493 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 152]
stamp: i32
=== Inputs ===
x: i313 
y: i719 
=== Succesors ===
=== Usages ===
i320 i493 i333 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i313 y: i719  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
=== Inputs ===
x: i497 
y: i57 
=== Succesors ===
=== Usages ===
i497 i497 i497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i497 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i158 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i494 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
profileData: PROFILED designatedSuccessorProbability: 0.12399999916610138
stamp: void
=== Inputs ===
condition: v316 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v317 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v316 #trueSuccessor: v318 #falseSuccessor: v317  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 166]
stamp: i32
=== Inputs ===
x: i314 
y: i492 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i314 y: i492  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v198 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i462 
y: i497 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i462 y: i497  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.0015220706491220204
stamp: void
=== Inputs ===
condition: v322 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v322 #trueSuccessor: v329 #falseSuccessor: v330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 189]
stamp: i32
=== Inputs ===
x: i158 
y: i494 
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i158 y: i494  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 190]
stamp: i32
=== Inputs ===
x: i314 
y: i606 
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i314 y: i606  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 194]
stamp: i32
=== Inputs ===
x: i333 
y: i492 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i333 y: i492  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v198 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 154]
stamp: i32
=== Inputs ===
x: i494 
y: i57 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i494 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v198 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v198 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v198 #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: i32
=== Inputs ===
x: i836 
y: i57 
=== Succesors ===
=== Usages ===
i352 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i836 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 26]
rawvalue: 1.0
stableDimension: 0
stamp: f64! [1.0]
stampKind: f64
value: double[1.0|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i339 i184 
=== Succesors ===
=== Usages ===
?47 v14 d22 ?153 ?75 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i339 i184  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i494 i34 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i494 i34  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i493 i33 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i493 i33  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i492 i32 
=== Succesors ===
=== Usages ===
i32 v186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i492 i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
osrLoop: true
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v20 
=== Usages ===
i352 i351 i350 i349 v185 v16 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 13]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i352 
y: i824 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i352 y: i824  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 0.9986676830062805
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v19 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid d22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 21]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i352 
=== Succesors ===
=== Usages ===
d23 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i352  <|@  <|@
f <@~|@floating>@ <|@
tid d23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 22]
stamp: f64
=== Inputs ===
x: d22 
y: d21 
=== Succesors ===
=== Usages ===
d25 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d22 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 25]
stamp: f64
=== Inputs ===
x: d23 
y: d219 
=== Succesors ===
=== Usages ===
d27 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d23 y: d219  <|@  <|@
f <@~|@floating>@ <|@
tid d27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 27]
stamp: f64
=== Inputs ===
x: d25 
y: d26 
=== Succesors ===
=== Usages ===
?153 d738 d135 ?75 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d25 y: d26  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i349 i163 i179 i32 
=== Succesors ===
=== Usages ===
i179 i349 ?153 ?75 i163 ?47 i32 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i349 i163 i179 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i350 i4 i4 i155 
=== Succesors ===
=== Usages ===
?47 i350 ?153 ?75 i154 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i350 i4 i4 i155  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i351 i4 i4 i156 
=== Succesors ===
=== Usages ===
i602 i351 ?153 ?75 i156 ?47 v159 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i351 i4 i4 i156  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i4 i182 i182 i182 
=== Succesors ===
=== Usages ===
?153 v39 d51 v167 ?75 i182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i4 i182 i182 i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v29 
=== Succesors ===
next: v49 
=== Usages ===
v601 i32 i33 i34 v600 v183 i37 v41 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v29 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i824 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i37 y: i824  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.9986684424410921
stamp: void
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v48 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid d51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 53]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i37 
=== Succesors ===
=== Usages ===
d52 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i37  <|@  <|@
f <@~|@floating>@ <|@
tid d52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 54]
stamp: f64
=== Inputs ===
x: d51 
y: d21 
=== Succesors ===
=== Usages ===
d54 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d51 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 57]
stamp: f64
=== Inputs ===
x: d52 
y: d219 
=== Succesors ===
=== Usages ===
d56 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d52 y: d219  <|@  <|@
f <@~|@floating>@ <|@
tid d56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 61]
stamp: f64
=== Inputs ===
x: d54 
y: d55 
=== Succesors ===
=== Usages ===
d132 ?75 d735 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d54 y: d55  <|@  <|@
f <@~|@floating>@ <|@
tid d735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d56 
y: d50 
=== Succesors ===
=== Usages ===
d736 d739 d739 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d56 y: d50  <|@  <|@
f <@~|@floating>@ <|@
tid d739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d735 
y: d735 
=== Succesors ===
=== Usages ===
d741 d787 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d735 y: d735  <|@  <|@
f <@~|@floating>@ <|@
tid d736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d735 
y: d21 
=== Succesors ===
=== Usages ===
d796 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d735 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d736 
y: d50 
=== Succesors ===
=== Usages ===
d738 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d736 y: d50  <|@  <|@
f <@~|@floating>@ <|@
tid d738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d27 
y: d796 
=== Succesors ===
=== Usages ===
d740 d740 d788 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d27 y: d796  <|@  <|@
f <@~|@floating>@ <|@
tid d740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d738 
y: d738 
=== Succesors ===
=== Usages ===
d741 d786 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d738 y: d738  <|@  <|@
f <@~|@floating>@ <|@
tid d741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d739 
y: d740 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d739 y: d740  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d741 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d741  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v742 
=== Succesors ===
trueSuccessor: v744 
falseSuccessor: v743 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v742 #trueSuccessor: v744 #falseSuccessor: v743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v743 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i751 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v749 
values: i4 i57 
=== Succesors ===
=== Usages ===
i783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v749 values: i4 i57  <|@  <|@
f <@~|@floating>@ <|@
tid i752 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v749 
values: i57 i4 
=== Succesors ===
=== Usages ===
i784 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v749 values: i57 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v747 v748 
=== Succesors ===
next: v59 
=== Usages ===
i751 i752 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v747 v748 #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid d788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v60 
values: d738 d135 d135 
=== Succesors ===
=== Usages ===
?75 d134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: d738 d135 d135  <|@  <|@
f <@~|@floating>@ <|@
tid d787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v60 
values: d739 d136 d136 
=== Succesors ===
=== Usages ===
?75 d131 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: d739 d136 d136  <|@  <|@
f <@~|@floating>@ <|@
tid d786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v60 
values: d740 d137 d137 
=== Succesors ===
=== Usages ===
?75 d131 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: d740 d137 d137  <|@  <|@
f <@~|@floating>@ <|@
tid i785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v60 
values: i57 i151 i151 
=== Succesors ===
=== Usages ===
?75 i151 v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: i57 i151 i151  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v60 
values: i752 i784 i4 
=== Succesors ===
=== Usages ===
?75 v92 i784 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: i752 i784 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v60 
values: i751 i783 i57 
=== Succesors ===
=== Usages ===
?75 ?153 i155 i783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: i751 i783 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v59 
=== Succesors ===
next: v105 
=== Usages ===
v152 v111 v95 d788 d787 d786 i785 i784 i783 v599 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v59 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i784 
y: i4 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i784 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v92 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v92 #trueSuccessor: v95 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i785 
y: i106 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i785 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v129 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v129 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iload
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i32 i33 i34 i352 d27 - i37 d787 - d788 - d786 - d56 - i785 i784 i783 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i32 i33 i34 i352 d27 - i37 d787 - d788 - d786 - d56 - i785 i784 i783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateBefore: ?75 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?75 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i785 
y: i57 
=== Succesors ===
=== Usages ===
i785 i785 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i785 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d787 
y: d786 
=== Succesors ===
=== Usages ===
d132 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d787 y: d786  <|@  <|@
f <@~|@floating>@ <|@
tid d132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d56 
y: d131 
=== Succesors ===
=== Usages ===
d133 d136 d136 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d56 y: d131  <|@  <|@
f <@~|@floating>@ <|@
tid d136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d132 
y: d132 
=== Succesors ===
=== Usages ===
d138 d787 d787 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d132 y: d132  <|@  <|@
f <@~|@floating>@ <|@
tid d133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d132 
y: d21 
=== Succesors ===
=== Usages ===
d134 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d132 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d133 
y: d788 
=== Succesors ===
=== Usages ===
d135 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d133 y: d788  <|@  <|@
f <@~|@floating>@ <|@
tid d135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d27 
y: d134 
=== Succesors ===
=== Usages ===
d137 d137 d788 d788 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d27 y: d134  <|@  <|@
f <@~|@floating>@ <|@
tid d137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d135 
y: d135 
=== Succesors ===
=== Usages ===
d138 d786 d786 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d135 y: d135  <|@  <|@
f <@~|@floating>@ <|@
tid d138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d136 
y: d137 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d136 y: d137  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d138 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d138  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v143 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v599  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v60 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v60 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v60 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v60 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v108 v110 
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v108 v110 #next: v809  <|@  <|@
tid ?153 <|@
d <@d|@=== Debug Properties ===
bci: 147
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i32 i33 i34 i352 d27 - i37 - - - - - - - - - - i783 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i32 i33 i34 i352 d27 - i37 - - - - - - - - - - i783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
stateBefore: ?153 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?153 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 149]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i33 
y: i57 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i33 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 152]
stamp: i32
=== Inputs ===
x: i154 
y: i783 
=== Succesors ===
=== Usages ===
i163 i33 i178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i154 y: i783  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
=== Inputs ===
x: i37 
y: i57 
=== Succesors ===
=== Usages ===
i37 i37 i37 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i37 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i158 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i34 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
profileData: PROFILED designatedSuccessorProbability: 0.12399999916610138
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v161 #falseSuccessor: v160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 166]
stamp: i32
=== Inputs ===
x: i32 
y: i155 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i32 y: i155  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i462 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i37 y: i462  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.0015220706491220204
stamp: void
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v174 #falseSuccessor: v175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid i602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 189]
stamp: i32
=== Inputs ===
x: i158 
y: i34 
=== Succesors ===
=== Usages ===
i178 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i158 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 190]
stamp: i32
=== Inputs ===
x: i155 
y: i602 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i155 y: i602  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 194]
stamp: i32
=== Inputs ===
x: i32 
y: i178 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i32 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 154]
stamp: i32
=== Inputs ===
x: i34 
y: i57 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i34 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v806  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 207
bytecode: iinc
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i32 i33 i34 i352 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i32 i33 i34 i352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?47 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?47 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: i32
=== Inputs ===
x: i352 
y: i57 
=== Succesors ===
=== Usages ===
i352 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i352 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 213]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v186  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 214]
stamp: void
=== Inputs ===
memoryMap: - 
result: i349 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i349  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   -1  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i824 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i824  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 v885 v886 v887 v888 v889 v890 v891 v892 v893 v894 v895 v896 v897 v898 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
result [v0|QWORD + 160] <|@
d <@d|@=== Debug Properties ===
displacement: 160
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i824 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v885 
lastLocationAccess: - 
=== Succesors ===
next: i827 
=== Usages ===
v207 v39 d219 i462 v14 ?379 ?238 ?47 ?312 ?75 ?153 
=== Predecessor ===
v819 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v885 lastLocationAccess: - #next: i827  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
result [v0|QWORD + 152] <|@
d <@d|@=== Debug Properties ===
displacement: 152
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i827 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
lastLocationAccess: - 
=== Succesors ===
next: i830 
=== Usages ===
i467 ?379 i475 i461 
=== Predecessor ===
i824 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v886 lastLocationAccess: - #next: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
result [v0|QWORD + 144] <|@
d <@d|@=== Debug Properties ===
displacement: 144
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i830 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v887 
lastLocationAccess: - 
=== Succesors ===
next: i833 
=== Usages ===
?379 i454 
=== Predecessor ===
i827 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v887 lastLocationAccess: - #next: i833  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
result [v0|QWORD + 136] <|@
d <@d|@=== Debug Properties ===
displacement: 136
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i833 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v888 
lastLocationAccess: - 
=== Succesors ===
next: i836 
=== Usages ===
v457 ?379 i608 i456 
=== Predecessor ===
i830 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v888 lastLocationAccess: - #next: i836  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
result [v0|QWORD + 128] <|@
d <@d|@=== Debug Properties ===
displacement: 128
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i836 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v889 
lastLocationAccess: - 
=== Succesors ===
next: d839 
=== Usages ===
i339 ?379 ?312 ?238 
=== Predecessor ===
i833 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v889 lastLocationAccess: - #next: d839  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
result [v0|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d839 <|@
result v6|DOUBLE <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v890 
lastLocationAccess: - 
=== Succesors ===
next: i842 
=== Usages ===
d296 d527 d674 ?312 d624 d437 ?379 ?238 
=== Predecessor ===
i836 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v890 lastLocationAccess: - #next: i842  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
result [v0|QWORD + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i842 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v891 
lastLocationAccess: - 
=== Succesors ===
next: d845 
=== Usages ===
v463 i478 ?379 
=== Predecessor ===
d839 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v891 lastLocationAccess: - #next: d845  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
result [v0|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d845 <|@
result v8|DOUBLE <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v892 
lastLocationAccess: - 
=== Succesors ===
next: d848 
=== Usages ===
d523 
=== Predecessor ===
i842 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v892 lastLocationAccess: - #next: d848  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
result [v0|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d848 <|@
result v9|DOUBLE <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v893 
lastLocationAccess: - 
=== Succesors ===
next: d851 
=== Usages ===
d526 
=== Predecessor ===
d845 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v893 lastLocationAccess: - #next: d851  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
result [v0|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d851 <|@
result v10|DOUBLE <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v894 
lastLocationAccess: - 
=== Succesors ===
next: d854 
=== Usages ===
d523 
=== Predecessor ===
d848 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v894 lastLocationAccess: - #next: d854  <|@  <|@
f <@~|@floating>@ <|@
tid v895 <|@
result [v0|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
d854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d854 <|@
result v11|DOUBLE <|@
d <@d|@=== Debug Properties ===
accessStamp: f64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v895 
lastLocationAccess: - 
=== Succesors ===
next: i857 
=== Usages ===
?379 d524 d621 d434 
=== Predecessor ===
d851 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v895 lastLocationAccess: - #next: i857  <|@  <|@
f <@~|@floating>@ <|@
tid v896 <|@
result [v0|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i857 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v896 
lastLocationAccess: - 
=== Succesors ===
next: i860 
=== Usages ===
i541 v519 i790 
=== Predecessor ===
d854 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v896 lastLocationAccess: - #next: i860  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
result [v0|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i860 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v897 
lastLocationAccess: - 
=== Succesors ===
next: i863 
=== Usages ===
i538 v515 
=== Predecessor ===
i857 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v897 lastLocationAccess: - #next: i863  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
result [v0|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j820 
index: - 
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i863 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
lastLocationAccess: - 
=== Succesors ===
next: v821 
=== Usages ===
i430 i539 i430 
=== Predecessor ===
i860 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 lastLocationAccess: - #next: v821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{OSR_migration_end(long)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}
descriptorName: OSR_migration_end
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j820 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
i863 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j820 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i469 i494 i493 i494 i37 i687 i784 v92 i752 i33 i34 i34 i33 v515 i538 v396 i656 i468 i468 i469 i751 i720 v255 i688 i493 v612 i638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i860 
y: i4 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i860 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i752 i783 i151 i154 i156 i182 i184 i688 i719 i310 i313 i315 i337 i339 i541 i655 i451 i454 i456 i478 i539 i751 i637 i721 i785 i687 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d139 <|@
result v15|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 128]
rawvalue: 4.0
stableDimension: 0
stamp: f64! [4.0]
stampKind: f64
value: double[4.0|0x4010000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 v141 v300 v441 v628 v678 v742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d21 <|@
result v16|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 16]
rawvalue: 2.0
stableDimension: 0
stamp: f64! [2.0]
stampKind: f64
value: double[2.0|0x4000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d23 d52 d133 d525 d218 d294 d435 d622 d672 d736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result int[50|0x32] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 80]
rawvalue: 50
stableDimension: 0
stamp: i32 [50]
stampKind: i32
value: int[50|0x32]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 v268 v409 v519 v616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v516 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v517 #falseSuccessor: v516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   -1  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i106 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i857 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v520 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v521 #falseSuccessor: v520  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid d523 <|@
result v10|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d845 
y: d851 
=== Succesors ===
=== Usages ===
d524 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d845 y: d851  <|@  <|@
f <@~|@floating>@ <|@
tid d524 <|@
result v17|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d523 
y: d854 
=== Succesors ===
=== Usages ===
d525 d528 d528 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d523 y: d854  <|@  <|@
f <@~|@floating>@ <|@
tid d528 <|@
result v18|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d524 
y: d524 
=== Succesors ===
=== Usages ===
d530 d620 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d524 y: d524  <|@  <|@
f <@~|@floating>@ <|@
tid d525 <|@
result v19|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d524 
y: d21 
=== Succesors ===
=== Usages ===
d526 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d524 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d526 <|@
result v20|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d525 
y: d848 
=== Succesors ===
=== Usages ===
d527 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d525 y: d848  <|@  <|@
f <@~|@floating>@ <|@
tid d527 <|@
result v21|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d526 
y: d839 
=== Succesors ===
=== Usages ===
d529 d529 d623 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d526 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d529 <|@
result v22|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d527 
y: d527 
=== Succesors ===
=== Usages ===
d530 d620 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d527 y: d527  <|@  <|@
f <@~|@floating>@ <|@
tid d530 <|@
result v23|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d528 
y: d529 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d528 y: d529  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d530 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d530  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v533 #falseSuccessor: v532  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i538 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v536 
values: i860 i4 
=== Succesors ===
=== Usages ===
v612 i638 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v536 values: i860 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i539 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v536 
values: i863 i57 
=== Succesors ===
=== Usages ===
i430 i430 i637 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v536 values: i863 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v535 v537 
=== Succesors ===
next: v615 
=== Usages ===
i538 i539 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v537 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i538 
y: i4 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i538 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v613 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v614 #falseSuccessor: v613  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid i541 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i857 
y: i57 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i857 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i541 
y: i106 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i541 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v616 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v616 #trueSuccessor: v618 #falseSuccessor: v617  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid d620 <|@
result v27|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d528 
y: d529 
=== Succesors ===
=== Usages ===
d621 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d528 y: d529  <|@  <|@
f <@~|@floating>@ <|@
tid d621 <|@
result v28|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d620 
y: d854 
=== Succesors ===
=== Usages ===
d622 d625 d625 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d620 y: d854  <|@  <|@
f <@~|@floating>@ <|@
tid d625 <|@
result v29|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d621 
y: d621 
=== Succesors ===
=== Usages ===
d627 d660 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d621 y: d621  <|@  <|@
f <@~|@floating>@ <|@
tid d622 <|@
result v30|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d621 
y: d21 
=== Succesors ===
=== Usages ===
d623 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d621 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d623 <|@
result v31|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d527 
y: d622 
=== Succesors ===
=== Usages ===
d624 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d527 y: d622  <|@  <|@
f <@~|@floating>@ <|@
tid d624 <|@
result v32|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d623 
y: d839 
=== Succesors ===
=== Usages ===
d626 d626 d659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d623 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d626 <|@
result v33|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d624 
y: d624 
=== Succesors ===
=== Usages ===
d627 d658 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d624 y: d624  <|@  <|@
f <@~|@floating>@ <|@
tid d627 <|@
result v34|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d625 
y: d626 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d625 y: d626  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d627 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d627  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v628 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v628 #trueSuccessor: v630 #falseSuccessor: v629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i637 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v635 
values: i539 i57 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v635 values: i539 i57  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v635 
values: i538 i4 
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v635 values: i538 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v633 v634 
=== Succesors ===
next: v363 
=== Usages ===
i637 i638 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v633 v634 #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i789 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i790 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i857 
y: i789 
=== Succesors ===
=== Usages ===
i657 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i857 y: i789  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid d660 <|@
result v38|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v364 
values: d625 d438 d438 
=== Succesors ===
=== Usages ===
?379 d433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: d625 d438 d438  <|@  <|@
f <@~|@floating>@ <|@
tid d659 <|@
result v39|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v364 
values: d624 d437 d437 
=== Succesors ===
=== Usages ===
?379 d436 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: d624 d437 d437  <|@  <|@
f <@~|@floating>@ <|@
tid d658 <|@
result v40|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v364 
values: d626 d439 d439 
=== Succesors ===
=== Usages ===
?379 d433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: d626 d439 d439  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i790 i451 i451 
=== Succesors ===
=== Usages ===
?379 i451 v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: i790 i451 i451  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i638 i656 i4 
=== Succesors ===
=== Usages ===
?379 v396 i656 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: i638 i656 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i637 i655 i57 
=== Succesors ===
=== Usages ===
?379 i430 i430 i655 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v364 values: i637 i655 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 223
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
osrLoop: true
peelings: 2
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v363 
=== Succesors ===
next: v408 
=== Usages ===
d660 d659 d658 v398 i657 i656 i655 v413 v452 v607 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v363 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i656 
y: i4 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i656 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v396 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v396 #trueSuccessor: v398 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i657 
y: i106 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i657 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v409 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v409 #trueSuccessor: v431 #falseSuccessor: v413  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
tid ?379 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iload
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i827 i830 i833 i836 d839 - i842 d660 - d659 - d658 - d854 - i657 i656 i655 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i827 i830 i833 i836 d839 - i842 d660 - d659 - d658 - d854 - i657 i656 i655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateBefore: ?379 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?379 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i657 
y: i57 
=== Succesors ===
=== Usages ===
i657 i657 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i657 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d433 <|@
result v46|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d660 
y: d658 
=== Succesors ===
=== Usages ===
d434 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d660 y: d658  <|@  <|@
f <@~|@floating>@ <|@
tid d434 <|@
result v47|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d433 
y: d854 
=== Succesors ===
=== Usages ===
d435 d438 d438 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d433 y: d854  <|@  <|@
f <@~|@floating>@ <|@
tid d438 <|@
result v48|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d434 
y: d434 
=== Succesors ===
=== Usages ===
d660 d440 d660 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d434 y: d434  <|@  <|@
f <@~|@floating>@ <|@
tid d435 <|@
result v49|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d434 
y: d21 
=== Succesors ===
=== Usages ===
d436 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d434 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d436 <|@
result v50|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d435 
y: d659 
=== Succesors ===
=== Usages ===
d437 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d435 y: d659  <|@  <|@
f <@~|@floating>@ <|@
tid d437 <|@
result v51|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d436 
y: d839 
=== Succesors ===
=== Usages ===
d659 d439 d439 d659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d436 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d439 <|@
result v52|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d437 
y: d437 
=== Succesors ===
=== Usages ===
d658 d440 d658 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d437 y: d437  <|@  <|@
f <@~|@floating>@ <|@
tid d440 <|@
result v53|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d438 
y: d439 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d438 y: d439  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d440 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d440  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v364 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v364 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v364 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v364 #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v364 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v364 #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i430 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v411 
values: i655 i655 i863 i863 i539 i539 
=== Succesors ===
=== Usages ===
i455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v411 values: i655 i655 i863 i863 i539 i539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v410 v412 v609 v610 v791 v792 
=== Succesors ===
next: v460 
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v410 v412 v609 v610 v791 v792 #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 149]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i830 
y: i57 
=== Succesors ===
=== Usages ===
i455 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i830 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 152]
stamp: i32
=== Inputs ===
x: i430 
y: i454 
=== Succesors ===
=== Usages ===
i461 i468 i474 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i454  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v316 v457 i602 i606 i608 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i833 
y: i158 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i833 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 180]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i462 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 180]
stamp: i32
=== Inputs ===
x: i824 
y: i165 
=== Succesors ===
=== Usages ===
v463 v322 v167 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i824 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
profileData: PROFILED designatedSuccessorProbability: 0.12399999916610138
stamp: void
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v459 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v459 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 166]
stamp: i32
=== Inputs ===
x: i455 
y: i827 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i455 y: i827  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i462 
y: i842 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i462 y: i842  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.0015220706491220204
stamp: void
=== Inputs ===
condition: v463 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v463 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid i608 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 189]
stamp: i32
=== Inputs ===
x: i158 
y: i833 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i158 y: i833  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 190]
stamp: i32
=== Inputs ===
x: i455 
y: i608 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i455 y: i608  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 194]
stamp: i32
=== Inputs ===
x: i474 
y: i827 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i474 y: i827  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v470 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 154]
stamp: i32
=== Inputs ===
x: i833 
y: i57 
=== Succesors ===
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i833 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i467 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v465 
values: i461 i827 i475 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v465 values: i461 i827 i475  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v465 
values: i4 i455 i4 
=== Succesors ===
=== Usages ===
i493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v465 values: i4 i455 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v465 
values: i4 i456 i4 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v465 values: i4 i456 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v464 v466 v476 
=== Succesors ===
next: v197 
=== Usages ===
i467 i468 i469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v464 v466 v476 #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
=== Inputs ===
x: i842 
y: i57 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i842 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d219 <|@
result v68|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 56]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i824 
=== Succesors ===
=== Usages ===
d220 d25 d54 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i824  <|@  <|@
f <@~|@floating>@ <|@
tid d55 <|@
result v69|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 58]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d56 d221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d50 <|@
result v70|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
rawvalue: 0.0
stableDimension: 0
stamp: f64! [0.0]
stampKind: f64
value: double[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
d735 d671 d796 d795 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i497 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v198 
values: i478 i337 i337 i337 
=== Succesors ===
=== Usages ===
?312 v207 d217 v322 ?238 i337 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v198 values: i478 i337 i337 i337  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v198 
values: i469 i4 i4 i315 
=== Succesors ===
=== Usages ===
v316 i606 ?312 ?238 i315 i351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v198 values: i469 i4 i4 i315  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v198 
values: i468 i4 i4 i314 
=== Succesors ===
=== Usages ===
i313 i350 ?312 ?238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v198 values: i468 i4 i4 i314  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v198 
values: i467 i320 i334 i492 
=== Succesors ===
=== Usages ===
i492 i334 ?312 ?238 i320 i349 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v198 values: i467 i320 i334 i492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
osrLoop: true
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v197 
=== Succesors ===
next: v216 
=== Usages ===
i497 v338 v604 i494 i493 i492 v605 v208 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v197 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i824 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i824  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.9986666670314993
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v215 #falseSuccessor: v208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid d217 <|@
result v75|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 53]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i497 
=== Succesors ===
=== Usages ===
d218 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i497  <|@  <|@
f <@~|@floating>@ <|@
tid d218 <|@
result v76|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 54]
stamp: f64
=== Inputs ===
x: d217 
y: d21 
=== Succesors ===
=== Usages ===
d220 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d217 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d220 <|@
result v77|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 57]
stamp: f64
=== Inputs ===
x: d218 
y: d219 
=== Succesors ===
=== Usages ===
d221 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d218 y: d219  <|@  <|@
f <@~|@floating>@ <|@
tid d221 <|@
result v78|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 61]
stamp: f64
=== Inputs ===
x: d220 
y: d55 
=== Succesors ===
=== Usages ===
d293 ?238 d671 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d220 y: d55  <|@  <|@
f <@~|@floating>@ <|@
tid d671 <|@
result v79|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d221 
y: d50 
=== Succesors ===
=== Usages ===
d672 d675 d675 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d221 y: d50  <|@  <|@
f <@~|@floating>@ <|@
tid d675 <|@
result v80|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d671 
y: d671 
=== Succesors ===
=== Usages ===
d677 d723 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d671 y: d671  <|@  <|@
f <@~|@floating>@ <|@
tid d672 <|@
result v81|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d671 
y: d21 
=== Succesors ===
=== Usages ===
d795 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d671 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d795 <|@
result v82|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d672 
y: d50 
=== Succesors ===
=== Usages ===
d674 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d672 y: d50  <|@  <|@
f <@~|@floating>@ <|@
tid d674 <|@
result v83|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d795 
y: d839 
=== Succesors ===
=== Usages ===
d676 d676 d724 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d795 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d676 <|@
result v84|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d674 
y: d674 
=== Succesors ===
=== Usages ===
d677 d722 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d674 y: d674  <|@  <|@
f <@~|@floating>@ <|@
tid d677 <|@
result v85|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d675 
y: d676 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d675 y: d676  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d677 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d677  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v680 #falseSuccessor: v679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
v679 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i687 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v685 
values: i4 i57 
=== Succesors ===
=== Usages ===
i719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v685 values: i4 i57  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v685 
values: i57 i4 
=== Succesors ===
=== Usages ===
i720 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v685 values: i57 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v683 v684 
=== Succesors ===
next: v222 
=== Usages ===
i687 i688 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v683 v684 #next: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid d724 <|@
result v88|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v223 
values: d674 d296 d296 
=== Succesors ===
=== Usages ===
?238 d295 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: d674 d296 d296  <|@  <|@
f <@~|@floating>@ <|@
tid d723 <|@
result v89|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v223 
values: d675 d297 d297 
=== Succesors ===
=== Usages ===
?238 d292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: d675 d297 d297  <|@  <|@
f <@~|@floating>@ <|@
tid d722 <|@
result v90|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v223 
values: d676 d298 d298 
=== Succesors ===
=== Usages ===
?238 d292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: d676 d298 d298  <|@  <|@
f <@~|@floating>@ <|@
tid i721 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v223 
values: i57 i310 i310 
=== Succesors ===
=== Usages ===
?238 i310 v268 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: i57 i310 i310  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v223 
values: i688 i720 i4 
=== Succesors ===
=== Usages ===
?238 v255 i720 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: i688 i720 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i719 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v223 
values: i687 i719 i57 
=== Succesors ===
=== Usages ===
?238 ?312 i314 i719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v223 values: i687 i719 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 60
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v222 
=== Succesors ===
next: v267 
=== Usages ===
v311 v272 v257 d724 d723 d722 i721 i720 i719 v603 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v222 #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i720 
y: i4 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i720 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v257 #falseSuccessor: v256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i721 
y: i106 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i721 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v290 #falseSuccessor: v272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iload
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i492 i493 i494 i836 d839 - i497 d723 - d724 - d722 - d221 - i721 i720 i719 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i492 i493 i494 i836 d839 - i497 d723 - d724 - d722 - d221 - i721 i720 i719  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?238 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i721 
y: i57 
=== Succesors ===
=== Usages ===
i721 i721 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i721 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d292 <|@
result v96|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d723 
y: d722 
=== Succesors ===
=== Usages ===
d293 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d723 y: d722  <|@  <|@
f <@~|@floating>@ <|@
tid d293 <|@
result v97|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d221 
y: d292 
=== Succesors ===
=== Usages ===
d294 d297 d297 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d221 y: d292  <|@  <|@
f <@~|@floating>@ <|@
tid d297 <|@
result v98|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d293 
y: d293 
=== Succesors ===
=== Usages ===
d723 d299 d723 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d293 y: d293  <|@  <|@
f <@~|@floating>@ <|@
tid d294 <|@
result v99|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d293 
y: d21 
=== Succesors ===
=== Usages ===
d295 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d293 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d295 <|@
result v100|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d294 
y: d724 
=== Succesors ===
=== Usages ===
d296 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d294 y: d724  <|@  <|@
f <@~|@floating>@ <|@
tid d296 <|@
result v101|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d295 
y: d839 
=== Succesors ===
=== Usages ===
d724 d298 d298 d724 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d295 y: d839  <|@  <|@
f <@~|@floating>@ <|@
tid d298 <|@
result v102|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d296 
y: d296 
=== Succesors ===
=== Usages ===
d722 d299 d722 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d296 y: d296  <|@  <|@
f <@~|@floating>@ <|@
tid d299 <|@
result v103|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d297 
y: d298 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d297 y: d298  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d299 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d299  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v302 #falseSuccessor: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v223 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v223 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v271 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v271 #next: v812  <|@  <|@
tid ?312 <|@
d <@d|@=== Debug Properties ===
bci: 147
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i492 i493 i494 i836 d839 - i497 - - - - - - - - - - i719 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i492 i493 i494 i836 d839 - i497 - - - - - - - - - - i719  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
stateBefore: ?312 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?312 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 149]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i493 
y: i57 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i493 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 152]
stamp: i32
=== Inputs ===
x: i313 
y: i719 
=== Succesors ===
=== Usages ===
i320 i493 i333 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i313 y: i719  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
=== Inputs ===
x: i497 
y: i57 
=== Succesors ===
=== Usages ===
i497 i497 i497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i497 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i158 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i494 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
profileData: PROFILED designatedSuccessorProbability: 0.12399999916610138
stamp: void
=== Inputs ===
condition: v316 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v317 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v316 #trueSuccessor: v318 #falseSuccessor: v317  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 166]
stamp: i32
=== Inputs ===
x: i314 
y: i492 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i314 y: i492  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v198 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i462 
y: i497 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i462 y: i497  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.0015220706491220204
stamp: void
=== Inputs ===
condition: v322 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v322 #trueSuccessor: v329 #falseSuccessor: v330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 189]
stamp: i32
=== Inputs ===
x: i158 
y: i494 
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i158 y: i494  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 190]
stamp: i32
=== Inputs ===
x: i314 
y: i606 
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i314 y: i606  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 194]
stamp: i32
=== Inputs ===
x: i333 
y: i492 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i333 y: i492  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v198 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 154]
stamp: i32
=== Inputs ===
x: i494 
y: i57 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i494 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v198 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v198 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v198 #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: i32
=== Inputs ===
x: i836 
y: i57 
=== Succesors ===
=== Usages ===
i352 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i836 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d26 <|@
result v115|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 26]
rawvalue: 1.0
stableDimension: 0
stamp: f64! [1.0]
stampKind: f64
value: double[1.0|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i352 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i339 i184 
=== Succesors ===
=== Usages ===
?47 v14 d22 ?153 ?75 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i339 i184  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i494 i34 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i494 i34  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i493 i33 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i493 i33  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i492 i32 
=== Succesors ===
=== Usages ===
i32 v186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i492 i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
osrLoop: true
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v20 
=== Usages ===
i352 i351 i350 i349 v185 v16 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 13]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i352 
y: i824 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i352 y: i824  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 0.9986676830062805
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v19 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid d22 <|@
result v120|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 21]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i352 
=== Succesors ===
=== Usages ===
d23 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i352  <|@  <|@
f <@~|@floating>@ <|@
tid d23 <|@
result v121|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 22]
stamp: f64
=== Inputs ===
x: d22 
y: d21 
=== Succesors ===
=== Usages ===
d25 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d22 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d25 <|@
result v122|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 25]
stamp: f64
=== Inputs ===
x: d23 
y: d219 
=== Succesors ===
=== Usages ===
d27 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d23 y: d219  <|@  <|@
f <@~|@floating>@ <|@
tid d27 <|@
result v123|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 27]
stamp: f64
=== Inputs ===
x: d25 
y: d26 
=== Succesors ===
=== Usages ===
?153 d738 d135 ?75 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d25 y: d26  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i32 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i349 i163 i179 i32 
=== Succesors ===
=== Usages ===
i179 i349 ?153 ?75 i163 ?47 i32 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i349 i163 i179 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i350 i4 i4 i155 
=== Succesors ===
=== Usages ===
?47 i350 ?153 ?75 i154 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i350 i4 i4 i155  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i351 i4 i4 i156 
=== Succesors ===
=== Usages ===
i602 i351 ?153 ?75 i156 ?47 v159 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i351 i4 i4 i156  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i4 i182 i182 i182 
=== Succesors ===
=== Usages ===
?153 v39 d51 v167 ?75 i182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i4 i182 i182 i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v29 
=== Succesors ===
next: v49 
=== Usages ===
v601 i32 i33 i34 v600 v183 i37 v41 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v29 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i824 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i37 y: i824  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.9986684424410921
stamp: void
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v48 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid d51 <|@
result v128|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 53]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i37 
=== Succesors ===
=== Usages ===
d52 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i37  <|@  <|@
f <@~|@floating>@ <|@
tid d52 <|@
result v129|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 54]
stamp: f64
=== Inputs ===
x: d51 
y: d21 
=== Succesors ===
=== Usages ===
d54 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d51 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d54 <|@
result v130|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 57]
stamp: f64
=== Inputs ===
x: d52 
y: d219 
=== Succesors ===
=== Usages ===
d56 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d52 y: d219  <|@  <|@
f <@~|@floating>@ <|@
tid d56 <|@
result v131|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 61]
stamp: f64
=== Inputs ===
x: d54 
y: d55 
=== Succesors ===
=== Usages ===
d132 ?75 d735 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d54 y: d55  <|@  <|@
f <@~|@floating>@ <|@
tid d735 <|@
result v132|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d56 
y: d50 
=== Succesors ===
=== Usages ===
d736 d739 d739 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d56 y: d50  <|@  <|@
f <@~|@floating>@ <|@
tid d739 <|@
result v133|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d735 
y: d735 
=== Succesors ===
=== Usages ===
d741 d787 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d735 y: d735  <|@  <|@
f <@~|@floating>@ <|@
tid d736 <|@
result v134|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d735 
y: d21 
=== Succesors ===
=== Usages ===
d796 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d735 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d796 <|@
result v135|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d736 
y: d50 
=== Succesors ===
=== Usages ===
d738 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d736 y: d50  <|@  <|@
f <@~|@floating>@ <|@
tid d738 <|@
result v136|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d27 
y: d796 
=== Succesors ===
=== Usages ===
d740 d740 d788 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d27 y: d796  <|@  <|@
f <@~|@floating>@ <|@
tid d740 <|@
result v137|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d738 
y: d738 
=== Succesors ===
=== Usages ===
d741 d786 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d738 y: d738  <|@  <|@
f <@~|@floating>@ <|@
tid d741 <|@
result v138|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d739 
y: d740 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d739 y: d740  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d741 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d741  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v742 
=== Succesors ===
trueSuccessor: v744 
falseSuccessor: v743 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v742 #trueSuccessor: v744 #falseSuccessor: v743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v743 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i751 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v749 
values: i4 i57 
=== Succesors ===
=== Usages ===
i783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v749 values: i4 i57  <|@  <|@
f <@~|@floating>@ <|@
tid i752 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v749 
values: i57 i4 
=== Succesors ===
=== Usages ===
i784 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v749 values: i57 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v747 v748 
=== Succesors ===
next: v59 
=== Usages ===
i751 i752 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v747 v748 #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid d788 <|@
result v141|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v60 
values: d738 d135 d135 
=== Succesors ===
=== Usages ===
?75 d134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: d738 d135 d135  <|@  <|@
f <@~|@floating>@ <|@
tid d787 <|@
result v142|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v60 
values: d739 d136 d136 
=== Succesors ===
=== Usages ===
?75 d131 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: d739 d136 d136  <|@  <|@
f <@~|@floating>@ <|@
tid d786 <|@
result v143|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v60 
values: d740 d137 d137 
=== Succesors ===
=== Usages ===
?75 d131 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: d740 d137 d137  <|@  <|@
f <@~|@floating>@ <|@
tid i785 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v60 
values: i57 i151 i151 
=== Succesors ===
=== Usages ===
?75 i151 v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: i57 i151 i151  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v60 
values: i752 i784 i4 
=== Succesors ===
=== Usages ===
?75 v92 i784 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: i752 i784 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i783 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v60 
values: i751 i783 i57 
=== Succesors ===
=== Usages ===
?75 ?153 i155 i783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v60 values: i751 i783 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v59 
=== Succesors ===
next: v105 
=== Usages ===
v152 v111 v95 d788 d787 d786 i785 i784 i783 v599 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v59 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i784 
y: i4 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i784 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02637967163659351
stamp: void
=== Inputs ===
condition: v92 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v92 #trueSuccessor: v95 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i785 
y: i106 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i785 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9592378571951741
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v129 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v129 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iload
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i32 i33 i34 i352 d27 - i37 d787 - d788 - d786 - d56 - i785 i784 i783 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i32 i33 i34 i352 d27 - i37 d787 - d788 - d786 - d56 - i785 i784 i783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateBefore: ?75 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?75 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i785 
y: i57 
=== Succesors ===
=== Usages ===
i785 i785 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i785 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid d131 <|@
result v149|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d787 
y: d786 
=== Succesors ===
=== Usages ===
d132 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d787 y: d786  <|@  <|@
f <@~|@floating>@ <|@
tid d132 <|@
result v150|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d56 
y: d131 
=== Succesors ===
=== Usages ===
d133 d136 d136 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d56 y: d131  <|@  <|@
f <@~|@floating>@ <|@
tid d136 <|@
result v151|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d132 
y: d132 
=== Succesors ===
=== Usages ===
d138 d787 d787 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d132 y: d132  <|@  <|@
f <@~|@floating>@ <|@
tid d133 <|@
result v152|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d132 
y: d21 
=== Succesors ===
=== Usages ===
d134 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d132 y: d21  <|@  <|@
f <@~|@floating>@ <|@
tid d134 <|@
result v153|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d133 
y: d788 
=== Succesors ===
=== Usages ===
d135 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d133 y: d788  <|@  <|@
f <@~|@floating>@ <|@
tid d135 <|@
result v154|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d27 
y: d134 
=== Succesors ===
=== Usages ===
d137 d137 d788 d788 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d27 y: d134  <|@  <|@
f <@~|@floating>@ <|@
tid d137 <|@
result v155|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d135 
y: d135 
=== Succesors ===
=== Usages ===
d138 d786 d786 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d135 y: d135  <|@  <|@
f <@~|@floating>@ <|@
tid d138 <|@
result v156|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d136 
y: d137 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d136 y: d137  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d139 
y: d138 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d139 y: d138  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.028245570261643316
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v143 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v599  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v60 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v60 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v60 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v60 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v108 v110 
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v108 v110 #next: v809  <|@  <|@
tid ?153 <|@
d <@d|@=== Debug Properties ===
bci: 147
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i32 i33 i34 i352 d27 - i37 - - - - - - - - - - i783 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i32 i33 i34 i352 d27 - i37 - - - - - - - - - - i783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
stateBefore: ?153 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?153 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v158|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 149]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i33 
y: i57 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i33 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v159|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 152]
stamp: i32
=== Inputs ===
x: i154 
y: i783 
=== Succesors ===
=== Usages ===
i163 i33 i178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i154 y: i783  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result v160|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
=== Inputs ===
x: i37 
y: i57 
=== Succesors ===
=== Usages ===
i37 i37 i37 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i37 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i158 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i34 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
profileData: PROFILED designatedSuccessorProbability: 0.12399999916610138
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v161 #falseSuccessor: v160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 166]
stamp: i32
=== Inputs ===
x: i32 
y: i155 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i32 y: i155  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i462 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i37 y: i462  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.0015220706491220204
stamp: void
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v174 #falseSuccessor: v175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid i602 <|@
result v163|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 189]
stamp: i32
=== Inputs ===
x: i158 
y: i34 
=== Succesors ===
=== Usages ===
i178 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i158 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v164|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 190]
stamp: i32
=== Inputs ===
x: i155 
y: i602 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i155 y: i602  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result v165|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 194]
stamp: i32
=== Inputs ===
x: i32 
y: i178 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i32 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result v166|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 154]
stamp: i32
=== Inputs ===
x: i34 
y: i57 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i34 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v806  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 207
bytecode: iinc
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i824 i32 i33 i34 i352 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i824 i32 i33 i34 i352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?47 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?47 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v168|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: i32
=== Inputs ===
x: i352 
y: i57 
=== Succesors ===
=== Usages ===
i352 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i352 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 213]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v186  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 214]
stamp: void
=== Inputs ===
memoryMap: - 
result: i349 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   -1  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   -1  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   -1  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   -1  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   -1  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   64  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   66  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   68  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   76  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   78  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   80  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   82  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   84  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   94  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   96  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  152  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr  154  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  156  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  166  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  178  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  250  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  252  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  254  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  256  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  258  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  260  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr  262  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr  264  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  266  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  278  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  296  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  370  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr  374  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  376  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  378  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  380  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr  382  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  384  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr  386  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr  388  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  390  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr  500  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  568  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  572  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  640  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  642  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr  644  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  646  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr  648  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  650  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  652  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  654  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr  656  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr  658  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  660  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  672  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  682  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  756  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr  760  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr  762  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr  764  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  766  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr  768  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  770  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr  772  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr  774  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  776  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  840  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr  842  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  918  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  942  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr  946  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  984  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  986  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr  990  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1058  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr 1060  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr 1062  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1064  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr 1066  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1068  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1070  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr 1072  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr 1074  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr 1076  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1078  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1090  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1100  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1174  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr 1178  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr 1180  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr 1182  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1184  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr 1186  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr 1188  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr 1190  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr 1192  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1194  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1258  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr 1260  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1336  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1362  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr 1364  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1418  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   64  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   66  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   68  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   76  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   78  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   80  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   82  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   84  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   94  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   96  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  152  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr  154  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  156  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  166  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  178  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  250  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  252  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  254  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  256  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  258  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  260  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr  262  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr  264  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  266  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  278  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  296  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  370  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr  374  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  376  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  378  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  380  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr  382  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  384  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr  386  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr  388  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  390  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr  500  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  568  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  572  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  640  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  642  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr  644  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  646  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr  648  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  650  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  652  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  654  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr  656  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr  658  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  660  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  672  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  682  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  756  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr  760  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr  762  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr  764  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  766  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr  768  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  770  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr  772  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr  774  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  776  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  840  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr  842  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  918  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  942  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr  946  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  984  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  986  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr  990  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1058  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr 1060  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr 1062  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1064  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr 1066  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1068  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1070  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr 1072  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr 1074  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr 1076  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1078  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1090  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1100  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1174  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr 1178  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr 1180  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr 1182  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1184  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr 1186  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr 1188  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr 1190  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr 1192  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1194  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1258  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr 1260  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1336  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1362  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr 1364  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1418  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v119|d [0, 1[[1384, 1386[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v110|d [0, 1[[920, 923[[1338, 1341[[1420, 1423[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 56[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 60[[90, 92[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [60, 90[60 MustHaveRegister 62 MustHaveRegister 64 MustHaveRegister 66 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [62, 1366[[1388, 1428[62 MustHaveRegister 502 ShouldHaveRegister 564 ShouldHaveRegister 582 MustHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 956 MustHaveRegister 1000 MustHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d v64|d [64, 531[[532, 542[[1388, 1424[64 MustHaveRegister 530 ShouldHaveRegister 542 ShouldHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [66, 498[[1388, 1398[66 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [68, 528[[1388, 1419[68 MustHaveRegister 504 ShouldHaveRegister 528 ShouldHaveRegister 1418 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [70, 940[[1388, 1428[70 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v6|D DOUBLE "[v6|D]" v6|D -1 [72, 928[[1388, 1428[72 MustHaveRegister 158 ShouldHaveRegister 258 ShouldHaveRegister 382 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 652 ShouldHaveRegister 768 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [74, 562[[1388, 1428[74 MustHaveRegister 516 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v8|D DOUBLE "[v8|D]" v8|D -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v9|D DOUBLE "[v9|D]" v9|D -1 [78, 156[78 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v10|D DOUBLE "[v10|D]" v10|D -1 [80, 150[80 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v11|D DOUBLE "[v11|D]" v11|D -1 [82, 412[[462, 472[[1388, 1398[82 MustHaveRegister 150 ShouldHaveRegister 250 ShouldHaveRegister 374 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [84, 292[[462, 472[[1388, 1398[84 MustHaveRegister 110 ShouldHaveRegister 202 ShouldHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v24|d [86, 177[86 MustHaveRegister 98 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v25|d [88, 177[[432, 441[[452, 461[88 MustHaveRegister 176 ShouldHaveRegister 440 ShouldHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v15|D DOUBLE "[v15|D]" v15|D -1 [94, 1366[[1388, 1428[94 MustHaveRegister 164 ShouldHaveRegister 264 ShouldHaveRegister 388 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 658 ShouldHaveRegister 774 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1076 ShouldHaveRegister 1192 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v16|D DOUBLE "[v16|D]" v16|D -1 [96, 1366[[1388, 1428[96 MustHaveRegister 154 ShouldHaveRegister 254 ShouldHaveRegister 378 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 638 ShouldHaveRegister 648 ShouldHaveRegister 764 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 982 ShouldHaveRegister 1056 ShouldHaveRegister 1066 ShouldHaveRegister 1182 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v17|D DOUBLE "[v17|D]" v17|D -1 [150, 154[150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v18|D DOUBLE "[v18|D]" v18|D -1 [152, 248[[462, 472[152 MustHaveRegister 162 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v19|D DOUBLE "[v19|D]" v19|D -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v20|D DOUBLE "[v20|D]" v20|D -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v21|D DOUBLE "[v21|D]" v21|D -1 [158, 256[[462, 472[158 MustHaveRegister 160 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v22|D DOUBLE "[v22|D]" v22|D -1 [160, 248[[462, 472[160 MustHaveRegister 162 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v23|D DOUBLE "[v23|D]" v23|D -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v13|d [178, 277[188 MustHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v14|d [178, 277[[442, 451[[472, 481[276 ShouldHaveRegister 450 ShouldHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v12|d [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v27|D DOUBLE "[v27|D]" v27|D -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v28|D DOUBLE "[v28|D]" v28|D -1 [250, 254[250 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v29|D DOUBLE "[v29|D]" v29|D -1 [252, 295[[1388, 1398[252 MustHaveRegister 262 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v30|D DOUBLE "[v30|D]" v30|D -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v31|D DOUBLE "[v31|D]" v31|D -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v32|D DOUBLE "[v32|D]" v32|D -1 [258, 295[[1388, 1398[258 MustHaveRegister 260 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v33|D DOUBLE "[v33|D]" v33|D -1 [260, 295[[1388, 1398[260 MustHaveRegister 262 ShouldHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v34|D DOUBLE "[v34|D]" v34|D -1 [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v25|d [278, 295[294 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d v24|d [278, 295[294 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v38|D DOUBLE "[v38|D]" v38|D v48|D [296, 372[372 MustHaveRegister  "NoSpillStore"
  v39|D DOUBLE "[v39|D]" v39|D v51|D [296, 380[380 ShouldHaveRegister  "NoSpillStore"
  v40|D DOUBLE "[v40|D]" v40|D v52|D [296, 372[372 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v45|d [296, 370[318 ShouldHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d v42|d [296, 401[306 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v43|d [296, 401[[412, 421[[422, 431[400 ShouldHaveRegister 420 ShouldHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [368, 369[368 MustHaveRegister  "NoDefinitionFound"
  v45|d DWORD "[v45|d]" v45|d v41|d [370, 401[[402, 411[370 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v46|D DOUBLE "[v46|D]" v46|D -1 [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v47|D DOUBLE "[v47|D]" v47|D -1 [374, 378[374 MustHaveRegister 376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v48|D DOUBLE "[v48|D]" v48|D v38|D [376, 401[[402, 411[376 MustHaveRegister 386 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v49|D DOUBLE "[v49|D]" v49|D -1 [378, 380[378 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v50|D DOUBLE "[v50|D]" v50|D -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v51|D DOUBLE "[v51|D]" v51|D v39|D [382, 401[[402, 411[382 MustHaveRegister 384 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v52|D DOUBLE "[v52|D]" v52|D v40|D [384, 401[[402, 411[384 MustHaveRegister 386 ShouldHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v53|D DOUBLE "[v53|D]" v53|D -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v43|d [482, 500[500 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d v3|d [498, 500[498 MustHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v54|d [500, 531[[532, 542[[1398, 1422[500 MustHaveRegister 530 ShouldHaveRegister 542 ShouldHaveRegister 1422 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v1|d [502, 1366[[1398, 1428[502 MustHaveRegister 516 ShouldHaveRegister 858 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1276 MustHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v56|d [542, 545[542 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d v59|d [1418, 1420[1418 MustHaveRegister 1420 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d v56|d [1422, 1424[1422 MustHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v61|d [1424, 1427[1424 MustHaveRegister 1426 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d v4|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d v2|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d v56|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d v63|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v67|d DWORD "[v67|d]" v67|d v7|d [562, 571[562 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v68|D DOUBLE "[v68|D]" v68|D -1 [564, 1366[564 MustHaveRegister 640 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 984 ShouldHaveRegister 1058 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v69|D DOUBLE "[v69|D]" v69|D -1 [566, 1366[566 MustHaveRegister 642 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1060 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v70|D DOUBLE "[v70|D]" v70|D -1 [568, 1366[568 MustHaveRegister 644 ShouldHaveRegister 650 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1062 ShouldHaveRegister 1068 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d v107|d [572, 858[[888, 898[582 ShouldHaveRegister 636 ShouldHaveRegister 844 ShouldHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d v113|d [572, 870[[888, 919[[928, 945[846 ShouldHaveRegister 870 ShouldHaveRegister 918 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d v106|d [572, 840[[888, 898[[928, 945[840 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d v74|d [572, 873[[874, 884[[888, 924[[928, 945[872 ShouldHaveRegister 884 ShouldHaveRegister 924 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v75|D DOUBLE "[v75|D]" v75|D -1 [636, 638[636 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v76|D DOUBLE "[v76|D]" v76|D -1 [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v77|D DOUBLE "[v77|D]" v77|D -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v78|D DOUBLE "[v78|D]" v78|D -1 [642, 798[[888, 898[642 MustHaveRegister 644 MustHaveRegister 760 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd  "NoSpillStore"
  v79|D DOUBLE "[v79|D]" v79|D -1 [644, 648[644 MustHaveRegister 646 MustHaveRegister 648 MustHaveRegister  "NoSpillStore"
  v80|D DOUBLE "[v80|D]" v80|D -1 [646, 681[[888, 898[646 MustHaveRegister 656 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v81|D DOUBLE "[v81|D]" v81|D -1 [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v82|D DOUBLE "[v82|D]" v82|D -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v83|D DOUBLE "[v83|D]" v83|D -1 [652, 681[[888, 898[652 MustHaveRegister 654 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v84|D DOUBLE "[v84|D]" v84|D -1 [654, 681[[888, 898[654 MustHaveRegister 656 ShouldHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v85|D DOUBLE "[v85|D]" v85|D -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [672, 681[680 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [672, 681[680 ShouldHaveRegister  "NoSpillStore"
  v88|D DOUBLE "[v88|D]" v88|D v101|D [682, 766[766 ShouldHaveRegister  "NoSpillStore"
  v89|D DOUBLE "[v89|D]" v89|D v98|D [682, 758[758 MustHaveRegister  "NoSpillStore"
  v90|D DOUBLE "[v90|D]" v90|D v102|D [682, 758[758 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d v95|d [682, 756[704 ShouldHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d v92|d [682, 787[692 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d v93|d [682, 787[[798, 842[786 ShouldHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q -1 [754, 755[754 MustHaveRegister  "NoDefinitionFound"
  v95|d DWORD "[v95|d]" v95|d v91|d [756, 787[[788, 797[756 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v96|D DOUBLE "[v96|D]" v96|D -1 [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v97|D DOUBLE "[v97|D]" v97|D -1 [760, 764[760 MustHaveRegister 762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v98|D DOUBLE "[v98|D]" v98|D v89|D [762, 787[[788, 797[762 MustHaveRegister 772 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v99|D DOUBLE "[v99|D]" v99|D -1 [764, 766[764 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v100|D DOUBLE "[v100|D]" v100|D -1 [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v101|D DOUBLE "[v101|D]" v101|D v88|D [768, 787[[788, 797[768 MustHaveRegister 770 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v102|D DOUBLE "[v102|D]" v102|D v90|D [770, 787[[788, 797[770 MustHaveRegister 772 ShouldHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v103|D DOUBLE "[v103|D]" v103|D -1 [772, 774[772 MustHaveRegister 774 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[v104|q]" v104|q -1 [838, 839[838 MustHaveRegister  "NoDefinitionFound"
  v105|d DWORD "[v105|d]" v105|d v73|d [840, 842[840 MustHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d v105|d [842, 873[[874, 884[[898, 922[842 MustHaveRegister 872 ShouldHaveRegister 884 ShouldHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[v107|d]" v107|d v71|d [844, 873[[874, 887[[898, 927[844 MustHaveRegister 872 ShouldHaveRegister 886 ShouldHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[v108|d]" v108|d v106|d [884, 887[884 MustHaveRegister 886 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[v109|d]" v109|d -1 [916, 918[916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d v109|d [918, 920[918 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d v106|d [922, 924[922 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[v112|d]" v112|d v111|d [924, 927[924 MustHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[v113|d]" v113|d v72|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[v114|d]" v114|d v5|d [940, 945[940 MustHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v115|D DOUBLE "[v115|D]" v115|D -1 [942, 1366[942 MustHaveRegister 986 ShouldHaveRegister 1365 LiveAtLoopEnd  "NoSpillStore"
  v116|d DWORD "[v116|d]" v116|d v168|d [946, 1362[956 ShouldHaveRegister 980 ShouldHaveRegister 1362 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[v117|d]" v117|d v126|d [946, 989[988 ShouldHaveRegister  "NoSpillStore"
  v118|d DWORD "[v118|d]" v118|d v125|d [946, 989[988 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[v119|d]" v119|d v124|d [946, 989[[1366, 1384[988 ShouldHaveRegister 1384 ShouldHaveRegister  "NoSpillStore"
  v120|D DOUBLE "[v120|D]" v120|D -1 [980, 982[980 MustHaveRegister 982 MustHaveRegister  "NoSpillStore"
  v121|D DOUBLE "[v121|D]" v121|D -1 [982, 984[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v122|D DOUBLE "[v122|D]" v122|D -1 [984, 986[984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v123|D DOUBLE "[v123|D]" v123|D -1 [986, 1346[986 MustHaveRegister 1070 MustHaveRegister 1186 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v124|d DWORD "[v124|d]" v124|d v124|d [990, 1291[[1292, 1302[[1306, 1342[[1346, 1365[1290 ShouldHaveRegister 1302 ShouldHaveRegister 1342 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[v125|d]" v125|d v118|d [990, 1258[[1306, 1316[[1346, 1365[1258 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v126|d DWORD "[v126|d]" v126|d v117|d [990, 1288[[1306, 1337[[1346, 1365[1264 ShouldHaveRegister 1288 ShouldHaveRegister 1336 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v127|d DWORD "[v127|d]" v127|d v160|d [990, 1276[[1306, 1316[1000 ShouldHaveRegister 1054 ShouldHaveRegister 1262 ShouldHaveRegister 1276 ShouldHaveRegister  "NoSpillStore"
  v128|D DOUBLE "[v128|D]" v128|D -1 [1054, 1056[1054 MustHaveRegister 1056 MustHaveRegister  "NoSpillStore"
  v129|D DOUBLE "[v129|D]" v129|D -1 [1056, 1058[1056 MustHaveRegister 1058 MustHaveRegister  "NoSpillStore"
  v130|D DOUBLE "[v130|D]" v130|D -1 [1058, 1060[1058 MustHaveRegister 1060 MustHaveRegister  "NoSpillStore"
  v131|D DOUBLE "[v131|D]" v131|D -1 [1060, 1216[[1306, 1316[1060 MustHaveRegister 1062 MustHaveRegister 1178 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd  "NoSpillStore"
  v132|D DOUBLE "[v132|D]" v132|D -1 [1062, 1066[1062 MustHaveRegister 1064 MustHaveRegister 1066 MustHaveRegister  "NoSpillStore"
  v133|D DOUBLE "[v133|D]" v133|D -1 [1064, 1099[[1306, 1316[1064 MustHaveRegister 1074 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v134|D DOUBLE "[v134|D]" v134|D -1 [1066, 1068[1066 MustHaveRegister 1068 MustHaveRegister  "NoSpillStore"
  v135|D DOUBLE "[v135|D]" v135|D -1 [1068, 1070[1068 MustHaveRegister 1070 ShouldHaveRegister  "NoSpillStore"
  v136|D DOUBLE "[v136|D]" v136|D -1 [1070, 1099[[1306, 1316[1070 MustHaveRegister 1072 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v137|D DOUBLE "[v137|D]" v137|D -1 [1072, 1099[[1306, 1316[1072 MustHaveRegister 1074 ShouldHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v138|D DOUBLE "[v138|D]" v138|D -1 [1074, 1076[1074 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v139|d DWORD "[v139|d]" v139|d -1 [1090, 1099[1098 ShouldHaveRegister  "NoSpillStore"
  v140|d DWORD "[v140|d]" v140|d -1 [1090, 1099[1098 ShouldHaveRegister  "NoSpillStore"
  v141|D DOUBLE "[v141|D]" v141|D v154|D [1100, 1184[1184 ShouldHaveRegister  "NoSpillStore"
  v142|D DOUBLE "[v142|D]" v142|D v151|D [1100, 1176[1176 MustHaveRegister  "NoSpillStore"
  v143|D DOUBLE "[v143|D]" v143|D v155|D [1100, 1176[1176 ShouldHaveRegister  "NoSpillStore"
  v144|d DWORD "[v144|d]" v144|d v148|d [1100, 1174[1122 ShouldHaveRegister 1174 ShouldHaveRegister  "NoSpillStore"
  v145|d DWORD "[v145|d]" v145|d v145|d [1100, 1205[1110 MustHaveRegister 1204 ShouldHaveRegister  "NoSpillStore"
  v146|d DWORD "[v146|d]" v146|d v146|d [1100, 1205[[1216, 1260[1204 ShouldHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v147|q QWORD "[v147|q]" v147|q -1 [1172, 1173[1172 MustHaveRegister  "NoDefinitionFound"
  v148|d DWORD "[v148|d]" v148|d v144|d [1174, 1205[[1206, 1215[1174 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v149|D DOUBLE "[v149|D]" v149|D -1 [1176, 1178[1176 MustHaveRegister 1178 MustHaveRegister  "NoSpillStore"
  v150|D DOUBLE "[v150|D]" v150|D -1 [1178, 1182[1178 MustHaveRegister 1180 MustHaveRegister 1182 MustHaveRegister  "NoSpillStore"
  v151|D DOUBLE "[v151|D]" v151|D v142|D [1180, 1205[[1206, 1215[1180 MustHaveRegister 1190 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v152|D DOUBLE "[v152|D]" v152|D -1 [1182, 1184[1182 MustHaveRegister 1184 MustHaveRegister  "NoSpillStore"
  v153|D DOUBLE "[v153|D]" v153|D -1 [1184, 1186[1184 MustHaveRegister 1186 MustHaveRegister  "NoSpillStore"
  v154|D DOUBLE "[v154|D]" v154|D v141|D [1186, 1205[[1206, 1215[1186 MustHaveRegister 1188 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v155|D DOUBLE "[v155|D]" v155|D v143|D [1188, 1205[[1206, 1215[1188 MustHaveRegister 1190 ShouldHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v156|D DOUBLE "[v156|D]" v156|D -1 [1190, 1192[1190 MustHaveRegister 1192 MustHaveRegister  "NoSpillStore"
  v157|q QWORD "[v157|q]" v157|q -1 [1256, 1257[1256 MustHaveRegister  "NoDefinitionFound"
  v158|d DWORD "[v158|d]" v158|d v125|d [1258, 1260[1258 MustHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v159|d DWORD "[v159|d]" v159|d v158|d [1260, 1291[[1292, 1302[[1316, 1340[1260 MustHaveRegister 1290 ShouldHaveRegister 1302 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v160|d DWORD "[v160|d]" v160|d v127|d [1262, 1291[[1292, 1305[[1316, 1345[1262 MustHaveRegister 1290 ShouldHaveRegister 1304 ShouldHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v161|d DWORD "[v161|d]" v161|d v124|d [1302, 1305[1302 MustHaveRegister 1304 ShouldHaveRegister  "NoSpillStore"
  v162|d DWORD "[v162|d]" v162|d -1 [1334, 1336[1334 MustHaveRegister 1336 MustHaveRegister  "NoSpillStore"
  v163|d DWORD "[v163|d]" v163|d v162|d [1336, 1338[1336 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v164|d DWORD "[v164|d]" v164|d v159|d [1340, 1342[1340 MustHaveRegister 1342 ShouldHaveRegister  "NoSpillStore"
  v165|d DWORD "[v165|d]" v165|d v124|d [1342, 1345[1342 MustHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v166|d DWORD "[v166|d]" v166|d v126|d [1288, 1291[1288 MustHaveRegister 1290 ShouldHaveRegister  "NoSpillStore"
  v167|q QWORD "[v167|q]" v167|q -1 [1360, 1361[1360 MustHaveRegister  "NoDefinitionFound"
  v168|d DWORD "[v168|d]" v168|d v116|d [1362, 1365[1362 MustHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v119|d [0, 1[[1384, 1386[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v110|d [0, 1[[920, 923[[1338, 1341[[1420, 1423[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 56[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 60[[90, 92[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [60, 90[60 MustHaveRegister 62 MustHaveRegister 64 MustHaveRegister 66 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [62, 1366[[1388, 1428[62 MustHaveRegister 502 ShouldHaveRegister 564 ShouldHaveRegister 582 MustHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 956 MustHaveRegister 1000 MustHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d v64|d [64, 531[[532, 542[[1388, 1424[64 MustHaveRegister 530 ShouldHaveRegister 542 ShouldHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [66, 498[[1388, 1398[66 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [68, 528[[1388, 1419[68 MustHaveRegister 504 ShouldHaveRegister 528 ShouldHaveRegister 1418 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [70, 940[[1388, 1428[70 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v6|D DOUBLE "[xmm0|D]" v6|D -1 [72, 928[[1388, 1428[72 MustHaveRegister 158 ShouldHaveRegister 258 ShouldHaveRegister 382 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 652 ShouldHaveRegister 768 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [74, 562[[1388, 1428[74 MustHaveRegister 516 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v8|D DOUBLE "[xmm1|D]" v8|D -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v9|D DOUBLE "[xmm2|D]" v9|D -1 [78, 156[78 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v10|D DOUBLE "[xmm1|D]" v10|D -1 [80, 150[80 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v11|D DOUBLE "[xmm3|D]" v11|D -1 [82, 412[[462, 472[[1388, 1398[82 MustHaveRegister 150 ShouldHaveRegister 250 ShouldHaveRegister 374 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d -1 [84, 292[[462, 472[[1388, 1398[84 MustHaveRegister 110 ShouldHaveRegister 202 ShouldHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v24|d [86, 177[86 MustHaveRegister 98 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdx|d]" v14|d v25|d [88, 177[[432, 441[[452, 461[88 MustHaveRegister 176 ShouldHaveRegister 440 ShouldHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v15|D DOUBLE "[xmm4|D]" v15|D -1 [94, 1366[[1388, 1428[94 MustHaveRegister 164 ShouldHaveRegister 264 ShouldHaveRegister 388 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 658 ShouldHaveRegister 774 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1076 ShouldHaveRegister 1192 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v16|D DOUBLE "[xmm5|D]" v16|D -1 [96, 1366[[1388, 1428[96 MustHaveRegister 154 ShouldHaveRegister 254 ShouldHaveRegister 378 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 638 ShouldHaveRegister 648 ShouldHaveRegister 764 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 982 ShouldHaveRegister 1056 ShouldHaveRegister 1066 ShouldHaveRegister 1182 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v17|D DOUBLE "[xmm1|D]" v17|D -1 [150, 154[150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v18|D DOUBLE "[xmm6|D]" v18|D -1 [152, 248[[462, 472[152 MustHaveRegister 162 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v19|D DOUBLE "[xmm1|D]" v19|D -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v20|D DOUBLE "[xmm1|D]" v20|D -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v21|D DOUBLE "[xmm1|D]" v21|D -1 [158, 256[[462, 472[158 MustHaveRegister 160 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v22|D DOUBLE "[xmm2|D]" v22|D -1 [160, 248[[462, 472[160 MustHaveRegister 162 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v23|D DOUBLE "[xmm7|D]" v23|D -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d v13|d [178, 277[188 MustHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rdx|d]" v25|d v14|d [178, 277[[442, 451[[472, 481[276 ShouldHaveRegister 450 ShouldHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d v12|d [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v27|D DOUBLE "[xmm2|D]" v27|D -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v28|D DOUBLE "[xmm2|D]" v28|D -1 [250, 254[250 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v29|D DOUBLE "[xmm6|D]" v29|D -1 [252, 295[[1388, 1398[252 MustHaveRegister 262 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v30|D DOUBLE "[xmm2|D]" v30|D -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v31|D DOUBLE "[xmm1|D]" v31|D -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v32|D DOUBLE "[xmm1|D]" v32|D -1 [258, 295[[1388, 1398[258 MustHaveRegister 260 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v33|D DOUBLE "[xmm2|D]" v33|D -1 [260, 295[[1388, 1398[260 MustHaveRegister 262 ShouldHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v34|D DOUBLE "[xmm7|D]" v34|D -1 [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rdx|d]" v35|d v25|d [278, 295[294 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d v24|d [278, 295[294 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rcx|d]" v37|d -1 [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v38|D DOUBLE "[xmm1|D]" v38|D v48|D [296, 372[372 MustHaveRegister  "NoSpillStore"
  v39|D DOUBLE "[xmm2|D]" v39|D v51|D [296, 380[380 ShouldHaveRegister  "NoSpillStore"
  v40|D DOUBLE "[xmm6|D]" v40|D v52|D [296, 372[372 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rcx|d]" v41|d v45|d [296, 370[318 ShouldHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d v42|d [296, 401[306 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d v43|d [296, 401[[412, 421[[422, 431[400 ShouldHaveRegister 420 ShouldHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [368, 369[368 MustHaveRegister  "NoDefinitionFound"
  v45|d DWORD "[rcx|d]" v45|d v41|d [370, 401[[402, 411[370 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v46|D DOUBLE "[xmm1|D]" v46|D -1 [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v47|D DOUBLE "[xmm1|D]" v47|D -1 [374, 378[374 MustHaveRegister 376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v48|D DOUBLE "[xmm6|D]" v48|D v38|D [376, 401[[402, 411[376 MustHaveRegister 386 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v49|D DOUBLE "[xmm1|D]" v49|D -1 [378, 380[378 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v50|D DOUBLE "[xmm1|D]" v50|D -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v51|D DOUBLE "[xmm2|D]" v51|D v39|D [382, 401[[402, 411[382 MustHaveRegister 384 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v52|D DOUBLE "[xmm1|D]" v52|D v40|D [384, 401[[402, 411[384 MustHaveRegister 386 ShouldHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v53|D DOUBLE "[xmm7|D]" v53|D -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdx|d]" v54|d v43|d [482, 500[500 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d v3|d [498, 500[498 MustHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d v54|d [500, 531[[532, 542[[1398, 1422[500 MustHaveRegister 530 ShouldHaveRegister 542 ShouldHaveRegister 1422 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r8|d]" v57|d v1|d [502, 1366[[1398, 1428[502 MustHaveRegister 516 ShouldHaveRegister 858 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1276 MustHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v58|d DWORD "[rdx|d]" v58|d v56|d [542, 545[542 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[rcx|d]" v59|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rcx|d]" v60|d v59|d [1418, 1420[1418 MustHaveRegister 1420 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rdx|d]" v61|d v56|d [1422, 1424[1422 MustHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rdx|d]" v62|d v61|d [1424, 1427[1424 MustHaveRegister 1426 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r9|d]" v63|d v4|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r11|d]" v64|d v2|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rdx|d]" v65|d v56|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r9|d]" v66|d v63|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v67|d DWORD "[rdi|d]" v67|d v7|d [562, 571[562 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v68|D DOUBLE "[xmm1|D]" v68|D -1 [564, 1366[564 MustHaveRegister 640 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 984 ShouldHaveRegister 1058 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v69|D DOUBLE "[xmm2|D]" v69|D -1 [566, 1366[566 MustHaveRegister 642 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1060 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v70|D DOUBLE "[xmm3|D]" v70|D -1 [568, 1366[568 MustHaveRegister 644 ShouldHaveRegister 650 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1062 ShouldHaveRegister 1068 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v71|d DWORD "[rcx|d]" v71|d v107|d [572, 858[[888, 898[582 ShouldHaveRegister 636 ShouldHaveRegister 844 ShouldHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[rax|d]" v72|d v113|d [572, 870[[888, 919[[928, 945[846 ShouldHaveRegister 870 ShouldHaveRegister 918 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r11|d]" v73|d v106|d [572, 840[[888, 898[[928, 945[840 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[r9|d]" v74|d v74|d [572, 873[[874, 884[[888, 924[[928, 945[872 ShouldHaveRegister 884 ShouldHaveRegister 924 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v75|D DOUBLE "[xmm6|D]" v75|D -1 [636, 638[636 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v76|D DOUBLE "[xmm6|D]" v76|D -1 [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v77|D DOUBLE "[xmm6|D]" v77|D -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v78|D DOUBLE "[xmm6|D]" v78|D -1 [642, 798[[888, 898[642 MustHaveRegister 644 MustHaveRegister 760 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd  "NoSpillStore"
  v79|D DOUBLE "[xmm7|D]" v79|D -1 [644, 648[644 MustHaveRegister 646 MustHaveRegister 648 MustHaveRegister  "NoSpillStore"
  v80|D DOUBLE "[xmm8|D]" v80|D -1 [646, 681[[888, 898[646 MustHaveRegister 656 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v81|D DOUBLE "[xmm7|D]" v81|D -1 [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v82|D DOUBLE "[xmm7|D]" v82|D -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v83|D DOUBLE "[xmm7|D]" v83|D -1 [652, 681[[888, 898[652 MustHaveRegister 654 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v84|D DOUBLE "[xmm9|D]" v84|D -1 [654, 681[[888, 898[654 MustHaveRegister 656 ShouldHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v85|D DOUBLE "[xmm10|D]" v85|D -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdi|d]" v86|d -1 [672, 681[680 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[rdx|d]" v87|d -1 [672, 681[680 ShouldHaveRegister  "NoSpillStore"
  v88|D DOUBLE "[xmm7|D]" v88|D v101|D [682, 766[766 ShouldHaveRegister  "NoSpillStore"
  v89|D DOUBLE "[xmm8|D]" v89|D v98|D [682, 758[758 MustHaveRegister  "NoSpillStore"
  v90|D DOUBLE "[xmm9|D]" v90|D v102|D [682, 758[758 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rdi|d]" v91|d v95|d [682, 756[704 ShouldHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[rdx|d]" v92|d v92|d [682, 787[692 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d v93|d [682, 787[[798, 842[786 ShouldHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rbp|q]" v94|q -1 [754, 755[754 MustHaveRegister  "NoDefinitionFound"
  v95|d DWORD "[rdi|d]" v95|d v91|d [756, 787[[788, 797[756 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v96|D DOUBLE "[xmm8|D]" v96|D -1 [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v97|D DOUBLE "[xmm8|D]" v97|D -1 [760, 764[760 MustHaveRegister 762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v98|D DOUBLE "[xmm9|D]" v98|D v89|D [762, 787[[788, 797[762 MustHaveRegister 772 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v99|D DOUBLE "[xmm8|D]" v99|D -1 [764, 766[764 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v100|D DOUBLE "[xmm7|D]" v100|D -1 [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v101|D DOUBLE "[xmm7|D]" v101|D v88|D [768, 787[[788, 797[768 MustHaveRegister 770 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v102|D DOUBLE "[xmm8|D]" v102|D v90|D [770, 787[[788, 797[770 MustHaveRegister 772 ShouldHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v103|D DOUBLE "[xmm10|D]" v103|D -1 [772, 774[772 MustHaveRegister 774 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rdi|q]" v104|q -1 [838, 839[838 MustHaveRegister  "NoDefinitionFound"
  v105|d DWORD "[r11|d]" v105|d v73|d [840, 842[840 MustHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r11|d]" v106|d v105|d [842, 873[[874, 884[[898, 922[842 MustHaveRegister 872 ShouldHaveRegister 884 ShouldHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rdi|d]" v107|d v71|d [844, 873[[874, 887[[898, 927[844 MustHaveRegister 872 ShouldHaveRegister 886 ShouldHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[r11|d]" v108|d v106|d [884, 887[884 MustHaveRegister 886 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rcx|d]" v109|d -1 [916, 918[916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[rcx|d]" v110|d v109|d [918, 920[918 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[r11|d]" v111|d v106|d [922, 924[922 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[r11|d]" v112|d v111|d [924, 927[924 MustHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rax|d]" v113|d v72|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rbx|d]" v114|d v5|d [940, 945[940 MustHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v115|D DOUBLE "[xmm0|D]" v115|D -1 [942, 1366[942 MustHaveRegister 986 ShouldHaveRegister 1365 LiveAtLoopEnd  "NoSpillStore"
  v116|d DWORD "[rax|d]" v116|d v168|d [946, 1362[956 ShouldHaveRegister 980 ShouldHaveRegister 1362 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[rcx|d]" v117|d v126|d [946, 989[988 ShouldHaveRegister  "NoSpillStore"
  v118|d DWORD "[r11|d]" v118|d v125|d [946, 989[988 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[r9|d]" v119|d v124|d [946, 989[[1366, 1384[988 ShouldHaveRegister 1384 ShouldHaveRegister  "NoSpillStore"
  v120|D DOUBLE "[xmm6|D]" v120|D -1 [980, 982[980 MustHaveRegister 982 MustHaveRegister  "NoSpillStore"
  v121|D DOUBLE "[xmm6|D]" v121|D -1 [982, 984[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v122|D DOUBLE "[xmm6|D]" v122|D -1 [984, 986[984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v123|D DOUBLE "[xmm6|D]" v123|D -1 [986, 1346[986 MustHaveRegister 1070 MustHaveRegister 1186 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v124|d DWORD "[r11|d]" v124|d v124|d [990, 1291[[1292, 1302[[1306, 1342[[1346, 1365[1290 ShouldHaveRegister 1302 ShouldHaveRegister 1342 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[r9|d]" v125|d v118|d [990, 1258[[1306, 1316[[1346, 1365[1258 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v126|d DWORD "[rcx|d]" v126|d v117|d [990, 1288[[1306, 1337[[1346, 1365[1264 ShouldHaveRegister 1288 ShouldHaveRegister 1336 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v127|d DWORD "[rbx|d]" v127|d v160|d [990, 1276[[1306, 1316[1000 ShouldHaveRegister 1054 ShouldHaveRegister 1262 ShouldHaveRegister 1276 ShouldHaveRegister  "NoSpillStore"
  v128|D DOUBLE "[xmm7|D]" v128|D -1 [1054, 1056[1054 MustHaveRegister 1056 MustHaveRegister  "NoSpillStore"
  v129|D DOUBLE "[xmm7|D]" v129|D -1 [1056, 1058[1056 MustHaveRegister 1058 MustHaveRegister  "NoSpillStore"
  v130|D DOUBLE "[xmm7|D]" v130|D -1 [1058, 1060[1058 MustHaveRegister 1060 MustHaveRegister  "NoSpillStore"
  v131|D DOUBLE "[xmm7|D]" v131|D -1 [1060, 1216[[1306, 1316[1060 MustHaveRegister 1062 MustHaveRegister 1178 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd  "NoSpillStore"
  v132|D DOUBLE "[xmm8|D]" v132|D -1 [1062, 1066[1062 MustHaveRegister 1064 MustHaveRegister 1066 MustHaveRegister  "NoSpillStore"
  v133|D DOUBLE "[xmm9|D]" v133|D -1 [1064, 1099[[1306, 1316[1064 MustHaveRegister 1074 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v134|D DOUBLE "[xmm8|D]" v134|D -1 [1066, 1068[1066 MustHaveRegister 1068 MustHaveRegister  "NoSpillStore"
  v135|D DOUBLE "[xmm8|D]" v135|D -1 [1068, 1070[1068 MustHaveRegister 1070 ShouldHaveRegister  "NoSpillStore"
  v136|D DOUBLE "[xmm8|D]" v136|D -1 [1070, 1099[[1306, 1316[1070 MustHaveRegister 1072 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v137|D DOUBLE "[xmm10|D]" v137|D -1 [1072, 1099[[1306, 1316[1072 MustHaveRegister 1074 ShouldHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v138|D DOUBLE "[xmm11|D]" v138|D -1 [1074, 1076[1074 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v139|d DWORD "[rdi|d]" v139|d -1 [1090, 1099[1098 ShouldHaveRegister  "NoSpillStore"
  v140|d DWORD "[rdx|d]" v140|d -1 [1090, 1099[1098 ShouldHaveRegister  "NoSpillStore"
  v141|D DOUBLE "[xmm8|D]" v141|D v154|D [1100, 1184[1184 ShouldHaveRegister  "NoSpillStore"
  v142|D DOUBLE "[xmm9|D]" v142|D v151|D [1100, 1176[1176 MustHaveRegister  "NoSpillStore"
  v143|D DOUBLE "[xmm10|D]" v143|D v155|D [1100, 1176[1176 ShouldHaveRegister  "NoSpillStore"
  v144|d DWORD "[rdi|d]" v144|d v148|d [1100, 1174[1122 ShouldHaveRegister 1174 ShouldHaveRegister  "NoSpillStore"
  v145|d DWORD "[rdx|d]" v145|d v145|d [1100, 1205[1110 MustHaveRegister 1204 ShouldHaveRegister  "NoSpillStore"
  v146|d DWORD "[rsi|d]" v146|d v146|d [1100, 1205[[1216, 1260[1204 ShouldHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v147|q QWORD "[rbp|q]" v147|q -1 [1172, 1173[1172 MustHaveRegister  "NoDefinitionFound"
  v148|d DWORD "[rdi|d]" v148|d v144|d [1174, 1205[[1206, 1215[1174 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v149|D DOUBLE "[xmm9|D]" v149|D -1 [1176, 1178[1176 MustHaveRegister 1178 MustHaveRegister  "NoSpillStore"
  v150|D DOUBLE "[xmm9|D]" v150|D -1 [1178, 1182[1178 MustHaveRegister 1180 MustHaveRegister 1182 MustHaveRegister  "NoSpillStore"
  v151|D DOUBLE "[xmm10|D]" v151|D v142|D [1180, 1205[[1206, 1215[1180 MustHaveRegister 1190 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v152|D DOUBLE "[xmm9|D]" v152|D -1 [1182, 1184[1182 MustHaveRegister 1184 MustHaveRegister  "NoSpillStore"
  v153|D DOUBLE "[xmm8|D]" v153|D -1 [1184, 1186[1184 MustHaveRegister 1186 MustHaveRegister  "NoSpillStore"
  v154|D DOUBLE "[xmm8|D]" v154|D v141|D [1186, 1205[[1206, 1215[1186 MustHaveRegister 1188 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v155|D DOUBLE "[xmm9|D]" v155|D v143|D [1188, 1205[[1206, 1215[1188 MustHaveRegister 1190 ShouldHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v156|D DOUBLE "[xmm11|D]" v156|D -1 [1190, 1192[1190 MustHaveRegister 1192 MustHaveRegister  "NoSpillStore"
  v157|q QWORD "[rdi|q]" v157|q -1 [1256, 1257[1256 MustHaveRegister  "NoDefinitionFound"
  v158|d DWORD "[r9|d]" v158|d v125|d [1258, 1260[1258 MustHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v159|d DWORD "[r9|d]" v159|d v158|d [1260, 1291[[1292, 1302[[1316, 1340[1260 MustHaveRegister 1290 ShouldHaveRegister 1302 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v160|d DWORD "[rdi|d]" v160|d v127|d [1262, 1291[[1292, 1305[[1316, 1345[1262 MustHaveRegister 1290 ShouldHaveRegister 1304 ShouldHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v161|d DWORD "[r11|d]" v161|d v124|d [1302, 1305[1302 MustHaveRegister 1304 ShouldHaveRegister  "NoSpillStore"
  v162|d DWORD "[rbx|d]" v162|d -1 [1334, 1336[1334 MustHaveRegister 1336 MustHaveRegister  "NoSpillStore"
  v163|d DWORD "[rbx|d]" v163|d v162|d [1336, 1338[1336 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v164|d DWORD "[r9|d]" v164|d v159|d [1340, 1342[1340 MustHaveRegister 1342 ShouldHaveRegister  "NoSpillStore"
  v165|d DWORD "[r11|d]" v165|d v124|d [1342, 1345[1342 MustHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v166|d DWORD "[rcx|d]" v166|d v126|d [1288, 1291[1288 MustHaveRegister 1290 ShouldHaveRegister  "NoSpillStore"
  v167|q QWORD "[rbx|q]" v167|q -1 [1360, 1361[1360 MustHaveRegister  "NoDefinitionFound"
  v168|d DWORD "[rax|d]" v168|d v116|d [1362, 1365[1362 MustHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   64  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   66  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   68  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   76  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   78  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   80  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   82  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   84  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   94  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   96  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  152  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr  154  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  156  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  166  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  178  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  250  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  252  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  254  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  256  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  258  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  260  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr  262  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr  264  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  266  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  278  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  296  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  370  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr  374  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  376  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  378  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  380  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr  382  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  384  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr  386  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr  388  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  390  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr  500  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  568  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  572  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  640  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  642  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr  644  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  646  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr  648  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  650  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  652  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  654  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr  656  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr  658  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  660  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  672  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  682  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  756  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr  760  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr  762  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr  764  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  766  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr  768  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  770  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr  772  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr  774  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  776  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  840  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr  842  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  918  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  942  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr  946  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  984  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  986  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr  990  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1058  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr 1060  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr 1062  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1064  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr 1066  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1068  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1070  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr 1072  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr 1074  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr 1076  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1078  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1090  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1100  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1174  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr 1178  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr 1180  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr 1182  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1184  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr 1186  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr 1188  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr 1190  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr 1192  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1194  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1258  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr 1260  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1336  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1362  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr 1364  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1418  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v119|d [0, 1[[1384, 1386[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v110|d [0, 1[[920, 923[[1338, 1341[[1420, 1423[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 56[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 60[[90, 92[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [60, 90[60 MustHaveRegister 62 MustHaveRegister 64 MustHaveRegister 66 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [62, 1366[[1388, 1428[62 MustHaveRegister 502 ShouldHaveRegister 564 ShouldHaveRegister 582 MustHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 956 MustHaveRegister 1000 MustHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d v64|d [64, 531[[532, 542[[1388, 1424[64 MustHaveRegister 530 ShouldHaveRegister 542 ShouldHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [66, 498[[1388, 1398[66 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [68, 528[[1388, 1419[68 MustHaveRegister 504 ShouldHaveRegister 528 ShouldHaveRegister 1418 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [70, 940[[1388, 1428[70 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v6|D DOUBLE "[xmm0|D]" v6|D -1 [72, 928[[1388, 1428[72 MustHaveRegister 158 ShouldHaveRegister 258 ShouldHaveRegister 382 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 652 ShouldHaveRegister 768 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [74, 562[[1388, 1428[74 MustHaveRegister 516 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v8|D DOUBLE "[xmm1|D]" v8|D -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v9|D DOUBLE "[xmm2|D]" v9|D -1 [78, 156[78 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v10|D DOUBLE "[xmm1|D]" v10|D -1 [80, 150[80 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v11|D DOUBLE "[xmm3|D]" v11|D -1 [82, 412[[462, 472[[1388, 1398[82 MustHaveRegister 150 ShouldHaveRegister 250 ShouldHaveRegister 374 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d -1 [84, 292[[462, 472[[1388, 1398[84 MustHaveRegister 110 ShouldHaveRegister 202 ShouldHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v24|d [86, 177[86 MustHaveRegister 98 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdx|d]" v14|d v25|d [88, 177[[432, 441[[452, 461[88 MustHaveRegister 176 ShouldHaveRegister 440 ShouldHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v15|D DOUBLE "[xmm4|D]" v15|D -1 [94, 1366[[1388, 1428[94 MustHaveRegister 164 ShouldHaveRegister 264 ShouldHaveRegister 388 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 658 ShouldHaveRegister 774 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1076 ShouldHaveRegister 1192 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v16|D DOUBLE "[xmm5|D]" v16|D -1 [96, 1366[[1388, 1428[96 MustHaveRegister 154 ShouldHaveRegister 254 ShouldHaveRegister 378 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 638 ShouldHaveRegister 648 ShouldHaveRegister 764 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 982 ShouldHaveRegister 1056 ShouldHaveRegister 1066 ShouldHaveRegister 1182 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v17|D DOUBLE "[xmm1|D]" v17|D -1 [150, 154[150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v18|D DOUBLE "[xmm6|D]" v18|D -1 [152, 248[[462, 472[152 MustHaveRegister 162 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v19|D DOUBLE "[xmm1|D]" v19|D -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v20|D DOUBLE "[xmm1|D]" v20|D -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v21|D DOUBLE "[xmm1|D]" v21|D -1 [158, 256[[462, 472[158 MustHaveRegister 160 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v22|D DOUBLE "[xmm2|D]" v22|D -1 [160, 248[[462, 472[160 MustHaveRegister 162 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v23|D DOUBLE "[xmm7|D]" v23|D -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d v13|d [178, 277[188 MustHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rdx|d]" v25|d v14|d [178, 277[[442, 451[[472, 481[276 ShouldHaveRegister 450 ShouldHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d v12|d [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v27|D DOUBLE "[xmm2|D]" v27|D -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v28|D DOUBLE "[xmm2|D]" v28|D -1 [250, 254[250 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v29|D DOUBLE "[xmm6|D]" v29|D -1 [252, 295[[1388, 1398[252 MustHaveRegister 262 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v30|D DOUBLE "[xmm2|D]" v30|D -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v31|D DOUBLE "[xmm1|D]" v31|D -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v32|D DOUBLE "[xmm1|D]" v32|D -1 [258, 295[[1388, 1398[258 MustHaveRegister 260 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v33|D DOUBLE "[xmm2|D]" v33|D -1 [260, 295[[1388, 1398[260 MustHaveRegister 262 ShouldHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v34|D DOUBLE "[xmm7|D]" v34|D -1 [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rdx|d]" v35|d v25|d [278, 295[294 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d v24|d [278, 295[294 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rcx|d]" v37|d -1 [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v38|D DOUBLE "[xmm1|D]" v38|D v48|D [296, 372[372 MustHaveRegister  "NoSpillStore"
  v39|D DOUBLE "[xmm2|D]" v39|D v51|D [296, 380[380 ShouldHaveRegister  "NoSpillStore"
  v40|D DOUBLE "[xmm6|D]" v40|D v52|D [296, 372[372 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rcx|d]" v41|d v45|d [296, 370[318 ShouldHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d v42|d [296, 401[306 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d v43|d [296, 401[[412, 421[[422, 431[400 ShouldHaveRegister 420 ShouldHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [368, 369[368 MustHaveRegister  "NoDefinitionFound"
  v45|d DWORD "[rcx|d]" v45|d v41|d [370, 401[[402, 411[370 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v46|D DOUBLE "[xmm1|D]" v46|D -1 [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v47|D DOUBLE "[xmm1|D]" v47|D -1 [374, 378[374 MustHaveRegister 376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v48|D DOUBLE "[xmm6|D]" v48|D v38|D [376, 401[[402, 411[376 MustHaveRegister 386 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v49|D DOUBLE "[xmm1|D]" v49|D -1 [378, 380[378 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v50|D DOUBLE "[xmm1|D]" v50|D -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v51|D DOUBLE "[xmm2|D]" v51|D v39|D [382, 401[[402, 411[382 MustHaveRegister 384 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v52|D DOUBLE "[xmm1|D]" v52|D v40|D [384, 401[[402, 411[384 MustHaveRegister 386 ShouldHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v53|D DOUBLE "[xmm7|D]" v53|D -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdx|d]" v54|d v43|d [482, 500[500 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d v3|d [498, 500[498 MustHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d v54|d [500, 531[[532, 542[[1398, 1422[500 MustHaveRegister 530 ShouldHaveRegister 542 ShouldHaveRegister 1422 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r8|d]" v57|d v1|d [502, 1366[[1398, 1428[502 MustHaveRegister 516 ShouldHaveRegister 858 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1276 MustHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v58|d DWORD "[rdx|d]" v58|d v56|d [542, 545[542 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[rcx|d]" v59|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rcx|d]" v60|d v59|d [1418, 1420[1418 MustHaveRegister 1420 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rdx|d]" v61|d v56|d [1422, 1424[1422 MustHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rdx|d]" v62|d v61|d [1424, 1427[1424 MustHaveRegister 1426 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r9|d]" v63|d v4|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r11|d]" v64|d v2|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rdx|d]" v65|d v56|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r9|d]" v66|d v63|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v67|d DWORD "[rdi|d]" v67|d v7|d [562, 571[562 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v68|D DOUBLE "[xmm1|D]" v68|D -1 [564, 1366[564 MustHaveRegister 640 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 984 ShouldHaveRegister 1058 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v69|D DOUBLE "[xmm2|D]" v69|D -1 [566, 1366[566 MustHaveRegister 642 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1060 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v70|D DOUBLE "[xmm3|D]" v70|D -1 [568, 1366[568 MustHaveRegister 644 ShouldHaveRegister 650 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1062 ShouldHaveRegister 1068 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v71|d DWORD "[rcx|d]" v71|d v107|d [572, 858[[888, 898[582 ShouldHaveRegister 636 ShouldHaveRegister 844 ShouldHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[rax|d]" v72|d v113|d [572, 870[[888, 919[[928, 945[846 ShouldHaveRegister 870 ShouldHaveRegister 918 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r11|d]" v73|d v106|d [572, 840[[888, 898[[928, 945[840 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[r9|d]" v74|d v74|d [572, 873[[874, 884[[888, 924[[928, 945[872 ShouldHaveRegister 884 ShouldHaveRegister 924 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v75|D DOUBLE "[xmm6|D]" v75|D -1 [636, 638[636 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v76|D DOUBLE "[xmm6|D]" v76|D -1 [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v77|D DOUBLE "[xmm6|D]" v77|D -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v78|D DOUBLE "[xmm6|D]" v78|D -1 [642, 798[[888, 898[642 MustHaveRegister 644 MustHaveRegister 760 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd  "NoSpillStore"
  v79|D DOUBLE "[xmm7|D]" v79|D -1 [644, 648[644 MustHaveRegister 646 MustHaveRegister 648 MustHaveRegister  "NoSpillStore"
  v80|D DOUBLE "[xmm8|D]" v80|D -1 [646, 681[[888, 898[646 MustHaveRegister 656 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v81|D DOUBLE "[xmm7|D]" v81|D -1 [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v82|D DOUBLE "[xmm7|D]" v82|D -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v83|D DOUBLE "[xmm7|D]" v83|D -1 [652, 681[[888, 898[652 MustHaveRegister 654 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v84|D DOUBLE "[xmm9|D]" v84|D -1 [654, 681[[888, 898[654 MustHaveRegister 656 ShouldHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v85|D DOUBLE "[xmm10|D]" v85|D -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdi|d]" v86|d -1 [672, 681[680 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[rdx|d]" v87|d -1 [672, 681[680 ShouldHaveRegister  "NoSpillStore"
  v88|D DOUBLE "[xmm7|D]" v88|D v101|D [682, 766[766 ShouldHaveRegister  "NoSpillStore"
  v89|D DOUBLE "[xmm8|D]" v89|D v98|D [682, 758[758 MustHaveRegister  "NoSpillStore"
  v90|D DOUBLE "[xmm9|D]" v90|D v102|D [682, 758[758 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rdi|d]" v91|d v95|d [682, 756[704 ShouldHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[rdx|d]" v92|d v92|d [682, 787[692 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d v93|d [682, 787[[798, 842[786 ShouldHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rbp|q]" v94|q -1 [754, 755[754 MustHaveRegister  "NoDefinitionFound"
  v95|d DWORD "[rdi|d]" v95|d v91|d [756, 787[[788, 797[756 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v96|D DOUBLE "[xmm8|D]" v96|D -1 [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v97|D DOUBLE "[xmm8|D]" v97|D -1 [760, 764[760 MustHaveRegister 762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v98|D DOUBLE "[xmm9|D]" v98|D v89|D [762, 787[[788, 797[762 MustHaveRegister 772 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v99|D DOUBLE "[xmm8|D]" v99|D -1 [764, 766[764 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v100|D DOUBLE "[xmm7|D]" v100|D -1 [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v101|D DOUBLE "[xmm7|D]" v101|D v88|D [768, 787[[788, 797[768 MustHaveRegister 770 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v102|D DOUBLE "[xmm8|D]" v102|D v90|D [770, 787[[788, 797[770 MustHaveRegister 772 ShouldHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v103|D DOUBLE "[xmm10|D]" v103|D -1 [772, 774[772 MustHaveRegister 774 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rdi|q]" v104|q -1 [838, 839[838 MustHaveRegister  "NoDefinitionFound"
  v105|d DWORD "[r11|d]" v105|d v73|d [840, 842[840 MustHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r11|d]" v106|d v105|d [842, 873[[874, 884[[898, 922[842 MustHaveRegister 872 ShouldHaveRegister 884 ShouldHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rdi|d]" v107|d v71|d [844, 873[[874, 887[[898, 927[844 MustHaveRegister 872 ShouldHaveRegister 886 ShouldHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[r11|d]" v108|d v106|d [884, 887[884 MustHaveRegister 886 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rcx|d]" v109|d -1 [916, 918[916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[rcx|d]" v110|d v109|d [918, 920[918 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[r11|d]" v111|d v106|d [922, 924[922 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[r11|d]" v112|d v111|d [924, 927[924 MustHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rax|d]" v113|d v72|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rbx|d]" v114|d v5|d [940, 945[940 MustHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v115|D DOUBLE "[xmm0|D]" v115|D -1 [942, 1366[942 MustHaveRegister 986 ShouldHaveRegister 1365 LiveAtLoopEnd  "NoSpillStore"
  v116|d DWORD "[rax|d]" v116|d v168|d [946, 1362[956 ShouldHaveRegister 980 ShouldHaveRegister 1362 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[rcx|d]" v117|d v126|d [946, 989[988 ShouldHaveRegister  "NoSpillStore"
  v118|d DWORD "[r11|d]" v118|d v125|d [946, 989[988 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[r9|d]" v119|d v124|d [946, 989[[1366, 1384[988 ShouldHaveRegister 1384 ShouldHaveRegister  "NoSpillStore"
  v120|D DOUBLE "[xmm6|D]" v120|D -1 [980, 982[980 MustHaveRegister 982 MustHaveRegister  "NoSpillStore"
  v121|D DOUBLE "[xmm6|D]" v121|D -1 [982, 984[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v122|D DOUBLE "[xmm6|D]" v122|D -1 [984, 986[984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v123|D DOUBLE "[xmm6|D]" v123|D -1 [986, 1346[986 MustHaveRegister 1070 MustHaveRegister 1186 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v124|d DWORD "[r11|d]" v124|d v124|d [990, 1291[[1292, 1302[[1306, 1342[[1346, 1365[1290 ShouldHaveRegister 1302 ShouldHaveRegister 1342 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[r9|d]" v125|d v118|d [990, 1258[[1306, 1316[[1346, 1365[1258 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v126|d DWORD "[rcx|d]" v126|d v117|d [990, 1288[[1306, 1337[[1346, 1365[1264 ShouldHaveRegister 1288 ShouldHaveRegister 1336 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v127|d DWORD "[rbx|d]" v127|d v160|d [990, 1276[[1306, 1316[1000 ShouldHaveRegister 1054 ShouldHaveRegister 1262 ShouldHaveRegister 1276 ShouldHaveRegister  "NoSpillStore"
  v128|D DOUBLE "[xmm7|D]" v128|D -1 [1054, 1056[1054 MustHaveRegister 1056 MustHaveRegister  "NoSpillStore"
  v129|D DOUBLE "[xmm7|D]" v129|D -1 [1056, 1058[1056 MustHaveRegister 1058 MustHaveRegister  "NoSpillStore"
  v130|D DOUBLE "[xmm7|D]" v130|D -1 [1058, 1060[1058 MustHaveRegister 1060 MustHaveRegister  "NoSpillStore"
  v131|D DOUBLE "[xmm7|D]" v131|D -1 [1060, 1216[[1306, 1316[1060 MustHaveRegister 1062 MustHaveRegister 1178 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd  "NoSpillStore"
  v132|D DOUBLE "[xmm8|D]" v132|D -1 [1062, 1066[1062 MustHaveRegister 1064 MustHaveRegister 1066 MustHaveRegister  "NoSpillStore"
  v133|D DOUBLE "[xmm9|D]" v133|D -1 [1064, 1099[[1306, 1316[1064 MustHaveRegister 1074 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v134|D DOUBLE "[xmm8|D]" v134|D -1 [1066, 1068[1066 MustHaveRegister 1068 MustHaveRegister  "NoSpillStore"
  v135|D DOUBLE "[xmm8|D]" v135|D -1 [1068, 1070[1068 MustHaveRegister 1070 ShouldHaveRegister  "NoSpillStore"
  v136|D DOUBLE "[xmm8|D]" v136|D -1 [1070, 1099[[1306, 1316[1070 MustHaveRegister 1072 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v137|D DOUBLE "[xmm10|D]" v137|D -1 [1072, 1099[[1306, 1316[1072 MustHaveRegister 1074 ShouldHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v138|D DOUBLE "[xmm11|D]" v138|D -1 [1074, 1076[1074 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v139|d DWORD "[rdi|d]" v139|d -1 [1090, 1099[1098 ShouldHaveRegister  "NoSpillStore"
  v140|d DWORD "[rdx|d]" v140|d -1 [1090, 1099[1098 ShouldHaveRegister  "NoSpillStore"
  v141|D DOUBLE "[xmm8|D]" v141|D v154|D [1100, 1184[1184 ShouldHaveRegister  "NoSpillStore"
  v142|D DOUBLE "[xmm9|D]" v142|D v151|D [1100, 1176[1176 MustHaveRegister  "NoSpillStore"
  v143|D DOUBLE "[xmm10|D]" v143|D v155|D [1100, 1176[1176 ShouldHaveRegister  "NoSpillStore"
  v144|d DWORD "[rdi|d]" v144|d v148|d [1100, 1174[1122 ShouldHaveRegister 1174 ShouldHaveRegister  "NoSpillStore"
  v145|d DWORD "[rdx|d]" v145|d v145|d [1100, 1205[1110 MustHaveRegister 1204 ShouldHaveRegister  "NoSpillStore"
  v146|d DWORD "[rsi|d]" v146|d v146|d [1100, 1205[[1216, 1260[1204 ShouldHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v147|q QWORD "[rbp|q]" v147|q -1 [1172, 1173[1172 MustHaveRegister  "NoDefinitionFound"
  v148|d DWORD "[rdi|d]" v148|d v144|d [1174, 1205[[1206, 1215[1174 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v149|D DOUBLE "[xmm9|D]" v149|D -1 [1176, 1178[1176 MustHaveRegister 1178 MustHaveRegister  "NoSpillStore"
  v150|D DOUBLE "[xmm9|D]" v150|D -1 [1178, 1182[1178 MustHaveRegister 1180 MustHaveRegister 1182 MustHaveRegister  "NoSpillStore"
  v151|D DOUBLE "[xmm10|D]" v151|D v142|D [1180, 1205[[1206, 1215[1180 MustHaveRegister 1190 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v152|D DOUBLE "[xmm9|D]" v152|D -1 [1182, 1184[1182 MustHaveRegister 1184 MustHaveRegister  "NoSpillStore"
  v153|D DOUBLE "[xmm8|D]" v153|D -1 [1184, 1186[1184 MustHaveRegister 1186 MustHaveRegister  "NoSpillStore"
  v154|D DOUBLE "[xmm8|D]" v154|D v141|D [1186, 1205[[1206, 1215[1186 MustHaveRegister 1188 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v155|D DOUBLE "[xmm9|D]" v155|D v143|D [1188, 1205[[1206, 1215[1188 MustHaveRegister 1190 ShouldHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v156|D DOUBLE "[xmm11|D]" v156|D -1 [1190, 1192[1190 MustHaveRegister 1192 MustHaveRegister  "NoSpillStore"
  v157|q QWORD "[rdi|q]" v157|q -1 [1256, 1257[1256 MustHaveRegister  "NoDefinitionFound"
  v158|d DWORD "[r9|d]" v158|d v125|d [1258, 1260[1258 MustHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v159|d DWORD "[r9|d]" v159|d v158|d [1260, 1291[[1292, 1302[[1316, 1340[1260 MustHaveRegister 1290 ShouldHaveRegister 1302 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v160|d DWORD "[rdi|d]" v160|d v127|d [1262, 1291[[1292, 1305[[1316, 1345[1262 MustHaveRegister 1290 ShouldHaveRegister 1304 ShouldHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v161|d DWORD "[r11|d]" v161|d v124|d [1302, 1305[1302 MustHaveRegister 1304 ShouldHaveRegister  "NoSpillStore"
  v162|d DWORD "[rbx|d]" v162|d -1 [1334, 1336[1334 MustHaveRegister 1336 MustHaveRegister  "NoSpillStore"
  v163|d DWORD "[rbx|d]" v163|d v162|d [1336, 1338[1336 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v164|d DWORD "[r9|d]" v164|d v159|d [1340, 1342[1340 MustHaveRegister 1342 ShouldHaveRegister  "NoSpillStore"
  v165|d DWORD "[r11|d]" v165|d v124|d [1342, 1345[1342 MustHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v166|d DWORD "[rcx|d]" v166|d v126|d [1288, 1291[1288 MustHaveRegister 1290 ShouldHaveRegister  "NoSpillStore"
  v167|q QWORD "[rbx|q]" v167|q -1 [1360, 1361[1360 MustHaveRegister  "NoDefinitionFound"
  v168|d DWORD "[rax|d]" v168|d v116|d [1362, 1365[1362 MustHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   64  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   66  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   68  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   76  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   78  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   80  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   82  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   84  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   94  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   96  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  152  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr  154  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  156  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  166  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [v13|DWORD, v14|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  178  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  250  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  252  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  254  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  256  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  258  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  260  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr  262  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr  264  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  266  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [v25|DWORD, v24|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  278  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v29|DOUBLE, v32|DOUBLE, v33|DOUBLE, v37|DWORD, v36|DWORD, v35|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  296  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  370  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr  374  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  376  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  378  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  380  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr  382  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  384  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr  386  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr  388  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  390  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, v42|DWORD, v43|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [v48|DOUBLE, v51|DOUBLE, v52|DOUBLE, v45|DWORD, int[0|0x0], int[1|0x1]] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr  500  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, v56|DWORD, v63|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, int[0|0x0], int[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  568  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v67|DWORD, v66|DWORD, v65|DWORD, v64|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  572  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  640  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  642  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr  644  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  646  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr  648  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  650  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  652  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  654  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr  656  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr  658  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  660  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  672  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [v83|DOUBLE, v80|DOUBLE, v84|DOUBLE, int[1|0x1], v87|DWORD, v86|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  682  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  756  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr  760  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr  762  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr  764  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  766  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr  768  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  770  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr  772  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr  774  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  776  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, v92|DWORD, v93|DWORD] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [v101|DOUBLE, v98|DOUBLE, v102|DOUBLE, v95|DWORD, int[0|0x0], int[1|0x1]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  840  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr  842  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, v113|DWORD, v106|DWORD, v74|DWORD] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v108|DWORD] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  918  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [v107|DWORD, int[0|0x0], int[0|0x0], v112|DWORD] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  942  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [v114|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr  946  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  984  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  986  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [v119|DWORD, v118|DWORD, v117|DWORD, int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr  990  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1058  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr 1060  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr 1062  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1064  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr 1066  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1068  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1070  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr 1072  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr 1074  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr 1076  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1078  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1090  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [v136|DOUBLE, v133|DOUBLE, v137|DOUBLE, int[1|0x1], v140|DWORD, v139|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1100  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1174  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr 1178  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr 1180  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr 1182  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1184  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr 1186  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr 1188  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr 1190  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr 1192  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1194  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, v145|DWORD, v146|DWORD] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [v154|DOUBLE, v151|DOUBLE, v155|DOUBLE, v148|DWORD, int[0|0x0], int[1|0x1]] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1258  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr 1260  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [v124|DWORD, v159|DWORD, v166|DWORD, v160|DWORD] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [v161|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1336  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [v165|DWORD, int[0|0x0], int[0|0x0], v160|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1362  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr 1364  <|@ instruction JUMP ~outgoingValues: [v168|DWORD, v126|DWORD, v125|DWORD, v124|DWORD] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1418  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [v62|DWORD, int[0|0x0], int[0|0x0]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v119|d [0, 1[[1384, 1386[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v110|d [0, 1[[920, 923[[1338, 1341[[1420, 1423[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 56[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 60[[90, 92[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [60, 90[60 MustHaveRegister 62 MustHaveRegister 64 MustHaveRegister 66 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [62, 1366[[1388, 1428[62 MustHaveRegister 502 ShouldHaveRegister 564 ShouldHaveRegister 582 MustHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 956 MustHaveRegister 1000 MustHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d v64|d [64, 531[[532, 542[[1388, 1424[64 MustHaveRegister 530 ShouldHaveRegister 542 ShouldHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [66, 498[[1388, 1398[66 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [68, 528[[1388, 1419[68 MustHaveRegister 504 ShouldHaveRegister 528 ShouldHaveRegister 1418 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [70, 940[[1388, 1428[70 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v6|D DOUBLE "[xmm0|D]" v6|D -1 [72, 928[[1388, 1428[72 MustHaveRegister 158 ShouldHaveRegister 258 ShouldHaveRegister 382 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 652 ShouldHaveRegister 768 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [74, 562[[1388, 1428[74 MustHaveRegister 516 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v8|D DOUBLE "[xmm1|D]" v8|D -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v9|D DOUBLE "[xmm2|D]" v9|D -1 [78, 156[78 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v10|D DOUBLE "[xmm1|D]" v10|D -1 [80, 150[80 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v11|D DOUBLE "[xmm3|D]" v11|D -1 [82, 412[[462, 472[[1388, 1398[82 MustHaveRegister 150 ShouldHaveRegister 250 ShouldHaveRegister 374 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d -1 [84, 292[[462, 472[[1388, 1398[84 MustHaveRegister 110 ShouldHaveRegister 202 ShouldHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v24|d [86, 177[86 MustHaveRegister 98 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdx|d]" v14|d v25|d [88, 177[[432, 441[[452, 461[88 MustHaveRegister 176 ShouldHaveRegister 440 ShouldHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v15|D DOUBLE "[xmm4|D]" v15|D -1 [94, 1366[[1388, 1428[94 MustHaveRegister 164 ShouldHaveRegister 264 ShouldHaveRegister 388 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 658 ShouldHaveRegister 774 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1076 ShouldHaveRegister 1192 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v16|D DOUBLE "[xmm5|D]" v16|D -1 [96, 1366[[1388, 1428[96 MustHaveRegister 154 ShouldHaveRegister 254 ShouldHaveRegister 378 ShouldHaveRegister 401 LiveAtLoopEnd 411 LiveAtLoopEnd 638 ShouldHaveRegister 648 ShouldHaveRegister 764 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 982 ShouldHaveRegister 1056 ShouldHaveRegister 1066 ShouldHaveRegister 1182 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v17|D DOUBLE "[xmm1|D]" v17|D -1 [150, 154[150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v18|D DOUBLE "[xmm6|D]" v18|D -1 [152, 248[[462, 472[152 MustHaveRegister 162 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v19|D DOUBLE "[xmm1|D]" v19|D -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v20|D DOUBLE "[xmm1|D]" v20|D -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v21|D DOUBLE "[xmm1|D]" v21|D -1 [158, 256[[462, 472[158 MustHaveRegister 160 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v22|D DOUBLE "[xmm2|D]" v22|D -1 [160, 248[[462, 472[160 MustHaveRegister 162 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v23|D DOUBLE "[xmm7|D]" v23|D -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d v13|d [178, 277[188 MustHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rdx|d]" v25|d v14|d [178, 277[[442, 451[[472, 481[276 ShouldHaveRegister 450 ShouldHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d v12|d [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v27|D DOUBLE "[xmm2|D]" v27|D -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v28|D DOUBLE "[xmm2|D]" v28|D -1 [250, 254[250 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v29|D DOUBLE "[xmm6|D]" v29|D -1 [252, 295[[1388, 1398[252 MustHaveRegister 262 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v30|D DOUBLE "[xmm2|D]" v30|D -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v31|D DOUBLE "[xmm1|D]" v31|D -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v32|D DOUBLE "[xmm1|D]" v32|D -1 [258, 295[[1388, 1398[258 MustHaveRegister 260 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v33|D DOUBLE "[xmm2|D]" v33|D -1 [260, 295[[1388, 1398[260 MustHaveRegister 262 ShouldHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v34|D DOUBLE "[xmm7|D]" v34|D -1 [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rdx|d]" v35|d v25|d [278, 295[294 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d v24|d [278, 295[294 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rcx|d]" v37|d -1 [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v38|D DOUBLE "[xmm1|D]" v38|D v48|D [296, 372[372 MustHaveRegister  "NoSpillStore"
  v39|D DOUBLE "[xmm2|D]" v39|D v51|D [296, 380[380 ShouldHaveRegister  "NoSpillStore"
  v40|D DOUBLE "[xmm6|D]" v40|D v52|D [296, 372[372 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rcx|d]" v41|d v45|d [296, 370[318 ShouldHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d v42|d [296, 401[306 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d v43|d [296, 401[[412, 421[[422, 431[400 ShouldHaveRegister 420 ShouldHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [368, 369[368 MustHaveRegister  "NoDefinitionFound"
  v45|d DWORD "[rcx|d]" v45|d v41|d [370, 401[[402, 411[370 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v46|D DOUBLE "[xmm1|D]" v46|D -1 [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v47|D DOUBLE "[xmm1|D]" v47|D -1 [374, 378[374 MustHaveRegister 376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v48|D DOUBLE "[xmm6|D]" v48|D v38|D [376, 401[[402, 411[376 MustHaveRegister 386 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v49|D DOUBLE "[xmm1|D]" v49|D -1 [378, 380[378 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v50|D DOUBLE "[xmm1|D]" v50|D -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v51|D DOUBLE "[xmm2|D]" v51|D v39|D [382, 401[[402, 411[382 MustHaveRegister 384 MustHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v52|D DOUBLE "[xmm1|D]" v52|D v40|D [384, 401[[402, 411[384 MustHaveRegister 386 ShouldHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v53|D DOUBLE "[xmm7|D]" v53|D -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdx|d]" v54|d v43|d [482, 500[500 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d v3|d [498, 500[498 MustHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d v54|d [500, 531[[532, 542[[1398, 1422[500 MustHaveRegister 530 ShouldHaveRegister 542 ShouldHaveRegister 1422 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r8|d]" v57|d v1|d [502, 1366[[1398, 1428[502 MustHaveRegister 516 ShouldHaveRegister 858 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1276 MustHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v58|d DWORD "[rdx|d]" v58|d v56|d [542, 545[542 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[rcx|d]" v59|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rcx|d]" v60|d v59|d [1418, 1420[1418 MustHaveRegister 1420 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rdx|d]" v61|d v56|d [1422, 1424[1422 MustHaveRegister 1424 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rdx|d]" v62|d v61|d [1424, 1427[1424 MustHaveRegister 1426 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r9|d]" v63|d v4|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r11|d]" v64|d v2|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rdx|d]" v65|d v56|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r9|d]" v66|d v63|d [546, 571[570 ShouldHaveRegister  "NoSpillStore"
  v67|d DWORD "[rdi|d]" v67|d v7|d [562, 571[562 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v68|D DOUBLE "[xmm1|D]" v68|D -1 [564, 1366[564 MustHaveRegister 640 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 984 ShouldHaveRegister 1058 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd 1365 LiveAtLoopEnd  "NoSpillStore"
  v69|D DOUBLE "[xmm2|D]" v69|D -1 [566, 1366[566 MustHaveRegister 642 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1060 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v70|D DOUBLE "[xmm3|D]" v70|D -1 [568, 1366[568 MustHaveRegister 644 ShouldHaveRegister 650 ShouldHaveRegister 873 LiveAtLoopEnd 887 LiveAtLoopEnd 927 LiveAtLoopEnd 1062 ShouldHaveRegister 1068 ShouldHaveRegister 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v71|d DWORD "[rcx|d]" v71|d v107|d [572, 858[[888, 898[582 ShouldHaveRegister 636 ShouldHaveRegister 844 ShouldHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[rax|d]" v72|d v113|d [572, 870[[888, 919[[928, 945[846 ShouldHaveRegister 870 ShouldHaveRegister 918 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r11|d]" v73|d v106|d [572, 840[[888, 898[[928, 945[840 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[r9|d]" v74|d v74|d [572, 873[[874, 884[[888, 924[[928, 945[872 ShouldHaveRegister 884 ShouldHaveRegister 924 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v75|D DOUBLE "[xmm6|D]" v75|D -1 [636, 638[636 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v76|D DOUBLE "[xmm6|D]" v76|D -1 [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v77|D DOUBLE "[xmm6|D]" v77|D -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v78|D DOUBLE "[xmm6|D]" v78|D -1 [642, 798[[888, 898[642 MustHaveRegister 644 MustHaveRegister 760 ShouldHaveRegister 787 LiveAtLoopEnd 797 LiveAtLoopEnd  "NoSpillStore"
  v79|D DOUBLE "[xmm7|D]" v79|D -1 [644, 648[644 MustHaveRegister 646 MustHaveRegister 648 MustHaveRegister  "NoSpillStore"
  v80|D DOUBLE "[xmm8|D]" v80|D -1 [646, 681[[888, 898[646 MustHaveRegister 656 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v81|D DOUBLE "[xmm7|D]" v81|D -1 [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v82|D DOUBLE "[xmm7|D]" v82|D -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v83|D DOUBLE "[xmm7|D]" v83|D -1 [652, 681[[888, 898[652 MustHaveRegister 654 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v84|D DOUBLE "[xmm9|D]" v84|D -1 [654, 681[[888, 898[654 MustHaveRegister 656 ShouldHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v85|D DOUBLE "[xmm10|D]" v85|D -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdi|d]" v86|d -1 [672, 681[680 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[rdx|d]" v87|d -1 [672, 681[680 ShouldHaveRegister  "NoSpillStore"
  v88|D DOUBLE "[xmm7|D]" v88|D v101|D [682, 766[766 ShouldHaveRegister  "NoSpillStore"
  v89|D DOUBLE "[xmm8|D]" v89|D v98|D [682, 758[758 MustHaveRegister  "NoSpillStore"
  v90|D DOUBLE "[xmm9|D]" v90|D v102|D [682, 758[758 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rdi|d]" v91|d v95|d [682, 756[704 ShouldHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[rdx|d]" v92|d v92|d [682, 787[692 MustHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d v93|d [682, 787[[798, 842[786 ShouldHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rbp|q]" v94|q -1 [754, 755[754 MustHaveRegister  "NoDefinitionFound"
  v95|d DWORD "[rdi|d]" v95|d v91|d [756, 787[[788, 797[756 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v96|D DOUBLE "[xmm8|D]" v96|D -1 [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v97|D DOUBLE "[xmm8|D]" v97|D -1 [760, 764[760 MustHaveRegister 762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v98|D DOUBLE "[xmm9|D]" v98|D v89|D [762, 787[[788, 797[762 MustHaveRegister 772 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v99|D DOUBLE "[xmm8|D]" v99|D -1 [764, 766[764 MustHaveRegister 766 MustHaveRegister  "NoSpillStore"
  v100|D DOUBLE "[xmm7|D]" v100|D -1 [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v101|D DOUBLE "[xmm7|D]" v101|D v88|D [768, 787[[788, 797[768 MustHaveRegister 770 MustHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v102|D DOUBLE "[xmm8|D]" v102|D v90|D [770, 787[[788, 797[770 MustHaveRegister 772 ShouldHaveRegister 786 ShouldHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v103|D DOUBLE "[xmm10|D]" v103|D -1 [772, 774[772 MustHaveRegister 774 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rdi|q]" v104|q -1 [838, 839[838 MustHaveRegister  "NoDefinitionFound"
  v105|d DWORD "[r11|d]" v105|d v73|d [840, 842[840 MustHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r11|d]" v106|d v105|d [842, 873[[874, 884[[898, 922[842 MustHaveRegister 872 ShouldHaveRegister 884 ShouldHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rdi|d]" v107|d v71|d [844, 873[[874, 887[[898, 927[844 MustHaveRegister 872 ShouldHaveRegister 886 ShouldHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[r11|d]" v108|d v106|d [884, 887[884 MustHaveRegister 886 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rcx|d]" v109|d -1 [916, 918[916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[rcx|d]" v110|d v109|d [918, 920[918 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[r11|d]" v111|d v106|d [922, 924[922 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[r11|d]" v112|d v111|d [924, 927[924 MustHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rax|d]" v113|d v72|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rbx|d]" v114|d v5|d [940, 945[940 MustHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v115|D DOUBLE "[xmm0|D]" v115|D -1 [942, 1366[942 MustHaveRegister 986 ShouldHaveRegister 1365 LiveAtLoopEnd  "NoSpillStore"
  v116|d DWORD "[rax|d]" v116|d v168|d [946, 1362[956 ShouldHaveRegister 980 ShouldHaveRegister 1362 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[rcx|d]" v117|d v126|d [946, 989[988 ShouldHaveRegister  "NoSpillStore"
  v118|d DWORD "[r11|d]" v118|d v125|d [946, 989[988 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[r9|d]" v119|d v124|d [946, 989[[1366, 1384[988 ShouldHaveRegister 1384 ShouldHaveRegister  "NoSpillStore"
  v120|D DOUBLE "[xmm6|D]" v120|D -1 [980, 982[980 MustHaveRegister 982 MustHaveRegister  "NoSpillStore"
  v121|D DOUBLE "[xmm6|D]" v121|D -1 [982, 984[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v122|D DOUBLE "[xmm6|D]" v122|D -1 [984, 986[984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v123|D DOUBLE "[xmm6|D]" v123|D -1 [986, 1346[986 MustHaveRegister 1070 MustHaveRegister 1186 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd 1291 LiveAtLoopEnd 1305 LiveAtLoopEnd 1345 LiveAtLoopEnd  "NoSpillStore"
  v124|d DWORD "[r11|d]" v124|d v124|d [990, 1291[[1292, 1302[[1306, 1342[[1346, 1365[1290 ShouldHaveRegister 1302 ShouldHaveRegister 1342 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[r9|d]" v125|d v118|d [990, 1258[[1306, 1316[[1346, 1365[1258 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v126|d DWORD "[rcx|d]" v126|d v117|d [990, 1288[[1306, 1337[[1346, 1365[1264 ShouldHaveRegister 1288 ShouldHaveRegister 1336 ShouldHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v127|d DWORD "[rbx|d]" v127|d v160|d [990, 1276[[1306, 1316[1000 ShouldHaveRegister 1054 ShouldHaveRegister 1262 ShouldHaveRegister 1276 ShouldHaveRegister  "NoSpillStore"
  v128|D DOUBLE "[xmm7|D]" v128|D -1 [1054, 1056[1054 MustHaveRegister 1056 MustHaveRegister  "NoSpillStore"
  v129|D DOUBLE "[xmm7|D]" v129|D -1 [1056, 1058[1056 MustHaveRegister 1058 MustHaveRegister  "NoSpillStore"
  v130|D DOUBLE "[xmm7|D]" v130|D -1 [1058, 1060[1058 MustHaveRegister 1060 MustHaveRegister  "NoSpillStore"
  v131|D DOUBLE "[xmm7|D]" v131|D -1 [1060, 1216[[1306, 1316[1060 MustHaveRegister 1062 MustHaveRegister 1178 ShouldHaveRegister 1205 LiveAtLoopEnd 1215 LiveAtLoopEnd  "NoSpillStore"
  v132|D DOUBLE "[xmm8|D]" v132|D -1 [1062, 1066[1062 MustHaveRegister 1064 MustHaveRegister 1066 MustHaveRegister  "NoSpillStore"
  v133|D DOUBLE "[xmm9|D]" v133|D -1 [1064, 1099[[1306, 1316[1064 MustHaveRegister 1074 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v134|D DOUBLE "[xmm8|D]" v134|D -1 [1066, 1068[1066 MustHaveRegister 1068 MustHaveRegister  "NoSpillStore"
  v135|D DOUBLE "[xmm8|D]" v135|D -1 [1068, 1070[1068 MustHaveRegister 1070 ShouldHaveRegister  "NoSpillStore"
  v136|D DOUBLE "[xmm8|D]" v136|D -1 [1070, 1099[[1306, 1316[1070 MustHaveRegister 1072 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v137|D DOUBLE "[xmm10|D]" v137|D -1 [1072, 1099[[1306, 1316[1072 MustHaveRegister 1074 ShouldHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v138|D DOUBLE "[xmm11|D]" v138|D -1 [1074, 1076[1074 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v139|d DWORD "[rdi|d]" v139|d -1 [1090, 1099[1098 ShouldHaveRegister  "NoSpillStore"
  v140|d DWORD "[rdx|d]" v140|d -1 [1090, 1099[1098 ShouldHaveRegister  "NoSpillStore"
  v141|D DOUBLE "[xmm8|D]" v141|D v154|D [1100, 1184[1184 ShouldHaveRegister  "NoSpillStore"
  v142|D DOUBLE "[xmm9|D]" v142|D v151|D [1100, 1176[1176 MustHaveRegister  "NoSpillStore"
  v143|D DOUBLE "[xmm10|D]" v143|D v155|D [1100, 1176[1176 ShouldHaveRegister  "NoSpillStore"
  v144|d DWORD "[rdi|d]" v144|d v148|d [1100, 1174[1122 ShouldHaveRegister 1174 ShouldHaveRegister  "NoSpillStore"
  v145|d DWORD "[rdx|d]" v145|d v145|d [1100, 1205[1110 MustHaveRegister 1204 ShouldHaveRegister  "NoSpillStore"
  v146|d DWORD "[rsi|d]" v146|d v146|d [1100, 1205[[1216, 1260[1204 ShouldHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v147|q QWORD "[rbp|q]" v147|q -1 [1172, 1173[1172 MustHaveRegister  "NoDefinitionFound"
  v148|d DWORD "[rdi|d]" v148|d v144|d [1174, 1205[[1206, 1215[1174 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v149|D DOUBLE "[xmm9|D]" v149|D -1 [1176, 1178[1176 MustHaveRegister 1178 MustHaveRegister  "NoSpillStore"
  v150|D DOUBLE "[xmm9|D]" v150|D -1 [1178, 1182[1178 MustHaveRegister 1180 MustHaveRegister 1182 MustHaveRegister  "NoSpillStore"
  v151|D DOUBLE "[xmm10|D]" v151|D v142|D [1180, 1205[[1206, 1215[1180 MustHaveRegister 1190 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v152|D DOUBLE "[xmm9|D]" v152|D -1 [1182, 1184[1182 MustHaveRegister 1184 MustHaveRegister  "NoSpillStore"
  v153|D DOUBLE "[xmm8|D]" v153|D -1 [1184, 1186[1184 MustHaveRegister 1186 MustHaveRegister  "NoSpillStore"
  v154|D DOUBLE "[xmm8|D]" v154|D v141|D [1186, 1205[[1206, 1215[1186 MustHaveRegister 1188 MustHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v155|D DOUBLE "[xmm9|D]" v155|D v143|D [1188, 1205[[1206, 1215[1188 MustHaveRegister 1190 ShouldHaveRegister 1204 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v156|D DOUBLE "[xmm11|D]" v156|D -1 [1190, 1192[1190 MustHaveRegister 1192 MustHaveRegister  "NoSpillStore"
  v157|q QWORD "[rdi|q]" v157|q -1 [1256, 1257[1256 MustHaveRegister  "NoDefinitionFound"
  v158|d DWORD "[r9|d]" v158|d v125|d [1258, 1260[1258 MustHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v159|d DWORD "[r9|d]" v159|d v158|d [1260, 1291[[1292, 1302[[1316, 1340[1260 MustHaveRegister 1290 ShouldHaveRegister 1302 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v160|d DWORD "[rdi|d]" v160|d v127|d [1262, 1291[[1292, 1305[[1316, 1345[1262 MustHaveRegister 1290 ShouldHaveRegister 1304 ShouldHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v161|d DWORD "[r11|d]" v161|d v124|d [1302, 1305[1302 MustHaveRegister 1304 ShouldHaveRegister  "NoSpillStore"
  v162|d DWORD "[rbx|d]" v162|d -1 [1334, 1336[1334 MustHaveRegister 1336 MustHaveRegister  "NoSpillStore"
  v163|d DWORD "[rbx|d]" v163|d v162|d [1336, 1338[1336 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v164|d DWORD "[r9|d]" v164|d v159|d [1340, 1342[1340 MustHaveRegister 1342 ShouldHaveRegister  "NoSpillStore"
  v165|d DWORD "[r11|d]" v165|d v124|d [1342, 1345[1342 MustHaveRegister 1344 ShouldHaveRegister  "NoSpillStore"
  v166|d DWORD "[rcx|d]" v166|d v126|d [1288, 1291[1288 MustHaveRegister 1290 ShouldHaveRegister  "NoSpillStore"
  v167|q QWORD "[rbx|q]" v167|q -1 [1360, 1361[1360 MustHaveRegister  "NoDefinitionFound"
  v168|d DWORD "[rax|d]" v168|d v116|d [1362, 1365[1362 MustHaveRegister 1364 ShouldHaveRegister  "NoSpillStore"
  v169|D DOUBLE "[vstack:0|D]" v169|D -1 [1, 2[ "NoDefinitionFound"
  v170|D DOUBLE "[vstack:1|D]" v170|D -1 [1, 2[ "NoDefinitionFound"
  v171|D DOUBLE "[vstack:1|D]" v171|D -1 [1, 2[ "NoDefinitionFound"
  v172|D DOUBLE "[vstack:2|D]" v172|D -1 [1, 2[ "NoDefinitionFound"
  v173|D DOUBLE "[vstack:2|D]" v173|D -1 [1, 2[ "NoDefinitionFound"
  v174|d DWORD "[vstack:3|d]" v174|d -1 [1, 2[ "NoDefinitionFound"
  v175|D DOUBLE "[vstack:4|D]" v175|D -1 [1, 2[ "NoDefinitionFound"
  v176|D DOUBLE "[vstack:4|D]" v176|D -1 [1, 2[ "NoDefinitionFound"
  v177|d DWORD "[vstack:5|d]" v177|d -1 [1, 2[ "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   64  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   66  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   68  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   76  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   78  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   80  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   82  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   84  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   94  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   96  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  152  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr  154  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  156  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  166  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  178  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  250  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  252  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  254  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  256  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  258  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  260  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr  262  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr  264  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  266  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  278  <|@ instruction [v35|DWORD, v36|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DOUBLE = MOVE input: v29|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = MOVE input: v33|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|DOUBLE = MOVE input: v32|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = MOVE input: v169|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  296  <|@ instruction [v38|DOUBLE, v39|DOUBLE, v40|DOUBLE, v41|DWORD, v42|DWORD, v43|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  370  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr  374  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  376  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  378  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  380  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr  382  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  384  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr  386  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr  388  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  390  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v170|DOUBLE = MOVE input: v48|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = MOVE input: v52|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = MOVE input: v170|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DOUBLE = MOVE input: v48|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = MOVE input: v52|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = MOVE input: v171|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr  500  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v58|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  568  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v66|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  572  <|@ instruction [v71|DWORD, v72|DWORD, v73|DWORD, v74|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  640  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  642  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr  644  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  646  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr  648  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  650  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  652  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  654  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr  656  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr  658  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  660  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  672  <|@ instruction [v86|DWORD, v87|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v86|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  682  <|@ instruction [v88|DOUBLE, v89|DOUBLE, v90|DOUBLE, v91|DWORD, v92|DWORD, v93|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  756  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr  760  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr  762  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr  764  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  766  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr  768  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  770  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr  772  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr  774  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  776  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v172|DOUBLE = MOVE input: v98|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v90|DOUBLE = MOVE input: v102|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DOUBLE = MOVE input: v172|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|DOUBLE = MOVE input: v98|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v90|DOUBLE = MOVE input: v102|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DOUBLE = MOVE input: v173|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  840  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr  842  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v107|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v108|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v107|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  918  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v112|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v107|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  942  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v114|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr  946  <|@ instruction [v116|DWORD, v117|DWORD, v118|DWORD, v119|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  984  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  986  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = MOVE input: v119|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v174|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr  990  <|@ instruction [v124|DWORD, v125|DWORD, v126|DWORD, v127|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1058  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr 1060  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr 1062  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1064  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr 1066  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1068  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1070  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr 1072  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr 1074  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr 1076  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1078  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1090  <|@ instruction [v139|DWORD, v140|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1100  <|@ instruction [v141|DOUBLE, v142|DOUBLE, v143|DOUBLE, v144|DWORD, v145|DWORD, v146|DWORD] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1174  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr 1178  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr 1180  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr 1182  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1184  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr 1186  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr 1188  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr 1190  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr 1192  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1194  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v175|DOUBLE = MOVE input: v151|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v143|DOUBLE = MOVE input: v155|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DOUBLE = MOVE input: v175|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|DOUBLE = MOVE input: v151|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v143|DOUBLE = MOVE input: v155|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DOUBLE = MOVE input: v176|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1258  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr 1260  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1336  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1362  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v177|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1364  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1418  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v1|DWORD = MOV input: [v0|QWORD + 160] size: DWORD <|@ <|@
      nr   64  <|@ instruction v2|DWORD = MOV input: [v0|QWORD + 152] size: DWORD <|@ <|@
      nr   66  <|@ instruction v3|DWORD = MOV input: [v0|QWORD + 144] size: DWORD <|@ <|@
      nr   68  <|@ instruction v4|DWORD = MOV input: [v0|QWORD + 136] size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = MOV input: [v0|QWORD + 128] size: DWORD <|@ <|@
      nr   72  <|@ instruction v6|DOUBLE = MOVSD input: [v0|QWORD + 112] size: SD <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v0|QWORD + 104] size: DWORD <|@ <|@
      nr   76  <|@ instruction v8|DOUBLE = MOVSD input: [v0|QWORD + 88] size: SD <|@ <|@
      nr   78  <|@ instruction v9|DOUBLE = MOVSD input: [v0|QWORD + 72] size: SD <|@ <|@
      nr   80  <|@ instruction v10|DOUBLE = VSUBSD (x: v8|DOUBLE, y: [v0|QWORD + 56]) size: XMM <|@ <|@
      nr   82  <|@ instruction v11|DOUBLE = MOVSD input: [v0|QWORD + 40] size: SD <|@ <|@
      nr   84  <|@ instruction v12|DWORD = MOV input: [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DWORD = MOV input: [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction v14|DWORD = MOV input: [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   94  <|@ instruction v15|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   96  <|@ instruction v16|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v17|DOUBLE = VADDSD (x: v10|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  152  <|@ instruction v18|DOUBLE = VMULSD (x: v17|DOUBLE, y: v17|DOUBLE) size: XMM <|@ <|@
      nr  154  <|@ instruction v19|DOUBLE = VMULSD (x: v17|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  156  <|@ instruction v20|DOUBLE = VMULSD (x: v19|DOUBLE, y: v9|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction v21|DOUBLE = VADDSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction v22|DOUBLE = VMULSD (x: v21|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v23|DOUBLE = VADDSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction UCOMIS (x: v23|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  166  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v26|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v27|DOUBLE = VSUBSD (x: v18|DOUBLE, y: v22|DOUBLE) size: XMM <|@ <|@
      nr  250  <|@ instruction v28|DOUBLE = VADDSD (x: v27|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  252  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  254  <|@ instruction v30|DOUBLE = VMULSD (x: v28|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  256  <|@ instruction v31|DOUBLE = VMULSD (x: v30|DOUBLE, y: v21|DOUBLE) size: XMM <|@ <|@
      nr  258  <|@ instruction v32|DOUBLE = VADDSD (x: v31|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  260  <|@ instruction v33|DOUBLE = VMULSD (x: v32|DOUBLE, y: v32|DOUBLE) size: XMM <|@ <|@
      nr  262  <|@ instruction v34|DOUBLE = VADDSD (x: v29|DOUBLE, y: v33|DOUBLE) size: XMM <|@ <|@
      nr  264  <|@ instruction UCOMIS (x: v34|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  266  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v37|DWORD = LEA address: [v12|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DOUBLE = MOVE input: v29|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = MOVE input: v33|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|DOUBLE = MOVE input: v32|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = MOVE input: v169|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPCONSTBRANCH x: v41|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v2|DWORD v3|DWORD v4|DWORD v5|DWORD v6|DOUBLE - v7|DWORD v38|DOUBLE - v39|DOUBLE - v40|DOUBLE - v11|DOUBLE - v41|DWORD v42|DWORD v43|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v44|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  370  <|@ instruction v45|DWORD = INC value: v41|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction v46|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v40|DOUBLE) size: XMM <|@ <|@
      nr  374  <|@ instruction v47|DOUBLE = VADDSD (x: v46|DOUBLE, y: v11|DOUBLE) size: XMM <|@ <|@
      nr  376  <|@ instruction v48|DOUBLE = VMULSD (x: v47|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  378  <|@ instruction v49|DOUBLE = VMULSD (x: v47|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  380  <|@ instruction v50|DOUBLE = VMULSD (x: v49|DOUBLE, y: v39|DOUBLE) size: XMM <|@ <|@
      nr  382  <|@ instruction v51|DOUBLE = VADDSD (x: v50|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  384  <|@ instruction v52|DOUBLE = VMULSD (x: v51|DOUBLE, y: v51|DOUBLE) size: XMM <|@ <|@
      nr  386  <|@ instruction v53|DOUBLE = VADDSD (x: v48|DOUBLE, y: v52|DOUBLE) size: XMM <|@ <|@
      nr  388  <|@ instruction UCOMIS (x: v53|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  390  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v170|DOUBLE = MOVE input: v48|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = MOVE input: v52|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = MOVE input: v170|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DOUBLE = MOVE input: v48|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = MOVE input: v52|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = MOVE input: v171|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v55|DWORD = SHL value: v3|DWORD size: DWORD <|@ <|@
      nr  500  <|@ instruction v56|DWORD = ADD (x: v54|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction v57|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction v63|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v58|DWORD = XOR (x: v56|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v58|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v67|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction v68|DOUBLE = CVTSI2SD value: v1|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction v69|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  568  <|@ instruction v70|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v66|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction v75|DOUBLE = CVTSI2SD value: v71|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction v76|DOUBLE = VMULSD (x: v75|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  640  <|@ instruction v77|DOUBLE = VDIVSD (x: v76|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  642  <|@ instruction v78|DOUBLE = VSUBSD (x: v77|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr  644  <|@ instruction v79|DOUBLE = VADDSD (x: v78|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  646  <|@ instruction v80|DOUBLE = VMULSD (x: v79|DOUBLE, y: v79|DOUBLE) size: XMM <|@ <|@
      nr  648  <|@ instruction v81|DOUBLE = VMULSD (x: v79|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  650  <|@ instruction v82|DOUBLE = VMULSD (x: v81|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr  652  <|@ instruction v83|DOUBLE = VADDSD (x: v82|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  654  <|@ instruction v84|DOUBLE = VMULSD (x: v83|DOUBLE, y: v83|DOUBLE) size: XMM <|@ <|@
      nr  656  <|@ instruction v85|DOUBLE = VADDSD (x: v80|DOUBLE, y: v84|DOUBLE) size: XMM <|@ <|@
      nr  658  <|@ instruction UCOMIS (x: v85|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  660  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v86|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD v89|DOUBLE - v88|DOUBLE - v90|DOUBLE - v78|DOUBLE - v91|DWORD v92|DWORD v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v94|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  756  <|@ instruction v95|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction v96|DOUBLE = VSUBSD (x: v89|DOUBLE, y: v90|DOUBLE) size: XMM <|@ <|@
      nr  760  <|@ instruction v97|DOUBLE = VADDSD (x: v96|DOUBLE, y: v78|DOUBLE) size: XMM <|@ <|@
      nr  762  <|@ instruction v98|DOUBLE = VMULSD (x: v97|DOUBLE, y: v97|DOUBLE) size: XMM <|@ <|@
      nr  764  <|@ instruction v99|DOUBLE = VMULSD (x: v97|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  766  <|@ instruction v100|DOUBLE = VMULSD (x: v99|DOUBLE, y: v88|DOUBLE) size: XMM <|@ <|@
      nr  768  <|@ instruction v101|DOUBLE = VADDSD (x: v100|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  770  <|@ instruction v102|DOUBLE = VMULSD (x: v101|DOUBLE, y: v101|DOUBLE) size: XMM <|@ <|@
      nr  772  <|@ instruction v103|DOUBLE = VADDSD (x: v98|DOUBLE, y: v102|DOUBLE) size: XMM <|@ <|@
      nr  774  <|@ instruction UCOMIS (x: v103|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr  776  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v172|DOUBLE = MOVE input: v98|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v90|DOUBLE = MOVE input: v102|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DOUBLE = MOVE input: v172|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|DOUBLE = MOVE input: v98|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v90|DOUBLE = MOVE input: v102|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DOUBLE = MOVE input: v173|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v74|DWORD v73|DWORD v72|DWORD v5|DWORD v6|DOUBLE - v71|DWORD - - - - - - - - - - v93|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v104|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  840  <|@ instruction v105|DWORD = SHL value: v73|DWORD size: DWORD <|@ <|@
      nr  842  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction v107|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v71|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v113|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v107|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction v108|DWORD = XOR (x: v106|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v108|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v107|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction v109|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  918  <|@ instruction v110|DWORD = SUB (x: v109|DWORD, ~y: v72|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE input: v110|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction v111|DWORD = SHL (x: v106|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction v112|DWORD = XOR (x: v111|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v112|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v107|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v114|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  942  <|@ instruction v115|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v114|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v116|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction v120|DOUBLE = CVTSI2SD value: v116|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DOUBLE = VMULSD (x: v120|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr  984  <|@ instruction v122|DOUBLE = VDIVSD (x: v121|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr  986  <|@ instruction v123|DOUBLE = VSUBSD (x: v122|DOUBLE, y: v115|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = MOVE input: v119|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v174|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v127|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction v128|DOUBLE = CVTSI2SD value: v127|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction v129|DOUBLE = VMULSD (x: v128|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1058  <|@ instruction v130|DOUBLE = VDIVSD (x: v129|DOUBLE, y: v68|DOUBLE) size: XMM <|@ <|@
      nr 1060  <|@ instruction v131|DOUBLE = VSUBSD (x: v130|DOUBLE, y: v69|DOUBLE) size: XMM <|@ <|@
      nr 1062  <|@ instruction v132|DOUBLE = VADDSD (x: v131|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1064  <|@ instruction v133|DOUBLE = VMULSD (x: v132|DOUBLE, y: v132|DOUBLE) size: XMM <|@ <|@
      nr 1066  <|@ instruction v134|DOUBLE = VMULSD (x: v132|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1068  <|@ instruction v135|DOUBLE = VMULSD (x: v134|DOUBLE, y: v70|DOUBLE) size: XMM <|@ <|@
      nr 1070  <|@ instruction v136|DOUBLE = VADDSD (x: v123|DOUBLE, y: v135|DOUBLE) size: XMM <|@ <|@
      nr 1072  <|@ instruction v137|DOUBLE = VMULSD (x: v136|DOUBLE, y: v136|DOUBLE) size: XMM <|@ <|@
      nr 1074  <|@ instruction v138|DOUBLE = VADDSD (x: v133|DOUBLE, y: v137|DOUBLE) size: XMM <|@ <|@
      nr 1076  <|@ instruction UCOMIS (x: v138|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1078  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction TESTBRANCH (x: v145|DWORD, y: v145|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: v144|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD v142|DOUBLE - v141|DOUBLE - v143|DOUBLE - v131|DOUBLE - v144|DWORD v145|DWORD v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v147|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1174  <|@ instruction v148|DWORD = INC value: v144|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction v149|DOUBLE = VSUBSD (x: v142|DOUBLE, y: v143|DOUBLE) size: XMM <|@ <|@
      nr 1178  <|@ instruction v150|DOUBLE = VADDSD (x: v149|DOUBLE, y: v131|DOUBLE) size: XMM <|@ <|@
      nr 1180  <|@ instruction v151|DOUBLE = VMULSD (x: v150|DOUBLE, y: v150|DOUBLE) size: XMM <|@ <|@
      nr 1182  <|@ instruction v152|DOUBLE = VMULSD (x: v150|DOUBLE, y: v16|DOUBLE) size: XMM <|@ <|@
      nr 1184  <|@ instruction v153|DOUBLE = VMULSD (x: v152|DOUBLE, y: v141|DOUBLE) size: XMM <|@ <|@
      nr 1186  <|@ instruction v154|DOUBLE = VADDSD (x: v153|DOUBLE, y: v123|DOUBLE) size: XMM <|@ <|@
      nr 1188  <|@ instruction v155|DOUBLE = VMULSD (x: v154|DOUBLE, y: v154|DOUBLE) size: XMM <|@ <|@
      nr 1190  <|@ instruction v156|DOUBLE = VADDSD (x: v151|DOUBLE, y: v155|DOUBLE) size: XMM <|@ <|@
      nr 1192  <|@ instruction UCOMIS (x: v156|DOUBLE, y: v15|DOUBLE) size: PD <|@ <|@
      nr 1194  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v175|DOUBLE = MOVE input: v151|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v143|DOUBLE = MOVE input: v155|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DOUBLE = MOVE input: v175|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|DOUBLE = MOVE input: v151|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v143|DOUBLE = MOVE input: v155|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DOUBLE = MOVE input: v176|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD v123|DOUBLE - v127|DWORD - - - - - - - - - - v146|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v157|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1258  <|@ instruction v158|DWORD = SHL value: v125|DWORD size: DWORD <|@ <|@
      nr 1260  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction v160|DWORD = INC value: v127|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPCONSTBRANCH x: v126|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction CMPBRANCH (x: v57|DWORD, y: v127|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v166|DWORD = INC value: v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction v161|DWORD = XOR (x: v124|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction v162|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1336  <|@ instruction v163|DWORD = SUB (x: v162|DWORD, ~y: v126|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: v163|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction v164|DWORD = SHL (x: v159|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction v165|DWORD = XOR (x: v124|DWORD, y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v1|DWORD v124|DWORD v125|DWORD v126|DWORD v116|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v167|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1362  <|@ instruction v168|DWORD = INC value: v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v177|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1364  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rax|DWORD = MOVE input: v119|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v59|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1418  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction v61|DWORD = SHL (x: v56|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction v62|DWORD = XOR (x: v61|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   68  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   72  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   76  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   78  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   80  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   82  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   94  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   96  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  152  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  154  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  166  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  250  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  252  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  254  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  256  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  258  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  260  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  262  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  264  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  266  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm1|DOUBLE = MOVE input: vstack:0|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  374  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  376  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  378  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  380  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  382  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  384  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  386  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  388  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  390  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm1|DOUBLE = MOVE input: vstack:1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm1|DOUBLE = MOVE input: vstack:1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  568  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  640  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  642  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  644  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  646  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  648  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  650  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  652  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  654  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  656  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  658  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  660  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  756  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  760  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  762  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  764  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  766  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  768  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  770  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  772  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  774  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  776  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:2|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm8|DOUBLE = MOVE input: vstack:2|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm8|DOUBLE = MOVE input: vstack:2|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  840  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  842  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  918  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  942  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  984  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  986  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1058  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1060  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1062  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1064  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1066  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1068  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1070  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1072  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1074  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1076  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1078  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1174  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1178  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1180  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1182  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1184  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1186  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1188  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1190  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1192  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1194  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:4|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: vstack:4|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: vstack:4|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1258  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1336  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1364  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   68  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   72  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   76  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   78  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   80  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   82  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   94  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   96  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  152  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  154  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  166  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  250  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  252  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  254  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  256  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  258  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  260  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  262  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  264  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  266  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm1|DOUBLE = MOVE input: vstack:0|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  374  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  376  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  378  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  380  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  382  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  384  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  386  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  388  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  390  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm1|DOUBLE = MOVE input: vstack:1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm1|DOUBLE = MOVE input: vstack:1|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  568  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  640  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  642  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  644  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  646  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  648  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  650  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  652  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  654  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  656  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  658  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  660  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  680  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  756  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  760  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  762  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  764  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  766  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  768  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  770  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  772  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  774  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  776  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:2|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm8|DOUBLE = MOVE input: vstack:2|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm8|DOUBLE = MOVE input: vstack:2|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  840  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  842  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  918  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  942  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  984  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  986  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1058  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1060  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1062  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1064  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1066  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1068  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1070  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1072  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1074  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1076  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1078  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1174  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1178  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1180  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1182  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1184  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1186  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1188  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1190  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1192  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1194  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:4|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: vstack:4|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: vstack:4|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1258  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1336  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1362  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1364  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction vstack:0|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: vstack:0|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction vstack:1|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  476  <|@ instruction xmm1|DOUBLE = MOVE input: vstack:1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction vstack:1|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  460  <|@ instruction xmm1|DOUBLE = MOVE input: vstack:1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction vstack:2|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: vstack:2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction vstack:2|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: vstack:2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction vstack:3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction vstack:4|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: vstack:4|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction vstack:4|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: vstack:4|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction vstack:5|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|D DOUBLE "[vstack:0|D]" vstack:0|D -1 [338, 344[ "NOT_SUPPORTED"
  vstack:1|D DOUBLE "[vstack:1|D]" vstack:1|D -1 [456, 476[ "NOT_SUPPORTED"
  vstack:2|D DOUBLE "[vstack:2|D]" vstack:2|D -1 [898, 918[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [1124, 1128[ "NOT_SUPPORTED"
  vstack:4|D DOUBLE "[vstack:4|D]" vstack:4|D -1 [1372, 1392[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [1548, 1552[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|D DOUBLE "[stack:32|D]" vstack:0|D -1 [338, 344[ "NOT_SUPPORTED"
  vstack:1|D DOUBLE "[stack:32|D]" vstack:1|D -1 [456, 476[ "NOT_SUPPORTED"
  vstack:2|D DOUBLE "[stack:32|D]" vstack:2|D -1 [898, 918[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:36|d]" vstack:3|d -1 [1124, 1128[ "NOT_SUPPORTED"
  vstack:4|D DOUBLE "[stack:32|D]" vstack:4|D -1 [1372, 1392[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:36|d]" vstack:5|d -1 [1548, 1552[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  476  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  460  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  476  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  460  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD <|@ <|@
      nr   70  <|@ instruction xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD <|@ <|@
      nr   76  <|@ instruction xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD <|@ <|@
      nr   78  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM <|@ <|@
      nr   80  <|@ instruction xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   90  <|@ instruction xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   92  <|@ instruction xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606944811841311971
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  158  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  160  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  172  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606349739202251983
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606587344467800868
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B20" 
    xhandlers
    flags 
    probability 4606365435374578668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  280  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  296  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605809677115415691
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606031584627342304
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  338  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  340  <|@ instruction xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  342  <|@ instruction xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" "B16" 
    successors "B19" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623621866628707034
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  344  <|@ instruction xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623425806351804729
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623130843811077916
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r8|DWORD r9|DWORD rbx|DWORD xmm0|DOUBLE - rdi|DWORD xmm1|DOUBLE - xmm2|DOUBLE - xmm6|DOUBLE - xmm3|DOUBLE - rcx|DWORD rax|DWORD rdx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  426  <|@ instruction xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  428  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  430  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  432  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  434  <|@ instruction xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  436  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  438  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  440  <|@ instruction UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  442  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622934784931275865
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  474  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599945504071571557
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  456  <|@ instruction stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  458  <|@ instruction xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  462  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602894620196905418
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" "B21" "B1" "B20" "B7" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction r8|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction r8|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  542  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4606065526099940616
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606053516495921187
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  646  <|@ instruction xmm3|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B41" "B43" "B44" 
    successors "B29" "B45" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4649808287390757676
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  726  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr  728  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  730  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  732  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  734  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  736  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  738  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  740  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  742  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  744  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  746  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649613401699797258
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  772  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735468
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B36" 
    successors "B38" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4667458229605409600
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667293815260966542
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4667046462387987469
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD xmm8|DOUBLE - xmm7|DOUBLE - xmm9|DOUBLE - xmm6|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  864  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  868  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  870  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  872  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  874  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  876  <|@ instruction xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr  878  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  880  <|@ instruction xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  882  <|@ instruction UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr  884  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4666882049215139831
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  916  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  918  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4643968837722735308
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  900  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  902  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4646622908126941202
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4649799491297735467
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r9|DWORD r11|DWORD rax|DWORD rbx|DWORD xmm0|DOUBLE - rcx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  964  <|@ instruction r11|DWORD = SHL value: r11|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdi|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4648982545143863914
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4648973760772892093
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4643968875213788740
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636235986167842316
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626648084816151631
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  758  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4607170415420421034
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD <|@ <|@
      nr 1116  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1118  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1120  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM <|@ <|@
      nr 1122  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1124  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B63" "B64" 
    successors "B49" "B65" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4693082733847671176
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1200  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr 1202  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr 1204  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1206  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1208  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1210  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr 1212  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1214  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1216  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1218  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1220  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692939894869531963
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127062
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B57" "B56" 
    successors "B58" "B54" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 3
    probability 4710830001290803448
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710653767059520348
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 3
    probability 4710291156979637989
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD xmm9|DOUBLE - xmm8|DOUBLE - xmm10|DOUBLE - xmm7|DOUBLE - rdi|DWORD rdx|DWORD rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr 1338  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr 1342  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr 1344  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1346  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr 1348  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1350  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr 1352  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr 1354  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr 1356  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD <|@ <|@
      nr 1358  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4710050133404605415
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1390  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1392  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 3
    probability 4686952767238987707
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1372  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1374  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1376  <|@ instruction xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4689545373743433579
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4693076295072127061
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD xmm6|DOUBLE - rbx|DWORD - - - - - - - - - - rsi|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr 1438  <|@ instruction r9|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1444  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4692204165853349921
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4692191288293362664
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4686952822199472767
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4679526863493964322
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1460  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1462  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 2
    probability 4669955227294549688
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4649804526532456726
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction rbx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr 1498  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1504  <|@ instruction r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1506  <|@ instruction rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4649804521976153778
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - r10|DWORD r11|DWORD r9|DWORD rcx|DWORD rax|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr 1546  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1548  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B65" 
    successors "B47" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4649813318069175986
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599945548778779691
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593599562263779264
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585880299011972074
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585502432991576260
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" 
    xhandlers
    flags 
    probability 4583260644086997925
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4583260589905988264
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  184  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4582758312391534326
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4582758261790075558
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4563791740156889841
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  604  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec289041817f20000000000f85f306000090909090909090909090909090909090909090909090909090909048896c2420448b96a0000000448b9e98000000448b8690000000448b8e880000008b9e80000000c5fb1046708b7e68c5fb104e58c5fb105648c5f35c4e38c5fb105e288b4e208b46188b5610e800000000c5fb102500000000c5fb102d0000000085c00f84130600009090909083f9320f8df6050000909090909090909090909090909090909090c5f358cbc5f359f1c5f359cdc5f359cac5f358c8c5f359d1c5cb58fac5f92efc0f87d60500009090909090909085c00f84d905000090909090908bf1ffc683fe320f8da50500009090909090909090909090909090909090909090c5cb5cd2c5eb58d3c5eb59f2c5eb59d5c5eb59c9c5f358c8c5f359d1c5cb58fac5f92efc0f87910500009090909090909090908d4902c5fb11742410c5f928f2c5f928d10f1f4000c5fb104c24109090909085c00f840d0500009090909083f9320f8d770000009090909090909090909090909090909090909090909090498bb7580400008506ffc1c5f35ccec5f358cbc5f359f1c5f359cdc5f359cac5f358d0c5eb59cac5cb58f9c5f92efc0f870f000000909090c5fb11742410c5f928f1eb86909090ba01000000b800000000c5fb11742410c5f928f1e96affffff9090909090909090909041d1e04103d0458bc241ffc84183f9070f847104000090909090413bf80f84c20400009090909041ffc190909090909090ffc7c4c1732acac5fb101500000000c5e157db418bc18bcf458bcb448bda9090909090443bd10f8eb401000090909090909090909090909090909090909090909090909090c5cb2af1c5cb59f5c5cb5ef1c5cb5cf2c5cb58fbc54359c7c5c359fdc5c359fbc5c358f8c54359cfc4413b58d1c5792ed40f8728010000909090ba01000000bf000000009090908bf7bf010000000f1f840000000000666666909090909085d20f84d80000009090909083ff320f8d890000009090909090909090909090909090909090909090909090498baf58040000854500ffc7c4413b5cc1c53b58c6c4413b59c8c53b59c5c5bb59ffc5c358f8c54359c7c4413358d0c5792ed40f8716000000909090c57b114c2410c4417928c8c57b10442410eb81909090be01000000ba00000000c57b114c2410c4417928c8c57b10442410e95effffff909090909090909090909090498bbf58040000850741d1e34403de8bf9ffc783f8070f841f00000090909090413bc80f844000000090909090ffc08bcfe99cfeffff909090ebbc909090904533d9458bcb41bb00000000b8000000008bcfe97bfeffff909090ba00000000bf01000000e9d3feffff9090909090909090b9070000002bc841d3e34533d9458bcb41bb00000000b8000000008bcfe93ffeffff9090909090ffc3c5fb1005000000008bc88bc3e9270200006666660f1f840000000000666666900f1f84000000000090909090909090909090c5cb2af0c5cb59f5c5cb5ef1c5cb5cf0bb0000000044894c240c458bcb448b5c240c0f1f400090909090443bd30f8eb501000090909090909090909090909090909090909090909090909090c5c32afbc5c359fdc5c35ef9c5c35cfac54358c3c4413b59c8c53b59c5c53b59c3c4414b58c0c4413b59d0c4413358dac5792edc0f8727010000909090ba01000000bf000000009090908bf7bf01000000660f1f8400000000009090909085d20f84dd0000009090909083ff320f8d8e0000009090909090909090909090909090909090909090909090498baf58040000854500ffc7c441335ccac53358cfc4413359d1c53359cdc4413359c0c53b58c6c4413b59c8c4412b58d9c5792edc0f8719000000909090c57b11542410c4417928d1c57b104c2410e97cffffff909090be01000000ba00000000c57b11542410c4417928d1c57b104c2410e959ffffff909090909090909090909090498bbf58040000850741d1e14403ce8bfbffc783f9070f841f00000090909090443bc30f843d00000090909090ffc18bdfe997feffff909090ebbc909090904533d98bdfb90000000041b900000000e979feffff909090ba00000000bf01000000e9d4feffff9090909090909090bb070000002bd98bcb41d3e14533d98bdfb90000000041b900000000e93efeffff909090909090498b9f580400008503ffc044894c240c458bcb448b5c240c90909090443bd00f8fe3fdffff9090909090909090418bc1488b6c24204883c428493ba7500400000f879f000000c3909090e972fbffff909090904133d341b900000000448bdaba00000000e989fbffff909090e950fbffff909090e948fbffff909090e940fbffff909090ba01000000b800000000e91bfaffff909090e926fbffff909090b800000000ba01000000e960faffff9090909090909090b907000000412bc9d3e24133d341b900000000448bdaba00000000e91dfbffff48896c2420e800000000e9fef8fffff4488d0d4dffffff49898f68040000e9b0f8fffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 OSR_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 90 58 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD  <||@
  Comment 90 60 r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD  <||@
  Comment 97 62 r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD  <||@
  Comment 104 64 r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD  <||@
  Comment 111 66 r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD  <||@
  Comment 118 68 rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD  <||@
  Comment 124 70 xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD  <||@
  Comment 129 72 rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD  <||@
  Comment 132 74 xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD  <||@
  Comment 137 76 xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD  <||@
  Comment 142 78 xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM  <||@
  Comment 147 80 xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD  <||@
  Comment 152 82 rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD  <||@
  Comment 155 84 rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD  <||@
  Comment 158 86 rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD  <||@
  Comment 161 88 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 161 {Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 166 90 xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000]  <||@
  Comment 166 {DataSection[0x0]}  <||@
  Comment 174 92 xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000]  <||@
  Comment 174 {DataSection[0x8]}  <||@
  Comment 182 94 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 190 block B2 null  <||@
  Comment 190 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 108 NOP  <||@
  Comment 191 110 NOP  <||@
  Comment 192 112 NOP  <||@
  Comment 193 114 NOP  <||@
  Comment 194 116 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null  <||@
  Comment 203 block B3 null  <||@
  Comment 203 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 203 120 NOP  <||@
  Comment 204 122 NOP  <||@
  Comment 205 124 NOP  <||@
  Comment 206 126 NOP  <||@
  Comment 207 128 NOP  <||@
  Comment 208 130 NOP  <||@
  Comment 209 132 NOP  <||@
  Comment 210 134 NOP  <||@
  Comment 211 136 NOP  <||@
  Comment 212 138 NOP  <||@
  Comment 213 140 NOP  <||@
  Comment 214 142 NOP  <||@
  Comment 215 144 NOP  <||@
  Comment 216 146 NOP  <||@
  Comment 217 148 NOP  <||@
  Comment 218 150 NOP  <||@
  Comment 219 152 NOP  <||@
  Comment 220 154 NOP  <||@
  Comment 221 156 xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 225 158 xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 229 160 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 233 162 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 237 164 xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 241 166 xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 245 168 xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 249 170 UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 253 172 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 259 block B5 null  <||@
  Comment 259 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 190 NOP  <||@
  Comment 260 192 NOP  <||@
  Comment 261 194 NOP  <||@
  Comment 262 196 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 262 block B6 null  <||@
  Comment 262 198 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 262 200 NOP  <||@
  Comment 263 202 NOP  <||@
  Comment 264 204 NOP  <||@
  Comment 265 206 NOP  <||@
  Comment 266 208 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 274 block B8 null  <||@
  Comment 274 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 274 222 NOP  <||@
  Comment 275 224 NOP  <||@
  Comment 276 226 NOP  <||@
  Comment 277 228 NOP  <||@
  Comment 278 230 NOP  <||@
  Comment 279 232 rsi|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 283 234 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null  <||@
  Comment 292 block B9 null  <||@
  Comment 292 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 238 NOP  <||@
  Comment 293 240 NOP  <||@
  Comment 294 242 NOP  <||@
  Comment 295 244 NOP  <||@
  Comment 296 246 NOP  <||@
  Comment 297 248 NOP  <||@
  Comment 298 250 NOP  <||@
  Comment 299 252 NOP  <||@
  Comment 300 254 NOP  <||@
  Comment 301 256 NOP  <||@
  Comment 302 258 NOP  <||@
  Comment 303 260 NOP  <||@
  Comment 304 262 NOP  <||@
  Comment 305 264 NOP  <||@
  Comment 306 266 NOP  <||@
  Comment 307 268 NOP  <||@
  Comment 308 270 NOP  <||@
  Comment 309 272 NOP  <||@
  Comment 310 274 NOP  <||@
  Comment 311 276 NOP  <||@
  Comment 312 278 xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 316 280 xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 320 282 xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 324 284 xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 328 286 xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 332 288 xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 336 290 xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 340 292 xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 344 294 UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 348 296 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 354 block B11 null  <||@
  Comment 354 312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 354 314 NOP  <||@
  Comment 355 316 NOP  <||@
  Comment 356 318 NOP  <||@
  Comment 357 320 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 357 block B12 null  <||@
  Comment 357 322 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 357 324 NOP  <||@
  Comment 358 326 NOP  <||@
  Comment 359 328 NOP  <||@
  Comment 360 330 NOP  <||@
  Comment 361 332 NOP  <||@
  Comment 362 334 NOP  <||@
  Comment 363 336 rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD  <||@
  Comment 366 338 stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE  <||@
  Comment 372 340 xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE  <||@
  Comment 376 342 xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE  <||@
  Comment 380 346 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 380 block B13 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 380 348 [] = LABEL alignment: 16 numbPhis: 6 label: ?  <||@
  Comment 384 344 xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 390 350 NOP  <||@
  Comment 391 352 NOP  <||@
  Comment 392 354 NOP  <||@
  Comment 393 356 NOP  <||@
  Comment 394 358 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD  <||@
  Comment 402 block B14 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 402 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 402 362 NOP  <||@
  Comment 403 364 NOP  <||@
  Comment 404 366 NOP  <||@
  Comment 405 368 NOP  <||@
  Comment 406 370 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null  <||@
  Comment 415 block B15 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 415 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 374 NOP  <||@
  Comment 416 376 NOP  <||@
  Comment 417 378 NOP  <||@
  Comment 418 380 NOP  <||@
  Comment 419 382 NOP  <||@
  Comment 420 384 NOP  <||@
  Comment 421 386 NOP  <||@
  Comment 422 388 NOP  <||@
  Comment 423 390 NOP  <||@
  Comment 424 392 NOP  <||@
  Comment 425 394 NOP  <||@
  Comment 426 396 NOP  <||@
  Comment 427 398 NOP  <||@
  Comment 428 400 NOP  <||@
  Comment 429 402 NOP  <||@
  Comment 430 404 NOP  <||@
  Comment 431 406 NOP  <||@
  Comment 432 408 NOP  <||@
  Comment 433 410 NOP  <||@
  Comment 434 412 NOP  <||@
  Comment 435 414 NOP  <||@
  Comment 436 416 NOP  <||@
  Comment 437 418 NOP  <||@
  Comment 438 420 SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73]  <||@
  Comment 445 []at Mandelbrot.mandelbrot(int) [bci: 73, duringCall: false, rethrow: false]
              |0  |1          |2          |3         |4         |5          |6            |7  |8          |9            |10  |11           |12  |13           |14  |15           |16  |17         |18         |19         |20  |21 
     locals:  |-  |r10|DWORD  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rbx|DWORD  |xmm0|DOUBLE  |-  |rdi|DWORD  |xmm1|DOUBLE  |-   |xmm2|DOUBLE  |-   |xmm6|DOUBLE  |-   |xmm3|DOUBLE  |-   |rcx|DWORD  |rax|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 445 {infopoint: SAFEPOINT}  <||@
  Comment 445 POLL_FAR  <||@
  Comment 447 422 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 449 424 xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM  <||@
  Comment 453 426 xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 457 428 xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 461 430 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 465 432 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 469 434 xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 473 436 xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 477 438 xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 481 440 UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 485 442 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 491 block B17 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 491 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 491 466 NOP  <||@
  Comment 492 468 NOP  <||@
  Comment 493 470 NOP  <||@
  Comment 494 472 stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE  <||@
  Comment 500 474 xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE  <||@
  Comment 504 478 JUMP ~outgoingValues: [] destination: B17 -> B13  <||@
  Comment 506 block B16 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 506 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 506 446 NOP  <||@
  Comment 507 448 NOP  <||@
  Comment 508 450 NOP  <||@
  Comment 509 452 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 514 454 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 519 456 stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE  <||@
  Comment 525 458 xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE  <||@
  Comment 529 462 JUMP ~outgoingValues: [] destination: B16 -> B13  <||@
  Comment 534 block B18 null  <||@
  Comment 534 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 534 482 NOP  <||@
  Comment 535 484 NOP  <||@
  Comment 536 486 NOP  <||@
  Comment 537 488 JUMP ~outgoingValues: [] destination: B18 -> B22  <||@
  Comment 537 block B22 null  <||@
  Comment 537 520 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 537 522 NOP  <||@
  Comment 538 524 NOP  <||@
  Comment 539 526 NOP  <||@
  Comment 540 528 NOP  <||@
  Comment 541 530 NOP  <||@
  Comment 542 532 NOP  <||@
  Comment 543 534 NOP  <||@
  Comment 544 536 r8|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 547 538 rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 550 540 r8|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 556 542 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null  <||@
  Comment 566 block B24 null  <||@
  Comment 566 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 566 NOP  <||@
  Comment 567 568 NOP  <||@
  Comment 568 570 NOP  <||@
  Comment 569 572 NOP  <||@
  Comment 570 574 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD  <||@
  Comment 579 block B26 null  <||@
  Comment 579 610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 579 612 NOP  <||@
  Comment 580 614 NOP  <||@
  Comment 581 616 NOP  <||@
  Comment 582 618 NOP  <||@
  Comment 583 620 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 586 622 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 586 block B27 null  <||@
  Comment 586 624 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 586 626 NOP  <||@
  Comment 587 628 NOP  <||@
  Comment 588 630 NOP  <||@
  Comment 589 632 NOP  <||@
  Comment 590 634 NOP  <||@
  Comment 591 636 NOP  <||@
  Comment 592 638 NOP  <||@
  Comment 593 640 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 595 642 xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD  <||@
  Comment 600 644 xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 600 {DataSection[0x10]}  <||@
  Comment 608 646 xmm3|DOUBLE = MOVE input: double[0.0|0x0]  <||@
  Comment 612 648 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 615 650 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 617 652 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 620 654 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 623 656 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 623 block B28 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 623 658 [] = LABEL alignment: 16 numbPhis: 4 label: ?  <||@
  Comment 624 660 NOP  <||@
  Comment 625 662 NOP  <||@
  Comment 626 664 NOP  <||@
  Comment 627 666 NOP  <||@
  Comment 628 668 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD  <||@
  Comment 637 block B29 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 637 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 672 NOP  <||@
  Comment 638 674 NOP  <||@
  Comment 639 676 NOP  <||@
  Comment 640 678 NOP  <||@
  Comment 641 680 NOP  <||@
  Comment 642 682 NOP  <||@
  Comment 643 684 NOP  <||@
  Comment 644 686 NOP  <||@
  Comment 645 688 NOP  <||@
  Comment 646 690 NOP  <||@
  Comment 647 692 NOP  <||@
  Comment 648 694 NOP  <||@
  Comment 649 696 NOP  <||@
  Comment 650 698 NOP  <||@
  Comment 651 700 NOP  <||@
  Comment 652 702 NOP  <||@
  Comment 653 704 NOP  <||@
  Comment 654 706 NOP  <||@
  Comment 655 708 NOP  <||@
  Comment 656 710 NOP  <||@
  Comment 657 712 NOP  <||@
  Comment 658 714 NOP  <||@
  Comment 659 716 NOP  <||@
  Comment 660 718 NOP  <||@
  Comment 661 720 NOP  <||@
  Comment 662 722 xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD  <||@
  Comment 666 724 xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 670 726 xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 674 728 xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 678 730 xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 682 732 xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 686 734 xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 690 736 xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 694 738 xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 698 740 xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 702 742 xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 707 744 UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 711 746 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 717 block B31 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 717 762 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 717 764 NOP  <||@
  Comment 718 766 NOP  <||@
  Comment 719 768 NOP  <||@
  Comment 720 770 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 725 772 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 730 774 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 730 block B32 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 730 776 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 730 778 NOP  <||@
  Comment 731 780 NOP  <||@
  Comment 732 782 NOP  <||@
  Comment 733 784 rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 735 786 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 740 788 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 740 block B33 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 740 790 [] = LABEL alignment: 16 numbPhis: 6 label: ?  <||@
  Comment 752 792 NOP  <||@
  Comment 753 794 NOP  <||@
  Comment 754 796 NOP  <||@
  Comment 755 798 NOP  <||@
  Comment 756 800 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD  <||@
  Comment 764 block B34 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 764 802 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 804 NOP  <||@
  Comment 765 806 NOP  <||@
  Comment 766 808 NOP  <||@
  Comment 767 810 NOP  <||@
  Comment 768 812 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null  <||@
  Comment 777 block B35 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 777 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 777 816 NOP  <||@
  Comment 778 818 NOP  <||@
  Comment 779 820 NOP  <||@
  Comment 780 822 NOP  <||@
  Comment 781 824 NOP  <||@
  Comment 782 826 NOP  <||@
  Comment 783 828 NOP  <||@
  Comment 784 830 NOP  <||@
  Comment 785 832 NOP  <||@
  Comment 786 834 NOP  <||@
  Comment 787 836 NOP  <||@
  Comment 788 838 NOP  <||@
  Comment 789 840 NOP  <||@
  Comment 790 842 NOP  <||@
  Comment 791 844 NOP  <||@
  Comment 792 846 NOP  <||@
  Comment 793 848 NOP  <||@
  Comment 794 850 NOP  <||@
  Comment 795 852 NOP  <||@
  Comment 796 854 NOP  <||@
  Comment 797 856 NOP  <||@
  Comment 798 858 NOP  <||@
  Comment 799 860 NOP  <||@
  Comment 800 862 SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73]  <||@
  Comment 807 []at Mandelbrot.mandelbrot(int) [bci: 73, duringCall: false, rethrow: false]
              |0  |1          |2         |3          |4          |5          |6            |7  |8          |9            |10  |11           |12  |13           |14  |15           |16  |17         |18         |19         |20  |21 
     locals:  |-  |r10|DWORD  |r9|DWORD  |r11|DWORD  |rax|DWORD  |rbx|DWORD  |xmm0|DOUBLE  |-  |rcx|DWORD  |xmm8|DOUBLE  |-   |xmm7|DOUBLE  |-   |xmm9|DOUBLE  |-   |xmm6|DOUBLE  |-   |rdi|DWORD  |rdx|DWORD  |rsi|DWORD  |-   |-    <||@
  Comment 807 {infopoint: SAFEPOINT}  <||@
  Comment 807 POLL_FAR  <||@
  Comment 810 864 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 812 866 xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 817 868 xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM  <||@
  Comment 821 870 xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 826 872 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 830 874 xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 834 876 xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 838 878 xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 842 880 xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 847 882 UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 851 884 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 857 block B37 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 857 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 857 908 NOP  <||@
  Comment 858 910 NOP  <||@
  Comment 859 912 NOP  <||@
  Comment 860 914 stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 866 916 xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE  <||@
  Comment 871 918 xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 877 920 JUMP ~outgoingValues: [] destination: B37 -> B33  <||@
  Comment 879 block B36 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 879 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 879 888 NOP  <||@
  Comment 880 890 NOP  <||@
  Comment 881 892 NOP  <||@
  Comment 882 894 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 887 896 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 892 898 stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 898 900 xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE  <||@
  Comment 903 902 xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 909 904 JUMP ~outgoingValues: [] destination: B36 -> B33  <||@
  Comment 914 block B39 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 914 932 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 914 934 NOP  <||@
  Comment 915 936 NOP  <||@
  Comment 916 938 NOP  <||@
  Comment 917 940 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 917 block B40 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 917 942 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 917 944 NOP  <||@
  Comment 918 946 NOP  <||@
  Comment 919 948 NOP  <||@
  Comment 920 950 NOP  <||@
  Comment 921 952 NOP  <||@
  Comment 922 954 NOP  <||@
  Comment 923 956 NOP  <||@
  Comment 924 958 NOP  <||@
  Comment 925 960 NOP  <||@
  Comment 926 962 SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147]  <||@
  Comment 933 []at Mandelbrot.mandelbrot(int) [bci: 147, duringCall: false, rethrow: false]
              |0  |1          |2         |3          |4          |5          |6            |7  |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19         |20  |21 
     locals:  |-  |r10|DWORD  |r9|DWORD  |r11|DWORD  |rax|DWORD  |rbx|DWORD  |xmm0|DOUBLE  |-  |rcx|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |rsi|DWORD  |-   |-    <||@
  Comment 933 {infopoint: SAFEPOINT}  <||@
  Comment 933 POLL_FAR  <||@
  Comment 935 964 r11|DWORD = SHL value: r11|DWORD size: DWORD  <||@
  Comment 938 966 r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 941 968 rdi|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 945 970 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null  <||@
  Comment 954 block B42 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 954 994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 954 996 NOP  <||@
  Comment 955 998 NOP  <||@
  Comment 956 1000 NOP  <||@
  Comment 957 1002 NOP  <||@
  Comment 958 1004 CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 967 block B44 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 967 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 967 1044 NOP  <||@
  Comment 968 1046 NOP  <||@
  Comment 969 1048 NOP  <||@
  Comment 970 1050 NOP  <||@
  Comment 971 1052 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 973 1054 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 975 1056 JUMP ~outgoingValues: [] destination: B44 -> B28  <||@
  Comment 980 block B38 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 980 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 980 924 NOP  <||@
  Comment 981 926 NOP  <||@
  Comment 982 928 NOP  <||@
  Comment 983 930 JUMP ~outgoingValues: [] destination: B38 -> B40  <||@
  Comment 985 block B41 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 985 972 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 985 974 NOP  <||@
  Comment 986 976 NOP  <||@
  Comment 987 978 NOP  <||@
  Comment 988 980 NOP  <||@
  Comment 989 982 r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 992 984 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 995 986 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1001 988 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1006 990 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1008 992 JUMP ~outgoingValues: [] destination: B41 -> B28  <||@
  Comment 1013 block B30 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 1013 748 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1013 750 NOP  <||@
  Comment 1014 752 NOP  <||@
  Comment 1015 754 NOP  <||@
  Comment 1016 756 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1021 758 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1026 760 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 1031 block B43 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 1031 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1031 1008 NOP  <||@
  Comment 1032 1010 NOP  <||@
  Comment 1033 1012 NOP  <||@
  Comment 1034 1014 NOP  <||@
  Comment 1035 1016 NOP  <||@
  Comment 1036 1018 NOP  <||@
  Comment 1037 1020 NOP  <||@
  Comment 1038 1022 NOP  <||@
  Comment 1039 1024 rcx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 1044 1026 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1046 1028 r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1049 1030 r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1052 1032 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1055 1034 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1061 1036 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1066 1038 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1068 1040 JUMP ~outgoingValues: [] destination: B43 -> B28  <||@
  Comment 1073 block B45 null  <||@
  Comment 1073 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1073 1060 NOP  <||@
  Comment 1074 1062 NOP  <||@
  Comment 1075 1064 NOP  <||@
  Comment 1076 1066 NOP  <||@
  Comment 1077 1068 NOP  <||@
  Comment 1078 1070 rbx|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 1080 1072 xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000]  <||@
  Comment 1080 {DataSection[0x18]}  <||@
  Comment 1088 1074 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1090 1076 rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1092 1078 JUMP ~outgoingValues: [] destination: B45 -> B46  <||@
  Comment 1097 block B47 loop 3 depth 1 header:7|LoopBegin  <||@
  Comment 1097 1092 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1120 1094 NOP  <||@
  Comment 1121 1096 NOP  <||@
  Comment 1122 1098 NOP  <||@
  Comment 1123 1100 NOP  <||@
  Comment 1124 1102 NOP  <||@
  Comment 1125 1104 NOP  <||@
  Comment 1126 1106 NOP  <||@
  Comment 1127 1108 NOP  <||@
  Comment 1128 1110 NOP  <||@
  Comment 1129 1112 NOP  <||@
  Comment 1130 1114 xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD  <||@
  Comment 1134 1116 xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 1138 1118 xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 1142 1120 xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 1146 1122 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1151 1124 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1156 1126 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1159 1128 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1164 1130 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 1164 block B48 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1164 1132 [] = LABEL alignment: 16 numbPhis: 4 label: ?  <||@
  Comment 1168 1134 NOP  <||@
  Comment 1169 1136 NOP  <||@
  Comment 1170 1138 NOP  <||@
  Comment 1171 1140 NOP  <||@
  Comment 1172 1142 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD  <||@
  Comment 1181 block B49 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1181 1144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1181 1146 NOP  <||@
  Comment 1182 1148 NOP  <||@
  Comment 1183 1150 NOP  <||@
  Comment 1184 1152 NOP  <||@
  Comment 1185 1154 NOP  <||@
  Comment 1186 1156 NOP  <||@
  Comment 1187 1158 NOP  <||@
  Comment 1188 1160 NOP  <||@
  Comment 1189 1162 NOP  <||@
  Comment 1190 1164 NOP  <||@
  Comment 1191 1166 NOP  <||@
  Comment 1192 1168 NOP  <||@
  Comment 1193 1170 NOP  <||@
  Comment 1194 1172 NOP  <||@
  Comment 1195 1174 NOP  <||@
  Comment 1196 1176 NOP  <||@
  Comment 1197 1178 NOP  <||@
  Comment 1198 1180 NOP  <||@
  Comment 1199 1182 NOP  <||@
  Comment 1200 1184 NOP  <||@
  Comment 1201 1186 NOP  <||@
  Comment 1202 1188 NOP  <||@
  Comment 1203 1190 NOP  <||@
  Comment 1204 1192 NOP  <||@
  Comment 1205 1194 NOP  <||@
  Comment 1206 1196 xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD  <||@
  Comment 1210 1198 xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 1214 1200 xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 1218 1202 xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 1222 1204 xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 1226 1206 xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1231 1208 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 1235 1210 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 1239 1212 xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1244 1214 xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1249 1216 xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM  <||@
  Comment 1254 1218 UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 1258 1220 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 1264 block B51 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1264 1236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1264 1238 NOP  <||@
  Comment 1265 1240 NOP  <||@
  Comment 1266 1242 NOP  <||@
  Comment 1267 1244 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1272 1246 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1277 1248 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1277 block B52 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1277 1250 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1277 1252 NOP  <||@
  Comment 1278 1254 NOP  <||@
  Comment 1279 1256 NOP  <||@
  Comment 1280 1258 rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1282 1260 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1287 1262 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 1287 block B53 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1287 1264 [] = LABEL alignment: 16 numbPhis: 6 label: ?  <||@
  Comment 1296 1266 NOP  <||@
  Comment 1297 1268 NOP  <||@
  Comment 1298 1270 NOP  <||@
  Comment 1299 1272 NOP  <||@
  Comment 1300 1274 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD  <||@
  Comment 1308 block B54 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1308 1276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1308 1278 NOP  <||@
  Comment 1309 1280 NOP  <||@
  Comment 1310 1282 NOP  <||@
  Comment 1311 1284 NOP  <||@
  Comment 1312 1286 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null  <||@
  Comment 1321 block B55 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1321 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1321 1290 NOP  <||@
  Comment 1322 1292 NOP  <||@
  Comment 1323 1294 NOP  <||@
  Comment 1324 1296 NOP  <||@
  Comment 1325 1298 NOP  <||@
  Comment 1326 1300 NOP  <||@
  Comment 1327 1302 NOP  <||@
  Comment 1328 1304 NOP  <||@
  Comment 1329 1306 NOP  <||@
  Comment 1330 1308 NOP  <||@
  Comment 1331 1310 NOP  <||@
  Comment 1332 1312 NOP  <||@
  Comment 1333 1314 NOP  <||@
  Comment 1334 1316 NOP  <||@
  Comment 1335 1318 NOP  <||@
  Comment 1336 1320 NOP  <||@
  Comment 1337 1322 NOP  <||@
  Comment 1338 1324 NOP  <||@
  Comment 1339 1326 NOP  <||@
  Comment 1340 1328 NOP  <||@
  Comment 1341 1330 NOP  <||@
  Comment 1342 1332 NOP  <||@
  Comment 1343 1334 NOP  <||@
  Comment 1344 1336 SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73]  <||@
  Comment 1351 []at Mandelbrot.mandelbrot(int) [bci: 73, duringCall: false, rethrow: false]
              |0  |1          |2          |3         |4          |5          |6            |7  |8          |9            |10  |11           |12  |13            |14  |15           |16  |17         |18         |19         |20  |21 
     locals:  |-  |r10|DWORD  |r11|DWORD  |r9|DWORD  |rcx|DWORD  |rax|DWORD  |xmm6|DOUBLE  |-  |rbx|DWORD  |xmm9|DOUBLE  |-   |xmm8|DOUBLE  |-   |xmm10|DOUBLE  |-   |xmm7|DOUBLE  |-   |rdi|DWORD  |rdx|DWORD  |rsi|DWORD  |-   |-    <||@
  Comment 1351 {infopoint: SAFEPOINT}  <||@
  Comment 1351 POLL_FAR  <||@
  Comment 1354 1338 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 1356 1340 xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM  <||@
  Comment 1361 1342 xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 1365 1344 xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 1370 1346 xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 1374 1348 xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1379 1350 xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM  <||@
  Comment 1383 1352 xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1388 1354 xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 1393 1356 UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 1397 1358 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 1403 block B57 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1403 1380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1403 1382 NOP  <||@
  Comment 1404 1384 NOP  <||@
  Comment 1405 1386 NOP  <||@
  Comment 1406 1388 stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE  <||@
  Comment 1412 1390 xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 1417 1392 xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 1423 1394 JUMP ~outgoingValues: [] destination: B57 -> B53  <||@
  Comment 1428 block B56 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1428 1360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1428 1362 NOP  <||@
  Comment 1429 1364 NOP  <||@
  Comment 1430 1366 NOP  <||@
  Comment 1431 1368 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1436 1370 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1441 1372 stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE  <||@
  Comment 1447 1374 xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 1452 1376 xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 1458 1378 JUMP ~outgoingValues: [] destination: B56 -> B53  <||@
  Comment 1463 block B59 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1463 1406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1463 1408 NOP  <||@
  Comment 1464 1410 NOP  <||@
  Comment 1465 1412 NOP  <||@
  Comment 1466 1414 JUMP ~outgoingValues: [] destination: B59 -> B60  <||@
  Comment 1466 block B60 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1466 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1466 1418 NOP  <||@
  Comment 1467 1420 NOP  <||@
  Comment 1468 1422 NOP  <||@
  Comment 1469 1424 NOP  <||@
  Comment 1470 1426 NOP  <||@
  Comment 1471 1428 NOP  <||@
  Comment 1472 1430 NOP  <||@
  Comment 1473 1432 NOP  <||@
  Comment 1474 1434 NOP  <||@
  Comment 1475 1436 SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147]  <||@
  Comment 1482 []at Mandelbrot.mandelbrot(int) [bci: 147, duringCall: false, rethrow: false]
              |0  |1          |2          |3         |4          |5          |6            |7  |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19         |20  |21 
     locals:  |-  |r10|DWORD  |r11|DWORD  |r9|DWORD  |rcx|DWORD  |rax|DWORD  |xmm6|DOUBLE  |-  |rbx|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |rsi|DWORD  |-   |-    <||@
  Comment 1482 {infopoint: SAFEPOINT}  <||@
  Comment 1482 POLL_FAR  <||@
  Comment 1484 1438 r9|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 1487 1440 r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1490 1442 rdi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 1494 1444 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null  <||@
  Comment 1503 block B62 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1503 1466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1503 1468 NOP  <||@
  Comment 1504 1470 NOP  <||@
  Comment 1505 1472 NOP  <||@
  Comment 1506 1474 NOP  <||@
  Comment 1507 1476 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD  <||@
  Comment 1516 block B64 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1516 1514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1516 1516 NOP  <||@
  Comment 1517 1518 NOP  <||@
  Comment 1518 1520 NOP  <||@
  Comment 1519 1522 NOP  <||@
  Comment 1520 1524 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 1522 1526 rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1524 1528 JUMP ~outgoingValues: [] destination: B64 -> B48  <||@
  Comment 1529 block B58 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1529 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1529 1398 NOP  <||@
  Comment 1530 1400 NOP  <||@
  Comment 1531 1402 NOP  <||@
  Comment 1532 1404 JUMP ~outgoingValues: [] destination: B58 -> B60  <||@
  Comment 1534 block B61 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1534 1446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1534 1448 NOP  <||@
  Comment 1535 1450 NOP  <||@
  Comment 1536 1452 NOP  <||@
  Comment 1537 1454 NOP  <||@
  Comment 1538 1456 r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1541 1458 rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1543 1460 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1548 1462 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1554 1464 JUMP ~outgoingValues: [] destination: B61 -> B48  <||@
  Comment 1559 block B50 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1559 1222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1559 1224 NOP  <||@
  Comment 1560 1226 NOP  <||@
  Comment 1561 1228 NOP  <||@
  Comment 1562 1230 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1567 1232 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1572 1234 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 1577 block B63 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1577 1478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1577 1480 NOP  <||@
  Comment 1578 1482 NOP  <||@
  Comment 1579 1484 NOP  <||@
  Comment 1580 1486 NOP  <||@
  Comment 1581 1488 NOP  <||@
  Comment 1582 1490 NOP  <||@
  Comment 1583 1492 NOP  <||@
  Comment 1584 1494 NOP  <||@
  Comment 1585 1496 rbx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 1590 1498 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1592 1500 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1594 1502 r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1597 1504 r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1600 1506 rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1602 1508 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1607 1510 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1613 1512 JUMP ~outgoingValues: [] destination: B63 -> B48  <||@
  Comment 1618 block B65 loop 3 depth 1 header:7|LoopBegin  <||@
  Comment 1618 1530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1618 1532 NOP  <||@
  Comment 1619 1534 NOP  <||@
  Comment 1620 1536 NOP  <||@
  Comment 1621 1538 NOP  <||@
  Comment 1622 1540 NOP  <||@
  Comment 1623 1542 NOP  <||@
  Comment 1624 1544 SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207]  <||@
  Comment 1631 []at Mandelbrot.mandelbrot(int) [bci: 207, duringCall: false, rethrow: false]
              |0  |1          |2          |3         |4          |5          |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21 
     locals:  |-  |r10|DWORD  |r11|DWORD  |r9|DWORD  |rcx|DWORD  |rax|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1631 {infopoint: SAFEPOINT}  <||@
  Comment 1631 POLL_FAR  <||@
  Comment 1633 1546 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 1635 1548 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1640 1550 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1643 1552 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1648 1554 JUMP ~outgoingValues: [] destination: B65 -> B46  <||@
  Comment 1648 block B46 loop 3 depth 1 header:7|LoopBegin  <||@
  Comment 1648 1080 [] = LABEL alignment: 0 numbPhis: 4 label: ?  <||@
  Comment 1648 1082 NOP  <||@
  Comment 1649 1084 NOP  <||@
  Comment 1650 1086 NOP  <||@
  Comment 1651 1088 NOP  <||@
  Comment 1652 1090 CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD  <||@
  Comment 1661 block B66 null  <||@
  Comment 1661 1556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1661 1558 NOP  <||@
  Comment 1662 1560 NOP  <||@
  Comment 1663 1562 NOP  <||@
  Comment 1664 1564 NOP  <||@
  Comment 1665 1566 NOP  <||@
  Comment 1666 1568 NOP  <||@
  Comment 1667 1570 NOP  <||@
  Comment 1668 1572 NOP  <||@
  Comment 1669 1574 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1672 1576 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1681 POLL_RETURN_FAR  <||@
  Comment 1695 block B19 null  <||@
  Comment 1695 490 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1695 492 NOP  <||@
  Comment 1696 494 NOP  <||@
  Comment 1697 496 NOP  <||@
  Comment 1698 498 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 1703 block B23 null  <||@
  Comment 1703 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1703 546 NOP  <||@
  Comment 1704 548 NOP  <||@
  Comment 1705 550 NOP  <||@
  Comment 1706 552 NOP  <||@
  Comment 1707 554 rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1710 556 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1716 558 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1719 560 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1724 562 JUMP ~outgoingValues: [] destination: B23 -> B27  <||@
  Comment 1729 block B21 null  <||@
  Comment 1729 510 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1729 512 NOP  <||@
  Comment 1730 514 NOP  <||@
  Comment 1731 516 NOP  <||@
  Comment 1732 518 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 1737 block B20 null  <||@
  Comment 1737 500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1737 502 NOP  <||@
  Comment 1738 504 NOP  <||@
  Comment 1739 506 NOP  <||@
  Comment 1740 508 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 1745 block B1 null  <||@
  Comment 1745 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1745 98 NOP  <||@
  Comment 1746 100 NOP  <||@
  Comment 1747 102 NOP  <||@
  Comment 1748 104 JUMP ~outgoingValues: [] destination: B1 -> B22  <||@
  Comment 1753 block B4 null  <||@
  Comment 1753 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1753 176 NOP  <||@
  Comment 1754 178 NOP  <||@
  Comment 1755 180 NOP  <||@
  Comment 1756 182 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1761 184 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1766 186 JUMP ~outgoingValues: [] destination: B4 -> B6  <||@
  Comment 1771 block B7 null  <||@
  Comment 1771 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1771 212 NOP  <||@
  Comment 1772 214 NOP  <||@
  Comment 1773 216 NOP  <||@
  Comment 1774 218 JUMP ~outgoingValues: [] destination: B7 -> B22  <||@
  Comment 1779 block B10 null  <||@
  Comment 1779 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1779 300 NOP  <||@
  Comment 1780 302 NOP  <||@
  Comment 1781 304 NOP  <||@
  Comment 1782 306 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1787 308 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1792 310 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 1797 block B25 null  <||@
  Comment 1797 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1797 578 NOP  <||@
  Comment 1798 580 NOP  <||@
  Comment 1799 582 NOP  <||@
  Comment 1800 584 NOP  <||@
  Comment 1801 586 NOP  <||@
  Comment 1802 588 NOP  <||@
  Comment 1803 590 NOP  <||@
  Comment 1804 592 NOP  <||@
  Comment 1805 594 rcx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 1810 596 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1813 598 rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1815 600 rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1818 602 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1824 604 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1827 606 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1832 608 JUMP ~outgoingValues: [] destination: B25 -> B27  <||@
  Comment 1842 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1867 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1873 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1873 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1879 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1879 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotOSRCompilation-297[Mandelbrot.mandelbrot(int)@73]"
  method "HotSpotOSRCompilation-297[Mandelbrot.mandelbrot(int)@73]"
  date 1724269709375
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aa9d5c0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85a37acefe66669089842400c0feff4883ec289041817f20030000000f85f306000090909090909090909090909090909090909090909090909090909048896c2420448b96a0000000448b9e98000000448b8690000000448b8e880000008b9e80000000c5fb1046708b7e68c5fb104e58c5fb105648c5f35c4e38c5fb105e288b4e208b46188b5610e89a12e3fec5fb102532ffffffc5fb102d32ffffff85c00f84130600009090909083f9320f8df6050000909090909090909090909090909090909090c5f358cbc5f359f1c5f359cdc5f359cac5f358c8c5f359d1c5cb58fac5f92efc0f87d60500009090909090909085c00f84d905000090909090908bf1ffc683fe320f8da50500009090909090909090909090909090909090909090c5cb5cd2c5eb58d3c5eb59f2c5eb59d5c5eb59c9c5f358c8c5f359d1c5cb58fac5f92efc0f87910500009090909090909090908d4902c5fb11742410c5f928f2c5f928d10f1f4000c5fb104c24109090909085c00f840d0500009090909083f9320f8d770000009090909090909090909090909090909090909090909090498bb7580400008506ffc1c5f35ccec5f358cbc5f359f1c5f359cdc5f359cac5f358d0c5eb59cac5cb58f9c5f92efc0f870f000000909090c5fb11742410c5f928f1eb86909090ba01000000b800000000c5fb11742410c5f928f1e96affffff9090909090909090909041d1e04103d0458bc241ffc84183f9070f847104000090909090413bf80f84c20400009090909041ffc190909090909090ffc7c4c1732acac5fb101590fdffffc5e157db418bc18bcf458bcb448bda9090909090443bd10f8eb401000090909090909090909090909090909090909090909090909090c5cb2af1c5cb59f5c5cb5ef1c5cb5cf2c5cb58fbc54359c7c5c359fdc5c359fbc5c358f8c54359cfc4413b58d1c5792ed40f8728010000909090ba01000000bf000000009090908bf7bf010000000f1f840000000000666666909090909085d20f84d80000009090909083ff320f8d890000009090909090909090909090909090909090909090909090498baf58040000854500ffc7c4413b5cc1c53b58c6c4413b59c8c53b59c5c5bb59ffc5c358f8c54359c7c4413358d0c5792ed40f8716000000909090c57b114c2410c4417928c8c57b10442410eb81909090be01000000ba00000000c57b114c2410c4417928c8c57b10442410e95effffff909090909090909090909090498bbf58040000850741d1e34403de8bf9ffc783f8070f841f00000090909090413bc80f844000000090909090ffc08bcfe99cfeffff909090ebbc909090904533d9458bcb41bb00000000b8000000008bcfe97bfeffff909090ba00000000bf01000000e9d3feffff9090909090909090b9070000002bc841d3e34533d9458bcb41bb00000000b8000000008bcfe93ffeffff9090909090ffc3c5fb1005b8fbffff8bc88bc3e9270200006666660f1f840000000000666666900f1f84000000000090909090909090909090c5cb2af0c5cb59f5c5cb5ef1c5cb5cf0bb0000000044894c240c458bcb448b5c240c0f1f400090909090443bd30f8eb501000090909090909090909090909090909090909090909090909090c5c32afbc5c359fdc5c35ef9c5c35cfac54358c3c4413b59c8c53b59c5c53b59c3c4414b58c0c4413b59d0c4413358dac5792edc0f8727010000909090ba01000000bf000000009090908bf7bf01000000660f1f8400000000009090909085d20f84dd0000009090909083ff320f8d8e0000009090909090909090909090909090909090909090909090498baf58040000854500ffc7c441335ccac53358cfc4413359d1c53359cdc4413359c0c53b58c6c4413b59c8c4412b58d9c5792edc0f8719000000909090c57b11542410c4417928d1c57b104c2410e97cffffff909090be01000000ba00000000c57b11542410c4417928d1c57b104c2410e959ffffff909090909090909090909090498bbf58040000850741d1e14403ce8bfbffc783f9070f841f00000090909090443bc30f843d00000090909090ffc18bdfe997feffff909090ebbc909090904533d98bdfb90000000041b900000000e979feffff909090ba00000000bf01000000e9d4feffff9090909090909090bb070000002bd98bcb41d3e14533d98bdfb90000000041b900000000e93efeffff909090909090498b9f580400008503ffc044894c240c458bcb448b5c240c90909090443bd00f8fe3fdffff9090909090909090418bc1488b6c24204883c428493ba7500400000f879f000000c3909090e972fbffff909090904133d341b900000000448bdaba00000000e989fbffff909090e950fbffff909090e948fbffff909090e940fbffff909090ba01000000b800000000e91bfaffff909090e926fbffff909090b800000000ba01000000e960faffff9090909090909090b907000000412bc9d3e24133d341b900000000448bdaba00000000e91dfbffff48896c2420e829d5ccfee9fef8fffff4488d0d4dffffff49898f68040000e9f0e2cefef4e8ea75e2fef4e804d2cefef4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 OSR_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 90 58 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@536dc5f0 slotKind: QWORD  <||@
  Comment 90 60 r10|DWORD = MOV input: [rsi|QWORD + 160] size: DWORD  <||@
  Comment 97 62 r11|DWORD = MOV input: [rsi|QWORD + 152] size: DWORD  <||@
  Comment 104 64 r8|DWORD = MOV input: [rsi|QWORD + 144] size: DWORD  <||@
  Comment 111 66 r9|DWORD = MOV input: [rsi|QWORD + 136] size: DWORD  <||@
  Comment 118 68 rbx|DWORD = MOV input: [rsi|QWORD + 128] size: DWORD  <||@
  Comment 124 70 xmm0|DOUBLE = MOVSD input: [rsi|QWORD + 112] size: SD  <||@
  Comment 129 72 rdi|DWORD = MOV input: [rsi|QWORD + 104] size: DWORD  <||@
  Comment 132 74 xmm1|DOUBLE = MOVSD input: [rsi|QWORD + 88] size: SD  <||@
  Comment 137 76 xmm2|DOUBLE = MOVSD input: [rsi|QWORD + 72] size: SD  <||@
  Comment 142 78 xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: [rsi|QWORD + 56]) size: XMM  <||@
  Comment 147 80 xmm3|DOUBLE = MOVSD input: [rsi|QWORD + 40] size: SD  <||@
  Comment 152 82 rcx|DWORD = MOV input: [rsi|QWORD + 32] size: DWORD  <||@
  Comment 155 84 rax|DWORD = MOV input: [rsi|QWORD + 24] size: DWORD  <||@
  Comment 158 86 rdx|DWORD = MOV input: [rsi|QWORD + 16] size: DWORD  <||@
  Comment 161 88 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 161 {Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 166 90 xmm4|DOUBLE = MOVE input: double[4.0|0x4010000000000000]  <||@
  Comment 166 {DataSection[0x0]}  <||@
  Comment 174 92 xmm5|DOUBLE = MOVE input: double[2.0|0x4000000000000000]  <||@
  Comment 174 {DataSection[0x8]}  <||@
  Comment 182 94 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 190 block B2 null  <||@
  Comment 190 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 108 NOP  <||@
  Comment 191 110 NOP  <||@
  Comment 192 112 NOP  <||@
  Comment 193 114 NOP  <||@
  Comment 194 116 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B21 y: 50 size: DWORD inlinedY: null  <||@
  Comment 203 block B3 null  <||@
  Comment 203 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 203 120 NOP  <||@
  Comment 204 122 NOP  <||@
  Comment 205 124 NOP  <||@
  Comment 206 126 NOP  <||@
  Comment 207 128 NOP  <||@
  Comment 208 130 NOP  <||@
  Comment 209 132 NOP  <||@
  Comment 210 134 NOP  <||@
  Comment 211 136 NOP  <||@
  Comment 212 138 NOP  <||@
  Comment 213 140 NOP  <||@
  Comment 214 142 NOP  <||@
  Comment 215 144 NOP  <||@
  Comment 216 146 NOP  <||@
  Comment 217 148 NOP  <||@
  Comment 218 150 NOP  <||@
  Comment 219 152 NOP  <||@
  Comment 220 154 NOP  <||@
  Comment 221 156 xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 225 158 xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 229 160 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 233 162 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 237 164 xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 241 166 xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 245 168 xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 249 170 UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 253 172 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 259 block B5 null  <||@
  Comment 259 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 190 NOP  <||@
  Comment 260 192 NOP  <||@
  Comment 261 194 NOP  <||@
  Comment 262 196 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 262 block B6 null  <||@
  Comment 262 198 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 262 200 NOP  <||@
  Comment 263 202 NOP  <||@
  Comment 264 204 NOP  <||@
  Comment 265 206 NOP  <||@
  Comment 266 208 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 274 block B8 null  <||@
  Comment 274 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 274 222 NOP  <||@
  Comment 275 224 NOP  <||@
  Comment 276 226 NOP  <||@
  Comment 277 228 NOP  <||@
  Comment 278 230 NOP  <||@
  Comment 279 232 rsi|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 283 234 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B20 y: 50 size: DWORD inlinedY: null  <||@
  Comment 292 block B9 null  <||@
  Comment 292 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 238 NOP  <||@
  Comment 293 240 NOP  <||@
  Comment 294 242 NOP  <||@
  Comment 295 244 NOP  <||@
  Comment 296 246 NOP  <||@
  Comment 297 248 NOP  <||@
  Comment 298 250 NOP  <||@
  Comment 299 252 NOP  <||@
  Comment 300 254 NOP  <||@
  Comment 301 256 NOP  <||@
  Comment 302 258 NOP  <||@
  Comment 303 260 NOP  <||@
  Comment 304 262 NOP  <||@
  Comment 305 264 NOP  <||@
  Comment 306 266 NOP  <||@
  Comment 307 268 NOP  <||@
  Comment 308 270 NOP  <||@
  Comment 309 272 NOP  <||@
  Comment 310 274 NOP  <||@
  Comment 311 276 NOP  <||@
  Comment 312 278 xmm2|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 316 280 xmm2|DOUBLE = VADDSD (x: xmm2|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 320 282 xmm6|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 324 284 xmm2|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 328 286 xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 332 288 xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 336 290 xmm2|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 340 292 xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 344 294 UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 348 296 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 354 block B11 null  <||@
  Comment 354 312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 354 314 NOP  <||@
  Comment 355 316 NOP  <||@
  Comment 356 318 NOP  <||@
  Comment 357 320 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 357 block B12 null  <||@
  Comment 357 322 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 357 324 NOP  <||@
  Comment 358 326 NOP  <||@
  Comment 359 328 NOP  <||@
  Comment 360 330 NOP  <||@
  Comment 361 332 NOP  <||@
  Comment 362 334 NOP  <||@
  Comment 363 336 rcx|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD  <||@
  Comment 366 338 stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE  <||@
  Comment 372 340 xmm6|DOUBLE = MOVE input: xmm2|DOUBLE moveKind: DOUBLE  <||@
  Comment 376 342 xmm2|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE  <||@
  Comment 380 346 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 380 block B13 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 380 348 [] = LABEL alignment: 16 numbPhis: 6 label: ?  <||@
  Comment 384 344 xmm1|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 390 350 NOP  <||@
  Comment 391 352 NOP  <||@
  Comment 392 354 NOP  <||@
  Comment 393 356 NOP  <||@
  Comment 394 358 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 size: DWORD  <||@
  Comment 402 block B14 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 402 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 402 362 NOP  <||@
  Comment 403 364 NOP  <||@
  Comment 404 366 NOP  <||@
  Comment 405 368 NOP  <||@
  Comment 406 370 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B18 y: 50 size: DWORD inlinedY: null  <||@
  Comment 415 block B15 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 415 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 374 NOP  <||@
  Comment 416 376 NOP  <||@
  Comment 417 378 NOP  <||@
  Comment 418 380 NOP  <||@
  Comment 419 382 NOP  <||@
  Comment 420 384 NOP  <||@
  Comment 421 386 NOP  <||@
  Comment 422 388 NOP  <||@
  Comment 423 390 NOP  <||@
  Comment 424 392 NOP  <||@
  Comment 425 394 NOP  <||@
  Comment 426 396 NOP  <||@
  Comment 427 398 NOP  <||@
  Comment 428 400 NOP  <||@
  Comment 429 402 NOP  <||@
  Comment 430 404 NOP  <||@
  Comment 431 406 NOP  <||@
  Comment 432 408 NOP  <||@
  Comment 433 410 NOP  <||@
  Comment 434 412 NOP  <||@
  Comment 435 414 NOP  <||@
  Comment 436 416 NOP  <||@
  Comment 437 418 NOP  <||@
  Comment 438 420 SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73]  <||@
  Comment 445 []at Mandelbrot.mandelbrot(int) [bci: 73, duringCall: false, rethrow: false]
              |0  |1          |2          |3         |4         |5          |6            |7  |8          |9            |10  |11           |12  |13           |14  |15           |16  |17         |18         |19         |20  |21 
     locals:  |-  |r10|DWORD  |r11|DWORD  |r8|DWORD  |r9|DWORD  |rbx|DWORD  |xmm0|DOUBLE  |-  |rdi|DWORD  |xmm1|DOUBLE  |-   |xmm2|DOUBLE  |-   |xmm6|DOUBLE  |-   |xmm3|DOUBLE  |-   |rcx|DWORD  |rax|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 445 {infopoint: SAFEPOINT}  <||@
  Comment 445 POLL_FAR  <||@
  Comment 447 422 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 449 424 xmm1|DOUBLE = VSUBSD (x: xmm1|DOUBLE, y: xmm6|DOUBLE) size: XMM  <||@
  Comment 453 426 xmm1|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 457 428 xmm6|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 461 430 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 465 432 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 469 434 xmm2|DOUBLE = VADDSD (x: xmm1|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 473 436 xmm1|DOUBLE = VMULSD (x: xmm2|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 477 438 xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 481 440 UCOMIS (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 485 442 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 491 block B17 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 491 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 491 466 NOP  <||@
  Comment 492 468 NOP  <||@
  Comment 493 470 NOP  <||@
  Comment 494 472 stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE  <||@
  Comment 500 474 xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE  <||@
  Comment 504 478 JUMP ~outgoingValues: [] destination: B17 -> B13  <||@
  Comment 506 block B16 loop 0 depth 1 header:364|LoopBegin  <||@
  Comment 506 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 506 446 NOP  <||@
  Comment 507 448 NOP  <||@
  Comment 508 450 NOP  <||@
  Comment 509 452 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 514 454 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 519 456 stack:32|DOUBLE = MOVE input: xmm6|DOUBLE moveKind: DOUBLE  <||@
  Comment 525 458 xmm6|DOUBLE = MOVE input: xmm1|DOUBLE moveKind: DOUBLE  <||@
  Comment 529 462 JUMP ~outgoingValues: [] destination: B16 -> B13  <||@
  Comment 534 block B18 null  <||@
  Comment 534 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 534 482 NOP  <||@
  Comment 535 484 NOP  <||@
  Comment 536 486 NOP  <||@
  Comment 537 488 JUMP ~outgoingValues: [] destination: B18 -> B22  <||@
  Comment 537 block B22 null  <||@
  Comment 537 520 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 537 522 NOP  <||@
  Comment 538 524 NOP  <||@
  Comment 539 526 NOP  <||@
  Comment 540 528 NOP  <||@
  Comment 541 530 NOP  <||@
  Comment 542 532 NOP  <||@
  Comment 543 534 NOP  <||@
  Comment 544 536 r8|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 547 538 rdx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 550 540 r8|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 556 542 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 7 size: DWORD inlinedY: null  <||@
  Comment 566 block B24 null  <||@
  Comment 566 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 566 NOP  <||@
  Comment 567 568 NOP  <||@
  Comment 568 570 NOP  <||@
  Comment 569 572 NOP  <||@
  Comment 570 574 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD  <||@
  Comment 579 block B26 null  <||@
  Comment 579 610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 579 612 NOP  <||@
  Comment 580 614 NOP  <||@
  Comment 581 616 NOP  <||@
  Comment 582 618 NOP  <||@
  Comment 583 620 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 586 622 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 586 block B27 null  <||@
  Comment 586 624 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 586 626 NOP  <||@
  Comment 587 628 NOP  <||@
  Comment 588 630 NOP  <||@
  Comment 589 632 NOP  <||@
  Comment 590 634 NOP  <||@
  Comment 591 636 NOP  <||@
  Comment 592 638 NOP  <||@
  Comment 593 640 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 595 642 xmm1|DOUBLE = CVTSI2SD value: r10|DWORD size: DWORD  <||@
  Comment 600 644 xmm2|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 600 {DataSection[0x10]}  <||@
  Comment 608 646 xmm3|DOUBLE = MOVE input: double[0.0|0x0]  <||@
  Comment 612 648 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 615 650 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 617 652 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 620 654 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 623 656 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 623 block B28 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 623 658 [] = LABEL alignment: 16 numbPhis: 4 label: ?  <||@
  Comment 624 660 NOP  <||@
  Comment 625 662 NOP  <||@
  Comment 626 664 NOP  <||@
  Comment 627 666 NOP  <||@
  Comment 628 668 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9986666670314993 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 size: DWORD  <||@
  Comment 637 block B29 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 637 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 672 NOP  <||@
  Comment 638 674 NOP  <||@
  Comment 639 676 NOP  <||@
  Comment 640 678 NOP  <||@
  Comment 641 680 NOP  <||@
  Comment 642 682 NOP  <||@
  Comment 643 684 NOP  <||@
  Comment 644 686 NOP  <||@
  Comment 645 688 NOP  <||@
  Comment 646 690 NOP  <||@
  Comment 647 692 NOP  <||@
  Comment 648 694 NOP  <||@
  Comment 649 696 NOP  <||@
  Comment 650 698 NOP  <||@
  Comment 651 700 NOP  <||@
  Comment 652 702 NOP  <||@
  Comment 653 704 NOP  <||@
  Comment 654 706 NOP  <||@
  Comment 655 708 NOP  <||@
  Comment 656 710 NOP  <||@
  Comment 657 712 NOP  <||@
  Comment 658 714 NOP  <||@
  Comment 659 716 NOP  <||@
  Comment 660 718 NOP  <||@
  Comment 661 720 NOP  <||@
  Comment 662 722 xmm6|DOUBLE = CVTSI2SD value: rcx|DWORD size: DWORD  <||@
  Comment 666 724 xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 670 726 xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 674 728 xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 678 730 xmm7|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 682 732 xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 686 734 xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 690 736 xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 694 738 xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 698 740 xmm9|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 702 742 xmm10|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 707 744 UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 711 746 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 717 block B31 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 717 762 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 717 764 NOP  <||@
  Comment 718 766 NOP  <||@
  Comment 719 768 NOP  <||@
  Comment 720 770 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 725 772 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 730 774 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 730 block B32 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 730 776 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 730 778 NOP  <||@
  Comment 731 780 NOP  <||@
  Comment 732 782 NOP  <||@
  Comment 733 784 rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 735 786 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 740 788 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 740 block B33 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 740 790 [] = LABEL alignment: 16 numbPhis: 6 label: ?  <||@
  Comment 752 792 NOP  <||@
  Comment 753 794 NOP  <||@
  Comment 754 796 NOP  <||@
  Comment 755 798 NOP  <||@
  Comment 756 800 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B34 size: DWORD  <||@
  Comment 764 block B34 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 764 802 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 804 NOP  <||@
  Comment 765 806 NOP  <||@
  Comment 766 808 NOP  <||@
  Comment 767 810 NOP  <||@
  Comment 768 812 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 y: 50 size: DWORD inlinedY: null  <||@
  Comment 777 block B35 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 777 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 777 816 NOP  <||@
  Comment 778 818 NOP  <||@
  Comment 779 820 NOP  <||@
  Comment 780 822 NOP  <||@
  Comment 781 824 NOP  <||@
  Comment 782 826 NOP  <||@
  Comment 783 828 NOP  <||@
  Comment 784 830 NOP  <||@
  Comment 785 832 NOP  <||@
  Comment 786 834 NOP  <||@
  Comment 787 836 NOP  <||@
  Comment 788 838 NOP  <||@
  Comment 789 840 NOP  <||@
  Comment 790 842 NOP  <||@
  Comment 791 844 NOP  <||@
  Comment 792 846 NOP  <||@
  Comment 793 848 NOP  <||@
  Comment 794 850 NOP  <||@
  Comment 795 852 NOP  <||@
  Comment 796 854 NOP  <||@
  Comment 797 856 NOP  <||@
  Comment 798 858 NOP  <||@
  Comment 799 860 NOP  <||@
  Comment 800 862 SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73]  <||@
  Comment 807 []at Mandelbrot.mandelbrot(int) [bci: 73, duringCall: false, rethrow: false]
              |0  |1          |2         |3          |4          |5          |6            |7  |8          |9            |10  |11           |12  |13           |14  |15           |16  |17         |18         |19         |20  |21 
     locals:  |-  |r10|DWORD  |r9|DWORD  |r11|DWORD  |rax|DWORD  |rbx|DWORD  |xmm0|DOUBLE  |-  |rcx|DWORD  |xmm8|DOUBLE  |-   |xmm7|DOUBLE  |-   |xmm9|DOUBLE  |-   |xmm6|DOUBLE  |-   |rdi|DWORD  |rdx|DWORD  |rsi|DWORD  |-   |-    <||@
  Comment 807 {infopoint: SAFEPOINT}  <||@
  Comment 807 POLL_FAR  <||@
  Comment 810 864 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 812 866 xmm8|DOUBLE = VSUBSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 817 868 xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM  <||@
  Comment 821 870 xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 826 872 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 830 874 xmm7|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 834 876 xmm7|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 838 878 xmm8|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 842 880 xmm10|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 847 882 UCOMIS (x: xmm10|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 851 884 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 857 block B37 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 857 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 857 908 NOP  <||@
  Comment 858 910 NOP  <||@
  Comment 859 912 NOP  <||@
  Comment 860 914 stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 866 916 xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE  <||@
  Comment 871 918 xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 877 920 JUMP ~outgoingValues: [] destination: B37 -> B33  <||@
  Comment 879 block B36 loop 2 depth 2 outer 1 header:223|LoopBegin  <||@
  Comment 879 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 879 888 NOP  <||@
  Comment 880 890 NOP  <||@
  Comment 881 892 NOP  <||@
  Comment 882 894 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 887 896 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 892 898 stack:32|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 898 900 xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE  <||@
  Comment 903 902 xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 909 904 JUMP ~outgoingValues: [] destination: B36 -> B33  <||@
  Comment 914 block B39 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 914 932 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 914 934 NOP  <||@
  Comment 915 936 NOP  <||@
  Comment 916 938 NOP  <||@
  Comment 917 940 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 917 block B40 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 917 942 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 917 944 NOP  <||@
  Comment 918 946 NOP  <||@
  Comment 919 948 NOP  <||@
  Comment 920 950 NOP  <||@
  Comment 921 952 NOP  <||@
  Comment 922 954 NOP  <||@
  Comment 923 956 NOP  <||@
  Comment 924 958 NOP  <||@
  Comment 925 960 NOP  <||@
  Comment 926 962 SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147]  <||@
  Comment 933 []at Mandelbrot.mandelbrot(int) [bci: 147, duringCall: false, rethrow: false]
              |0  |1          |2         |3          |4          |5          |6            |7  |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19         |20  |21 
     locals:  |-  |r10|DWORD  |r9|DWORD  |r11|DWORD  |rax|DWORD  |rbx|DWORD  |xmm0|DOUBLE  |-  |rcx|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |rsi|DWORD  |-   |-    <||@
  Comment 933 {infopoint: SAFEPOINT}  <||@
  Comment 933 POLL_FAR  <||@
  Comment 935 964 r11|DWORD = SHL value: r11|DWORD size: DWORD  <||@
  Comment 938 966 r11|DWORD = ADD (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 941 968 rdi|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 945 970 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 7 size: DWORD inlinedY: null  <||@
  Comment 954 block B42 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 954 994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 954 996 NOP  <||@
  Comment 955 998 NOP  <||@
  Comment 956 1000 NOP  <||@
  Comment 957 1002 NOP  <||@
  Comment 958 1004 CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 967 block B44 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 967 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 967 1044 NOP  <||@
  Comment 968 1046 NOP  <||@
  Comment 969 1048 NOP  <||@
  Comment 970 1050 NOP  <||@
  Comment 971 1052 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 973 1054 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 975 1056 JUMP ~outgoingValues: [] destination: B44 -> B28  <||@
  Comment 980 block B38 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 980 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 980 924 NOP  <||@
  Comment 981 926 NOP  <||@
  Comment 982 928 NOP  <||@
  Comment 983 930 JUMP ~outgoingValues: [] destination: B38 -> B40  <||@
  Comment 985 block B41 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 985 972 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 985 974 NOP  <||@
  Comment 986 976 NOP  <||@
  Comment 987 978 NOP  <||@
  Comment 988 980 NOP  <||@
  Comment 989 982 r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 992 984 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 995 986 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1001 988 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1006 990 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1008 992 JUMP ~outgoingValues: [] destination: B41 -> B28  <||@
  Comment 1013 block B30 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 1013 748 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1013 750 NOP  <||@
  Comment 1014 752 NOP  <||@
  Comment 1015 754 NOP  <||@
  Comment 1016 756 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1021 758 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1026 760 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 1031 block B43 loop 1 depth 1 header:198|LoopBegin  <||@
  Comment 1031 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1031 1008 NOP  <||@
  Comment 1032 1010 NOP  <||@
  Comment 1033 1012 NOP  <||@
  Comment 1034 1014 NOP  <||@
  Comment 1035 1016 NOP  <||@
  Comment 1036 1018 NOP  <||@
  Comment 1037 1020 NOP  <||@
  Comment 1038 1022 NOP  <||@
  Comment 1039 1024 rcx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 1044 1026 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1046 1028 r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1049 1030 r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1052 1032 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1055 1034 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1061 1036 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1066 1038 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1068 1040 JUMP ~outgoingValues: [] destination: B43 -> B28  <||@
  Comment 1073 block B45 null  <||@
  Comment 1073 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1073 1060 NOP  <||@
  Comment 1074 1062 NOP  <||@
  Comment 1075 1064 NOP  <||@
  Comment 1076 1066 NOP  <||@
  Comment 1077 1068 NOP  <||@
  Comment 1078 1070 rbx|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 1080 1072 xmm0|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000]  <||@
  Comment 1080 {DataSection[0x18]}  <||@
  Comment 1088 1074 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1090 1076 rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1092 1078 JUMP ~outgoingValues: [] destination: B45 -> B46  <||@
  Comment 1097 block B47 loop 3 depth 1 header:7|LoopBegin  <||@
  Comment 1097 1092 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1120 1094 NOP  <||@
  Comment 1121 1096 NOP  <||@
  Comment 1122 1098 NOP  <||@
  Comment 1123 1100 NOP  <||@
  Comment 1124 1102 NOP  <||@
  Comment 1125 1104 NOP  <||@
  Comment 1126 1106 NOP  <||@
  Comment 1127 1108 NOP  <||@
  Comment 1128 1110 NOP  <||@
  Comment 1129 1112 NOP  <||@
  Comment 1130 1114 xmm6|DOUBLE = CVTSI2SD value: rax|DWORD size: DWORD  <||@
  Comment 1134 1116 xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 1138 1118 xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 1142 1120 xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm0|DOUBLE) size: XMM  <||@
  Comment 1146 1122 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1151 1124 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1156 1126 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1159 1128 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1164 1130 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 1164 block B48 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1164 1132 [] = LABEL alignment: 16 numbPhis: 4 label: ?  <||@
  Comment 1168 1134 NOP  <||@
  Comment 1169 1136 NOP  <||@
  Comment 1170 1138 NOP  <||@
  Comment 1171 1140 NOP  <||@
  Comment 1172 1142 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9986684424410921 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B65 size: DWORD  <||@
  Comment 1181 block B49 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1181 1144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1181 1146 NOP  <||@
  Comment 1182 1148 NOP  <||@
  Comment 1183 1150 NOP  <||@
  Comment 1184 1152 NOP  <||@
  Comment 1185 1154 NOP  <||@
  Comment 1186 1156 NOP  <||@
  Comment 1187 1158 NOP  <||@
  Comment 1188 1160 NOP  <||@
  Comment 1189 1162 NOP  <||@
  Comment 1190 1164 NOP  <||@
  Comment 1191 1166 NOP  <||@
  Comment 1192 1168 NOP  <||@
  Comment 1193 1170 NOP  <||@
  Comment 1194 1172 NOP  <||@
  Comment 1195 1174 NOP  <||@
  Comment 1196 1176 NOP  <||@
  Comment 1197 1178 NOP  <||@
  Comment 1198 1180 NOP  <||@
  Comment 1199 1182 NOP  <||@
  Comment 1200 1184 NOP  <||@
  Comment 1201 1186 NOP  <||@
  Comment 1202 1188 NOP  <||@
  Comment 1203 1190 NOP  <||@
  Comment 1204 1192 NOP  <||@
  Comment 1205 1194 NOP  <||@
  Comment 1206 1196 xmm7|DOUBLE = CVTSI2SD value: rbx|DWORD size: DWORD  <||@
  Comment 1210 1198 xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 1214 1200 xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 1218 1202 xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 1222 1204 xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 1226 1206 xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1231 1208 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 1235 1210 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 1239 1212 xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1244 1214 xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1249 1216 xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM  <||@
  Comment 1254 1218 UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 1258 1220 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 1264 block B51 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1264 1236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1264 1238 NOP  <||@
  Comment 1265 1240 NOP  <||@
  Comment 1266 1242 NOP  <||@
  Comment 1267 1244 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1272 1246 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1277 1248 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1277 block B52 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1277 1250 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1277 1252 NOP  <||@
  Comment 1278 1254 NOP  <||@
  Comment 1279 1256 NOP  <||@
  Comment 1280 1258 rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1282 1260 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1287 1262 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 1287 block B53 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1287 1264 [] = LABEL alignment: 16 numbPhis: 6 label: ?  <||@
  Comment 1296 1266 NOP  <||@
  Comment 1297 1268 NOP  <||@
  Comment 1298 1270 NOP  <||@
  Comment 1299 1272 NOP  <||@
  Comment 1300 1274 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.02637967163659351 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B54 size: DWORD  <||@
  Comment 1308 block B54 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1308 1276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1308 1278 NOP  <||@
  Comment 1309 1280 NOP  <||@
  Comment 1310 1282 NOP  <||@
  Comment 1311 1284 NOP  <||@
  Comment 1312 1286 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 0.9592378571951741 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B59 y: 50 size: DWORD inlinedY: null  <||@
  Comment 1321 block B55 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1321 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1321 1290 NOP  <||@
  Comment 1322 1292 NOP  <||@
  Comment 1323 1294 NOP  <||@
  Comment 1324 1296 NOP  <||@
  Comment 1325 1298 NOP  <||@
  Comment 1326 1300 NOP  <||@
  Comment 1327 1302 NOP  <||@
  Comment 1328 1304 NOP  <||@
  Comment 1329 1306 NOP  <||@
  Comment 1330 1308 NOP  <||@
  Comment 1331 1310 NOP  <||@
  Comment 1332 1312 NOP  <||@
  Comment 1333 1314 NOP  <||@
  Comment 1334 1316 NOP  <||@
  Comment 1335 1318 NOP  <||@
  Comment 1336 1320 NOP  <||@
  Comment 1337 1322 NOP  <||@
  Comment 1338 1324 NOP  <||@
  Comment 1339 1326 NOP  <||@
  Comment 1340 1328 NOP  <||@
  Comment 1341 1330 NOP  <||@
  Comment 1342 1332 NOP  <||@
  Comment 1343 1334 NOP  <||@
  Comment 1344 1336 SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73]  <||@
  Comment 1351 []at Mandelbrot.mandelbrot(int) [bci: 73, duringCall: false, rethrow: false]
              |0  |1          |2          |3         |4          |5          |6            |7  |8          |9            |10  |11           |12  |13            |14  |15           |16  |17         |18         |19         |20  |21 
     locals:  |-  |r10|DWORD  |r11|DWORD  |r9|DWORD  |rcx|DWORD  |rax|DWORD  |xmm6|DOUBLE  |-  |rbx|DWORD  |xmm9|DOUBLE  |-   |xmm8|DOUBLE  |-   |xmm10|DOUBLE  |-   |xmm7|DOUBLE  |-   |rdi|DWORD  |rdx|DWORD  |rsi|DWORD  |-   |-    <||@
  Comment 1351 {infopoint: SAFEPOINT}  <||@
  Comment 1351 POLL_FAR  <||@
  Comment 1354 1338 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 1356 1340 xmm9|DOUBLE = VSUBSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM  <||@
  Comment 1361 1342 xmm9|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 1365 1344 xmm10|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 1370 1346 xmm9|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 1374 1348 xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1379 1350 xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM  <||@
  Comment 1383 1352 xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 1388 1354 xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 1393 1356 UCOMIS (x: xmm11|DOUBLE, y: xmm4|DOUBLE) size: PD  <||@
  Comment 1397 1358 FLOATBRANCH trueDestinationProbability: 0.028245570261643316 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 1403 block B57 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1403 1380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1403 1382 NOP  <||@
  Comment 1404 1384 NOP  <||@
  Comment 1405 1386 NOP  <||@
  Comment 1406 1388 stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE  <||@
  Comment 1412 1390 xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 1417 1392 xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 1423 1394 JUMP ~outgoingValues: [] destination: B57 -> B53  <||@
  Comment 1428 block B56 loop 5 depth 3 outer 4 header:60|LoopBegin  <||@
  Comment 1428 1360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1428 1362 NOP  <||@
  Comment 1429 1364 NOP  <||@
  Comment 1430 1366 NOP  <||@
  Comment 1431 1368 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1436 1370 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1441 1372 stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE  <||@
  Comment 1447 1374 xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 1452 1376 xmm9|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 1458 1378 JUMP ~outgoingValues: [] destination: B56 -> B53  <||@
  Comment 1463 block B59 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1463 1406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1463 1408 NOP  <||@
  Comment 1464 1410 NOP  <||@
  Comment 1465 1412 NOP  <||@
  Comment 1466 1414 JUMP ~outgoingValues: [] destination: B59 -> B60  <||@
  Comment 1466 block B60 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1466 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1466 1418 NOP  <||@
  Comment 1467 1420 NOP  <||@
  Comment 1468 1422 NOP  <||@
  Comment 1469 1424 NOP  <||@
  Comment 1470 1426 NOP  <||@
  Comment 1471 1428 NOP  <||@
  Comment 1472 1430 NOP  <||@
  Comment 1473 1432 NOP  <||@
  Comment 1474 1434 NOP  <||@
  Comment 1475 1436 SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147]  <||@
  Comment 1482 []at Mandelbrot.mandelbrot(int) [bci: 147, duringCall: false, rethrow: false]
              |0  |1          |2          |3         |4          |5          |6            |7  |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19         |20  |21 
     locals:  |-  |r10|DWORD  |r11|DWORD  |r9|DWORD  |rcx|DWORD  |rax|DWORD  |xmm6|DOUBLE  |-  |rbx|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |rsi|DWORD  |-   |-    <||@
  Comment 1482 {infopoint: SAFEPOINT}  <||@
  Comment 1482 POLL_FAR  <||@
  Comment 1484 1438 r9|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 1487 1440 r9|DWORD = ADD (x: r9|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1490 1442 rdi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 1494 1444 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.12399999916610138 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 y: 7 size: DWORD inlinedY: null  <||@
  Comment 1503 block B62 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1503 1466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1503 1468 NOP  <||@
  Comment 1504 1470 NOP  <||@
  Comment 1505 1472 NOP  <||@
  Comment 1506 1474 NOP  <||@
  Comment 1507 1476 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0015220706491220204 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD  <||@
  Comment 1516 block B64 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1516 1514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1516 1516 NOP  <||@
  Comment 1517 1518 NOP  <||@
  Comment 1518 1520 NOP  <||@
  Comment 1519 1522 NOP  <||@
  Comment 1520 1524 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 1522 1526 rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1524 1528 JUMP ~outgoingValues: [] destination: B64 -> B48  <||@
  Comment 1529 block B58 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1529 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1529 1398 NOP  <||@
  Comment 1530 1400 NOP  <||@
  Comment 1531 1402 NOP  <||@
  Comment 1532 1404 JUMP ~outgoingValues: [] destination: B58 -> B60  <||@
  Comment 1534 block B61 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1534 1446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1534 1448 NOP  <||@
  Comment 1535 1450 NOP  <||@
  Comment 1536 1452 NOP  <||@
  Comment 1537 1454 NOP  <||@
  Comment 1538 1456 r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1541 1458 rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1543 1460 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1548 1462 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1554 1464 JUMP ~outgoingValues: [] destination: B61 -> B48  <||@
  Comment 1559 block B50 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1559 1222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1559 1224 NOP  <||@
  Comment 1560 1226 NOP  <||@
  Comment 1561 1228 NOP  <||@
  Comment 1562 1230 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1567 1232 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1572 1234 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 1577 block B63 loop 4 depth 2 outer 3 header:30|LoopBegin  <||@
  Comment 1577 1478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1577 1480 NOP  <||@
  Comment 1578 1482 NOP  <||@
  Comment 1579 1484 NOP  <||@
  Comment 1580 1486 NOP  <||@
  Comment 1581 1488 NOP  <||@
  Comment 1582 1490 NOP  <||@
  Comment 1583 1492 NOP  <||@
  Comment 1584 1494 NOP  <||@
  Comment 1585 1496 rbx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 1590 1498 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1592 1500 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1594 1502 r9|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1597 1504 r11|DWORD = XOR (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1600 1506 rbx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1602 1508 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1607 1510 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1613 1512 JUMP ~outgoingValues: [] destination: B63 -> B48  <||@
  Comment 1618 block B65 loop 3 depth 1 header:7|LoopBegin  <||@
  Comment 1618 1530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1618 1532 NOP  <||@
  Comment 1619 1534 NOP  <||@
  Comment 1620 1536 NOP  <||@
  Comment 1621 1538 NOP  <||@
  Comment 1622 1540 NOP  <||@
  Comment 1623 1542 NOP  <||@
  Comment 1624 1544 SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207]  <||@
  Comment 1631 []at Mandelbrot.mandelbrot(int) [bci: 207, duringCall: false, rethrow: false]
              |0  |1          |2          |3         |4          |5          |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21 
     locals:  |-  |r10|DWORD  |r11|DWORD  |r9|DWORD  |rcx|DWORD  |rax|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1631 {infopoint: SAFEPOINT}  <||@
  Comment 1631 POLL_FAR  <||@
  Comment 1633 1546 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 1635 1548 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1640 1550 r9|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1643 1552 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1648 1554 JUMP ~outgoingValues: [] destination: B65 -> B46  <||@
  Comment 1648 block B46 loop 3 depth 1 header:7|LoopBegin  <||@
  Comment 1648 1080 [] = LABEL alignment: 0 numbPhis: 4 label: ?  <||@
  Comment 1648 1082 NOP  <||@
  Comment 1649 1084 NOP  <||@
  Comment 1650 1086 NOP  <||@
  Comment 1651 1088 NOP  <||@
  Comment 1652 1090 CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9986676830062805 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B66 size: DWORD  <||@
  Comment 1661 block B66 null  <||@
  Comment 1661 1556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1661 1558 NOP  <||@
  Comment 1662 1560 NOP  <||@
  Comment 1663 1562 NOP  <||@
  Comment 1664 1564 NOP  <||@
  Comment 1665 1566 NOP  <||@
  Comment 1666 1568 NOP  <||@
  Comment 1667 1570 NOP  <||@
  Comment 1668 1572 NOP  <||@
  Comment 1669 1574 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1672 1576 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1681 POLL_RETURN_FAR  <||@
  Comment 1695 block B19 null  <||@
  Comment 1695 490 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1695 492 NOP  <||@
  Comment 1696 494 NOP  <||@
  Comment 1697 496 NOP  <||@
  Comment 1698 498 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 1703 block B23 null  <||@
  Comment 1703 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1703 546 NOP  <||@
  Comment 1704 548 NOP  <||@
  Comment 1705 550 NOP  <||@
  Comment 1706 552 NOP  <||@
  Comment 1707 554 rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1710 556 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1716 558 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1719 560 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1724 562 JUMP ~outgoingValues: [] destination: B23 -> B27  <||@
  Comment 1729 block B21 null  <||@
  Comment 1729 510 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1729 512 NOP  <||@
  Comment 1730 514 NOP  <||@
  Comment 1731 516 NOP  <||@
  Comment 1732 518 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 1737 block B20 null  <||@
  Comment 1737 500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1737 502 NOP  <||@
  Comment 1738 504 NOP  <||@
  Comment 1739 506 NOP  <||@
  Comment 1740 508 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 1745 block B1 null  <||@
  Comment 1745 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1745 98 NOP  <||@
  Comment 1746 100 NOP  <||@
  Comment 1747 102 NOP  <||@
  Comment 1748 104 JUMP ~outgoingValues: [] destination: B1 -> B22  <||@
  Comment 1753 block B4 null  <||@
  Comment 1753 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1753 176 NOP  <||@
  Comment 1754 178 NOP  <||@
  Comment 1755 180 NOP  <||@
  Comment 1756 182 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1761 184 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1766 186 JUMP ~outgoingValues: [] destination: B4 -> B6  <||@
  Comment 1771 block B7 null  <||@
  Comment 1771 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1771 212 NOP  <||@
  Comment 1772 214 NOP  <||@
  Comment 1773 216 NOP  <||@
  Comment 1774 218 JUMP ~outgoingValues: [] destination: B7 -> B22  <||@
  Comment 1779 block B10 null  <||@
  Comment 1779 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1779 300 NOP  <||@
  Comment 1780 302 NOP  <||@
  Comment 1781 304 NOP  <||@
  Comment 1782 306 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1787 308 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1792 310 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 1797 block B25 null  <||@
  Comment 1797 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1797 578 NOP  <||@
  Comment 1798 580 NOP  <||@
  Comment 1799 582 NOP  <||@
  Comment 1800 584 NOP  <||@
  Comment 1801 586 NOP  <||@
  Comment 1802 588 NOP  <||@
  Comment 1803 590 NOP  <||@
  Comment 1804 592 NOP  <||@
  Comment 1805 594 rcx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 1810 596 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1813 598 rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1815 600 rdx|DWORD = XOR (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1818 602 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1824 604 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1827 606 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1832 608 JUMP ~outgoingValues: [] destination: B25 -> B27  <||@
  Comment 1842 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1867 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1873 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1873 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1879 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1879 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
