begin_compilation
  name " HotSpotCompilation-8325[java.util.AbstractSequentialList.iterator()]"
  method "HotSpotCompilation-8325[java.util.AbstractSequentialList.iterator()]"
  date 1724269758421
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i164  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.LinkedList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v176 v174 ?5 ?9 a92 ?59 v175 v177 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
lastLocationAccess: - 
=== Succesors ===
next: v30 
=== Usages ===
v18 v27 v171 i52 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 lastLocationAccess: - #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 1]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 v18 ?36 v149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i164 
y: i4 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i164 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.33945971152980836
stamp: void
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
i164 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v29 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i164 
y: i4 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i164 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v81 #falseSuccessor: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid j103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: -20499
stableDimension: 0
stamp: i32 [-20499]
stampKind: i32
value: int[-20499|0xffffffffffffafed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 12]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
x: i164 
y: i170 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i164 y: i170  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: PROFILED designatedSuccessorProbability: 0.06715448547280134
stamp: void
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v46 #falseSuccessor: v47  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i32
=== Inputs ===
x: i164 
y: i51 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i164 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i52 
y: i44 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i52 y: i44  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v97 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:589) [bci: 63]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a165 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a165  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a165 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
a71 
=== Predecessor ===
v97 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v176 lastLocationAccess: - #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a165 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a165  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a165 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid j109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: -24595
stableDimension: 0
stamp: i32 [-24595]
stampKind: i32
value: int[-24595|0xffffffffffff9fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i32 [-24595 - -20499] bits:1...10xx111111101101
valueDescription: i32
=== Inputs ===
merge: v100 
values: i102 i108 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v100 values: i102 i108  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i64 [660 - 1940] bits:0...0x1x10010100
valueDescription: i64
=== Inputs ===
merge: v100 
values: j103 j109 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v100 values: j103 j109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v101 v107 
=== Succesors ===
next: v106 
=== Usages ===
i104 j105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v101 v107 #next: v106  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<AbstractSequentialList.iterator()>
localsSize: 1
locksSize: 0
sourceFile: AbstractSequentialList.java
sourceLine: 240
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i104 
speculation: j105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i104 speculation: j105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a166 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a166  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a166 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v177 
lastLocationAccess: - 
=== Succesors ===
next: v34 
=== Usages ===
a75 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v177 lastLocationAccess: - #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a166 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a166  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: a# java.util.LinkedList$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v33 
values: a31 a75 a71 
=== Succesors ===
=== Usages ===
?36 a88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v33 values: a31 a75 a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v56 
=== Succesors ===
next: v161 
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v56 #next: v161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j112 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j141 
=== Usages ===
v181 v182 
=== Predecessor ===
v161 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j141  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j141 v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j141 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v181 
lastLocationAccess: - 
=== Succesors ===
next: j142 
=== Usages ===
j115 v183 v184 a124 v185 v186 v187 v188 
=== Predecessor ===
j112 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v181 lastLocationAccess: - #next: j142  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
=== Succesors ===
next: i167 
=== Usages ===
v116 
=== Predecessor ===
j141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - #next: i167  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:886) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
lastLocationAccess: - 
=== Succesors ===
next: v119 
=== Usages ===
v86 ?59 
=== Predecessor ===
j142 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v175 lastLocationAccess: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid j111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i64
=== Inputs ===
x: j141 
y: j111 
=== Succesors ===
=== Usages ===
v116 v143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j141 y: j111  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j142 
y: j115 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j142 y: j115  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v117 
=== Usages ===
=== Predecessor ===
i167 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v118 #falseSuccessor: v117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a125 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a125  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractSequentialList.iterator()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
sourceFile: AbstractSequentialList.java
sourceLine: 240
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
sourceFile: AbstractList.java
sourceLine: 313
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?5 
values: a1 
=== Succesors ===
=== Usages ===
?57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?5 values: a1  <|@  <|@
tid a58 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.nextIndex int:12>, HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.expectedModCount int:16>, HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.lastReturned LinkedList$Node:20>, HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.next LinkedList$Node:24>, HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.this$0 LinkedList:28>]
hasIdentity: true
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
objectId: 0
stamp: a!# java.util.LinkedList$ListItr
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?36 ?36 ?57 ?59 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
localsSize: 2
locksSize: 0
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?9 
values: a58 
=== Succesors ===
=== Usages ===
?36 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?9 values: a58  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a58 
values: - i167 - - a1 
=== Succesors ===
=== Usages ===
?36 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a58 values: - i167 - - a1  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: putfield
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
localsSize: 3
locksSize: 0
sourceFile: LinkedList.java
sourceLine: 890
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?57 
values: a58 a35 a58 - i4 
virtualObjectMappings: ?59 
=== Succesors ===
=== Usages ===
v173 a125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?57 values: a58 a35 a58 - i4 virtualObjectMappings: ?59  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?36 
arguments: v110 
=== Succesors ===
next: v173 
=== Usages ===
v173 a139 
=== Predecessor ===
v118 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?36 arguments: v110 #next: v173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-40305|0xffffffffffff628f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?36 
object: a125 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
a125 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?36 object: a125 #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v181 
lastLocationAccess: - 
value: j115 
stateAfter: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v181 lastLocationAccess: - value: j115 stateAfter: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
address: v185 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v185 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
value: j120 
stateAfter: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - value: j120 stateAfter: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
value: v163 
stateAfter: - 
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - value: v163 stateAfter: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
value: i4 
stateAfter: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - value: i4 stateAfter: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
value: j122 
stateAfter: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - value: j122 stateAfter: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
value: j122 
stateAfter: - 
=== Succesors ===
next: a124 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - value: j122 stateAfter: - #next: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j141 
=== Succesors ===
next: v127 
=== Usages ===
a139 
=== Predecessor ===
v151 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j141 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
a124 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v128 
values: a124 a125 
=== Succesors ===
=== Usages ===
v180 a94 v178 v179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v128 values: a124 a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v127 v129 
=== Succesors ===
next: v93 
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v127 v129 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a139 
index: - 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a92 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: Compress
stamp: n!# java.util.LinkedList
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v180 
lastLocationAccess: - 
value: a92 
stateAfter: - 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v180 lastLocationAccess: - value: a92 stateAfter: - #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a139 
index: - 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: Compress
stamp: n# java.util.LinkedList$Node
=== Inputs ===
value: a35 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
lastLocationAccess: - 
value: a88 
stateAfter: - 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 lastLocationAccess: - value: a88 stateAfter: - #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a139 
index: - 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
lastLocationAccess: - 
value: i167 
stateAfter: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v178 lastLocationAccess: - value: i167 stateAfter: - #next: v95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.AbstractSequentialList.iterator() [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a94 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractSequentialList.iterator() [bci: -6] Placeholder
stamp: a!# java.util.LinkedList$ListItr
=== Inputs ===
object: a139 
=== Succesors ===
next: v15 
=== Usages ===
v15 
=== Predecessor ===
v95 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a139 #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 4]
stamp: void
=== Inputs ===
memoryMap: - 
result: a94 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a94 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a94  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i164  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.LinkedList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v176 v174 ?5 ?9 a92 ?59 v175 v177 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i164 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
lastLocationAccess: - 
=== Succesors ===
next: v30 
=== Usages ===
v18 v27 v171 i52 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 lastLocationAccess: - #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 1]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 v18 ?36 v149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i164 
y: i4 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i164 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.33945971152980836
stamp: void
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
i164 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v29 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i164 
y: i4 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i164 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v81 #falseSuccessor: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid j103 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result int[-20499|0xffffffffffffafed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: -20499
stableDimension: 0
stamp: i32 [-20499]
stampKind: i32
value: int[-20499|0xffffffffffffafed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 12]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
x: i164 
y: i170 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i164 y: i170  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: PROFILED designatedSuccessorProbability: 0.06715448547280134
stamp: void
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v46 #falseSuccessor: v47  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i32
=== Inputs ===
x: i164 
y: i51 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i164 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i52 
y: i44 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i52 y: i44  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v97 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:589) [bci: 63]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a165 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a165  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a165 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
a71 
=== Predecessor ===
v97 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v176 lastLocationAccess: - #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a165 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a165  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a165 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid j109 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result int[-24595|0xffffffffffff9fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: -24595
stableDimension: 0
stamp: i32 [-24595]
stampKind: i32
value: int[-24595|0xffffffffffff9fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i104 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i32 [-24595 - -20499] bits:1...10xx111111101101
valueDescription: i32
=== Inputs ===
merge: v100 
values: i102 i108 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v100 values: i102 i108  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i64 [660 - 1940] bits:0...0x1x10010100
valueDescription: i64
=== Inputs ===
merge: v100 
values: j103 j109 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v100 values: j103 j109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v101 v107 
=== Succesors ===
next: v106 
=== Usages ===
i104 j105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v101 v107 #next: v106  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<AbstractSequentialList.iterator()>
localsSize: 1
locksSize: 0
sourceFile: AbstractSequentialList.java
sourceLine: 240
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:552) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:570) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i104 
speculation: j105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i104 speculation: j105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a166 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a166  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a166 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v177 
lastLocationAccess: - 
=== Succesors ===
next: v34 
=== Usages ===
a75 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v177 lastLocationAccess: - #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid a75 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a166 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a166  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a35 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: a# java.util.LinkedList$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v33 
values: a31 a75 a71 
=== Succesors ===
=== Usages ===
?36 a88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v33 values: a31 a75 a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v56 
=== Succesors ===
next: v161 
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v56 #next: v161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j112 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j141 
=== Usages ===
v181 v182 
=== Predecessor ===
v161 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j141  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j141 v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j141 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v181 
lastLocationAccess: - 
=== Succesors ===
next: j142 
=== Usages ===
j115 v183 v184 a124 v185 v186 v187 v188 
=== Predecessor ===
j112 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v181 lastLocationAccess: - #next: j142  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j142 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
=== Succesors ===
next: i167 
=== Usages ===
v116 
=== Predecessor ===
j141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - #next: i167  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i167 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:886) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
lastLocationAccess: - 
=== Succesors ===
next: v119 
=== Usages ===
v86 ?59 
=== Predecessor ===
j142 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v175 lastLocationAccess: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid j111 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j115 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: i64
=== Inputs ===
x: j141 
y: j111 
=== Succesors ===
=== Usages ===
v116 v143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j141 y: j111  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j142 
y: j115 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j142 y: j115  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v117 
=== Usages ===
=== Predecessor ===
i167 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v118 #falseSuccessor: v117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a125 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a125  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractSequentialList.iterator()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
sourceFile: AbstractSequentialList.java
sourceLine: 240
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:878) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
sourceFile: AbstractList.java
sourceLine: 313
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?5 
values: a1 
=== Succesors ===
=== Usages ===
?57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?5 values: a1  <|@  <|@
tid a58 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.nextIndex int:12>, HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.expectedModCount int:16>, HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.lastReturned LinkedList$Node:20>, HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.next LinkedList$Node:24>, HotSpotResolvedJavaFieldImpl<java.util.LinkedList$ListItr.this$0 LinkedList:28>]
hasIdentity: true
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
objectId: 0
stamp: a!# java.util.LinkedList$ListItr
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?36 ?36 ?57 ?59 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
localsSize: 2
locksSize: 0
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?9 
values: a58 
=== Succesors ===
=== Usages ===
?36 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?9 values: a58  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a58 
values: - i167 - - a1 
=== Succesors ===
=== Usages ===
?36 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a58 values: - i167 - - a1  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: putfield
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
localsSize: 3
locksSize: 0
sourceFile: LinkedList.java
sourceLine: 890
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?57 
values: a58 a35 a58 - i4 
virtualObjectMappings: ?59 
=== Succesors ===
=== Usages ===
v173 a125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?57 values: a58 a35 a58 - i4 virtualObjectMappings: ?59  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?36 
arguments: v110 
=== Succesors ===
next: v173 
=== Usages ===
v173 a139 
=== Predecessor ===
v118 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?36 arguments: v110 #next: v173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-40305|0xffffffffffff628f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?36 
object: a125 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
a125 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?36 object: a125 #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v181 
lastLocationAccess: - 
value: j115 
stateAfter: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v181 lastLocationAccess: - value: j115 stateAfter: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v10|QWORD + 288] <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
address: v185 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v185 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result [v10|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
value: j120 
stateAfter: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - value: j120 stateAfter: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result [v10|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
result meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
value: v163 
stateAfter: - 
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - value: v163 stateAfter: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result [v10|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
value: i4 
stateAfter: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - value: i4 stateAfter: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [v10|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
value: j122 
stateAfter: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - value: j122 stateAfter: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result [v10|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j141 
index: - 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
value: j122 
stateAfter: - 
=== Succesors ===
next: a124 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - value: j122 stateAfter: - #next: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a124 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j141 
=== Succesors ===
next: v127 
=== Usages ===
a139 
=== Predecessor ===
v151 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j141 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
a124 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a139 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v128 
values: a124 a125 
=== Succesors ===
=== Usages ===
v180 a94 v178 v179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v128 values: a124 a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v127 v129 
=== Succesors ===
next: v93 
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v127 v129 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
result [v18|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a139 
index: - 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a92 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: Compress
stamp: n!# java.util.LinkedList
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v180 
lastLocationAccess: - 
value: a92 
stateAfter: - 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v180 lastLocationAccess: - value: a92 stateAfter: - #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
result [v18|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a139 
index: - 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
result v20|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
op: Compress
stamp: n# java.util.LinkedList$Node
=== Inputs ===
value: a35 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
lastLocationAccess: - 
value: a88 
stateAfter: - 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 lastLocationAccess: - value: a88 stateAfter: - #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
result [v18|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a139 
index: - 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 5]
at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
lastLocationAccess: - 
value: i167 
stateAfter: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v178 lastLocationAccess: - value: i167 stateAfter: - #next: v95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.AbstractSequentialList.iterator() [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a94 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a94 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractSequentialList.iterator() [bci: -6] Placeholder
stamp: a!# java.util.LinkedList$ListItr
=== Inputs ===
object: a139 
=== Succesors ===
next: v15 
=== Usages ===
v15 
=== Predecessor ===
v95 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a139 #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 4]
stamp: void
=== Inputs ===
memoryMap: - 
result: a94 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a94 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a94  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  260  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  260  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v18|q [0, 1[[230, 232[[258, 260[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v14|q [0, 22[[256, 258[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [22, 220[[234, 307[22 MustHaveRegister 24 MustHaveRegister 66 MustHaveRegister 112 MustHaveRegister 144 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [24, 52[[82, 94[24 MustHaveRegister 26 MustHaveRegister 38 MustHaveRegister 50 ShouldHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d v1|d [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [112, 114[112 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [286, 302[302 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [286, 304[304 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|d [68, 71[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [118, 224[[234, 266[224 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [140, 188[140 MustHaveRegister 146 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [142, 148[142 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [144, 228[[234, 266[144 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [146, 174[146 MustHaveRegister 148 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [254, 256[254 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q rax|q [260, 265[260 MustHaveRegister 262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v10|q [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v17|q [192, 230[222 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v0|q [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v9|q [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v18|q [0, 1[[230, 232[[258, 260[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v14|q [0, 22[[256, 258[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [22, 220[[234, 307[22 MustHaveRegister 24 MustHaveRegister 66 MustHaveRegister 112 MustHaveRegister 144 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [24, 52[[82, 94[24 MustHaveRegister 26 MustHaveRegister 38 MustHaveRegister 50 ShouldHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d v1|d [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [112, 114[112 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [286, 302[302 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q -1 [286, 304[304 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|d [68, 71[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v8|q [118, 224[[234, 266[224 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [140, 188[140 MustHaveRegister 146 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [142, 148[142 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r8|d]" v12|d -1 [144, 228[[234, 266[144 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r9|q]" v13|q -1 [146, 174[146 MustHaveRegister 148 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [254, 256[254 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|q [260, 265[260 MustHaveRegister 262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q v10|q [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q v17|q [192, 230[222 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v0|q [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r11|d]" v20|d v9|q [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  260  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v18|q [0, 1[[230, 232[[258, 260[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v14|q [0, 22[[256, 258[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [22, 220[[234, 307[22 MustHaveRegister 24 MustHaveRegister 66 MustHaveRegister 112 MustHaveRegister 144 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [24, 52[[82, 94[24 MustHaveRegister 26 MustHaveRegister 38 MustHaveRegister 50 ShouldHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d v1|d [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [112, 114[112 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [286, 302[302 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q -1 [286, 304[304 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|d [68, 71[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v8|q [118, 224[[234, 266[224 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [140, 188[140 MustHaveRegister 146 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [142, 148[142 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r8|d]" v12|d -1 [144, 228[[234, 266[144 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r9|q]" v13|q -1 [146, 174[146 MustHaveRegister 148 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [254, 256[254 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|q [260, 265[260 MustHaveRegister 262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q v10|q [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q v17|q [192, 230[222 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v0|q [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r11|d]" v20|d v9|q [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  260  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [int[-24595|0xffffffffffff9fed], long[1940|0x794]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [int[-20499|0xffffffffffffafed], long[660|0x294]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v18|q [0, 1[[230, 232[[258, 260[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v14|q [0, 22[[256, 258[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [22, 220[[234, 307[22 MustHaveRegister 24 MustHaveRegister 66 MustHaveRegister 112 MustHaveRegister 144 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [24, 52[[82, 94[24 MustHaveRegister 26 MustHaveRegister 38 MustHaveRegister 50 ShouldHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d v1|d [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [112, 114[112 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [286, 302[302 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q -1 [286, 304[304 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|d [68, 71[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v8|q [118, 224[[234, 266[224 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [140, 188[140 MustHaveRegister 146 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [142, 148[142 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r8|d]" v12|d -1 [144, 228[[234, 266[144 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r9|q]" v13|q -1 [146, 174[146 MustHaveRegister 148 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [254, 256[254 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|q [260, 265[260 MustHaveRegister 262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q v10|q [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q v17|q [192, 230[222 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v0|q [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r11|d]" v20|d v9|q [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  260  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v2|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction v11|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction v12|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v13|QWORD = LEA address: [v10|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v11|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [v10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [v10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [v10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v17|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v18|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [v18|QWORD[.] + 24], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [v18|QWORD[.] + 16], y: v12|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  260  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v12|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v12|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4604124837539311526
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603725294004162378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  144  <|@ instruction r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599786782439317684
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586553517598180804
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  258  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} r11|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2]
locals: r10|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1]
locals: r10|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] r8|DWORD Object[null] Object[null] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed] // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0]
locals: r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f858b010000909090909090909048896c24104c8bd6418b421085c00f84cf0000009090909085c00f8c1f01000090909090f7c0feffffff0f84c2000000909090909090418b421448c1e0034c8bd890909090909090909090498b87b8010000498bb7c8010000458b420c4c8d48204c3bce0f87ae00000090909090909090909090904d898fb80100000f18802001000048c70001000000c74008addeaddec7400c0000000048c740100000000048c74018000000009090909090909090909090909049c1ea034489501c49c1eb034489581844894010488b6c24104883c418493ba7500400000f87b4000000c5f877c390909049c7c300000000e94fffffff9090909090ffc883f8010f8d6f000000909090909090418b421848c1e0034c8bd8e929ffffff90909090909090909048beaddeaddeaddeaddee8000000000f1f8400000000008500e969ffffff90909049c7c09402000041bbedafffff9090909090909045899f840400004d898790040000e8000000000f1f84000000000090909049c7c09407000041bbed9fffffebcc48896c2410e800000000e966fefffff4488d0d38ffffff49898f68040000e918fefffff441c787840400008f62ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD  <||@
  Comment 71 22 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 74 24 rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 78 26 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 86 block B2 null  <||@
  Comment 86 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 86 30 NOP  <||@
  Comment 87 32 NOP  <||@
  Comment 88 34 NOP  <||@
  Comment 89 36 NOP  <||@
  Comment 90 38 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 98 block B4 null  <||@
  Comment 98 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 42 NOP  <||@
  Comment 99 44 NOP  <||@
  Comment 100 46 NOP  <||@
  Comment 101 48 NOP  <||@
  Comment 102 50 TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD  <||@
  Comment 114 block B9 null  <||@
  Comment 114 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 54 NOP  <||@
  Comment 115 56 NOP  <||@
  Comment 116 58 NOP  <||@
  Comment 117 60 NOP  <||@
  Comment 118 62 NOP  <||@
  Comment 119 64 NOP  <||@
  Comment 120 66 rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 124 68 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3  <||@
  Comment 128 -1 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 131 70 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 131 block B10 null  <||@
  Comment 131 118 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 131 120 NOP  <||@
  Comment 132 122 NOP  <||@
  Comment 133 124 NOP  <||@
  Comment 134 126 NOP  <||@
  Comment 135 128 NOP  <||@
  Comment 136 130 NOP  <||@
  Comment 137 132 NOP  <||@
  Comment 138 134 NOP  <||@
  Comment 139 136 NOP  <||@
  Comment 140 138 NOP  <||@
  Comment 141 140 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 148 142 rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD  <||@
  Comment 155 144 r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 159 146 r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD  <||@
  Comment 163 148 CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 172 block B12 null  <||@
  Comment 172 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 152 NOP  <||@
  Comment 173 154 NOP  <||@
  Comment 174 156 NOP  <||@
  Comment 175 158 NOP  <||@
  Comment 176 160 NOP  <||@
  Comment 177 162 NOP  <||@
  Comment 178 164 NOP  <||@
  Comment 179 166 NOP  <||@
  Comment 180 168 NOP  <||@
  Comment 181 170 NOP  <||@
  Comment 182 172 NOP  <||@
  Comment 183 174 MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD  <||@
  Comment 190 176 AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0  <||@
  Comment 197 178 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 204 180 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}  <||@
  Comment 204 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}}  <||@
  Comment 211 182 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 218 184 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 226 186 MOV x: [rax|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 234 188 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 234 190 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 234 block B13 null  <||@
  Comment 234 192 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 234 194 NOP  <||@
  Comment 235 196 NOP  <||@
  Comment 236 198 NOP  <||@
  Comment 237 200 NOP  <||@
  Comment 238 202 NOP  <||@
  Comment 239 204 NOP  <||@
  Comment 240 206 NOP  <||@
  Comment 241 208 NOP  <||@
  Comment 242 210 NOP  <||@
  Comment 243 212 NOP  <||@
  Comment 244 214 NOP  <||@
  Comment 245 216 NOP  <||@
  Comment 246 218 NOP  <||@
  Comment 247 220 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3  <||@
  Comment 251 222 MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 255 224 r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3  <||@
  Comment 259 226 MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 263 228 MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 267 232 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 276 POLL_RETURN_FAR  <||@
  Comment 293 block B1 null  <||@
  Comment 293 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 293 74 NOP  <||@
  Comment 294 76 NOP  <||@
  Comment 295 78 NOP  <||@
  Comment 296 -1 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 303 80 JUMP ~outgoingValues: [] destination: B1 -> B10  <||@
  Comment 308 block B5 null  <||@
  Comment 308 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 84 NOP  <||@
  Comment 309 86 NOP  <||@
  Comment 310 88 NOP  <||@
  Comment 311 90 NOP  <||@
  Comment 312 92 NOP  <||@
  Comment 313 94 rax|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 315 96 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null  <||@
  Comment 324 block B6 null  <||@
  Comment 324 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 100 NOP  <||@
  Comment 325 102 NOP  <||@
  Comment 326 104 NOP  <||@
  Comment 327 106 NOP  <||@
  Comment 328 108 NOP  <||@
  Comment 329 110 NOP  <||@
  Comment 330 112 rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 334 114 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3  <||@
  Comment 338 -1 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 341 116 JUMP ~outgoingValues: [] destination: B6 -> B10  <||@
  Comment 346 block B11 null  <||@
  Comment 346 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 346 236 NOP  <||@
  Comment 347 238 NOP  <||@
  Comment 348 240 NOP  <||@
  Comment 349 242 NOP  <||@
  Comment 350 244 NOP  <||@
  Comment 351 246 NOP  <||@
  Comment 352 248 NOP  <||@
  Comment 353 250 NOP  <||@
  Comment 354 252 NOP  <||@
  Comment 355 254 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}  <||@
  Comment 355 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}}  <||@
  Comment 365 258 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1]  <||@
  Comment 365 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 370 [r10:0, r11:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                             |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |r11|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                             |1 
     locals:  |-                                                                                                                                             |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.]   <||@
  Comment 378 262 NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1]  <||@
  Comment 378 [rax:0, r10:0, r11:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                             |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |r11|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                             |1 
     locals:  |-                                                                                                                                             |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.]   <||@
  Comment 378 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 380 264 JUMP ~outgoingValues: [] destination: B11 -> B13  <||@
  Comment 385 block B3 null  <||@
  Comment 385 276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 385 278 NOP  <||@
  Comment 386 280 NOP  <||@
  Comment 387 282 NOP  <||@
  Comment 388 -1 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 395 -1 r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed]  <||@
  Comment 401 284 JUMP ~outgoingValues: [] destination: B3 -> B8  <||@
  Comment 401 block B8 null  <||@
  Comment 401 286 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 401 288 NOP  <||@
  Comment 402 290 NOP  <||@
  Comment 403 292 NOP  <||@
  Comment 404 294 NOP  <||@
  Comment 405 296 NOP  <||@
  Comment 406 298 NOP  <||@
  Comment 407 300 NOP  <||@
  Comment 408 302 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 415 304 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 422 306 DEOPT info [bci:0]  <||@
  Comment 422 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 427 [r10:0]at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.]   <||@
  Comment 435 block B7 null  <||@
  Comment 435 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 435 268 NOP  <||@
  Comment 436 270 NOP  <||@
  Comment 437 272 NOP  <||@
  Comment 438 -1 r8|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 445 -1 r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed]  <||@
  Comment 451 274 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 458 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 483 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 511 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 516 [rax:0, r10:0, r11:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                             |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |r11|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                             |1 
     locals:  |-                                                                                                                                             |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.]   <||@
  Comment 524 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 524 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 530 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 530 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8325[java.util.AbstractSequentialList.iterator()]"
  method "HotSpotCompilation-8325[java.util.AbstractSequentialList.iterator()]"
  date 1724269758570
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af265a0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c3ea85fe66669089842400c0feff4883ec189041817f20000000000f858b010000909090909090909048896c24104c8bd6418b421085c00f84cf0000009090909085c00f8c1f01000090909090f7c0feffffff0f84c2000000909090909090418b421448c1e0034c8bd890909090909090909090498b87b8010000498bb7c8010000458b420c4c8d48204c3bce0f87ae00000090909090909090909090904d898fb80100000f18802001000048c70001000000c7400838231c01c7400c0000000048c740100000000048c74018000000009090909090909090909090909049c1ea034489501c49c1eb034489581844894010488b6c24104883c418493ba7500400000f87b4000000c5f877c390909049c7c300000000e94fffffff9090909090ffc883f8010f8d6f000000909090909090418b421848c1e0034c8bd8e929ffffff90909090909090909048be38231c2c787f0000e86e1b9bfe0f1f8400000000008500e969ffffff90909049c7c09402000041bbedafffff9090909090909045899f840400004d898790040000e82f4a86fe0f1f84000000000090909049c7c09407000041bbed9fffffebcc48896c2410e8b14a84fee966fefffff4488d0d38ffffff49898f68040000e9785886fef441c787840400008f62ffff49c7879004000000000000e8d64986fe0f1f840000000000e84feb99fef4e8694786fef4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3bc2b19d slotKind: QWORD  <||@
  Comment 71 22 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 74 24 rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 78 26 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.33945971152980836 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 86 block B2 null  <||@
  Comment 86 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 86 30 NOP  <||@
  Comment 87 32 NOP  <||@
  Comment 88 34 NOP  <||@
  Comment 89 36 NOP  <||@
  Comment 90 38 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 98 block B4 null  <||@
  Comment 98 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 42 NOP  <||@
  Comment 99 44 NOP  <||@
  Comment 100 46 NOP  <||@
  Comment 101 48 NOP  <||@
  Comment 102 50 TESTCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.06715448547280134 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: -2 size: DWORD  <||@
  Comment 114 block B9 null  <||@
  Comment 114 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 54 NOP  <||@
  Comment 115 56 NOP  <||@
  Comment 116 58 NOP  <||@
  Comment 117 60 NOP  <||@
  Comment 118 62 NOP  <||@
  Comment 119 64 NOP  <||@
  Comment 120 66 rax|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 124 68 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3  <||@
  Comment 128 -1 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 131 70 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 131 block B10 null  <||@
  Comment 131 118 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 131 120 NOP  <||@
  Comment 132 122 NOP  <||@
  Comment 133 124 NOP  <||@
  Comment 134 126 NOP  <||@
  Comment 135 128 NOP  <||@
  Comment 136 130 NOP  <||@
  Comment 137 132 NOP  <||@
  Comment 138 134 NOP  <||@
  Comment 139 136 NOP  <||@
  Comment 140 138 NOP  <||@
  Comment 141 140 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 148 142 rsi|QWORD = MOV input: [r15|QWORD + 456] size: QWORD  <||@
  Comment 155 144 r8|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 159 146 r9|QWORD = LEA address: [rax|QWORD + 32] size: QWORD  <||@
  Comment 163 148 CMPBRANCH (x: r9|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 172 block B12 null  <||@
  Comment 172 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 152 NOP  <||@
  Comment 173 154 NOP  <||@
  Comment 174 156 NOP  <||@
  Comment 175 158 NOP  <||@
  Comment 176 160 NOP  <||@
  Comment 177 162 NOP  <||@
  Comment 178 164 NOP  <||@
  Comment 179 166 NOP  <||@
  Comment 180 168 NOP  <||@
  Comment 181 170 NOP  <||@
  Comment 182 172 NOP  <||@
  Comment 183 174 MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD  <||@
  Comment 190 176 AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0  <||@
  Comment 197 178 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 204 180 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}  <||@
  Comment 204 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}}  <||@
  Comment 211 182 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 218 184 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 226 186 MOV x: [rax|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 234 188 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 234 190 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 234 block B13 null  <||@
  Comment 234 192 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 234 194 NOP  <||@
  Comment 235 196 NOP  <||@
  Comment 236 198 NOP  <||@
  Comment 237 200 NOP  <||@
  Comment 238 202 NOP  <||@
  Comment 239 204 NOP  <||@
  Comment 240 206 NOP  <||@
  Comment 241 208 NOP  <||@
  Comment 242 210 NOP  <||@
  Comment 243 212 NOP  <||@
  Comment 244 214 NOP  <||@
  Comment 245 216 NOP  <||@
  Comment 246 218 NOP  <||@
  Comment 247 220 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3  <||@
  Comment 251 222 MOV (x: [rax|QWORD[.] + 28], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 255 224 r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3  <||@
  Comment 259 226 MOV (x: [rax|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 263 228 MOV (x: [rax|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 267 232 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 276 POLL_RETURN_FAR  <||@
  Comment 293 block B1 null  <||@
  Comment 293 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 293 74 NOP  <||@
  Comment 294 76 NOP  <||@
  Comment 295 78 NOP  <||@
  Comment 296 -1 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 303 80 JUMP ~outgoingValues: [] destination: B1 -> B10  <||@
  Comment 308 block B5 null  <||@
  Comment 308 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 84 NOP  <||@
  Comment 309 86 NOP  <||@
  Comment 310 88 NOP  <||@
  Comment 311 90 NOP  <||@
  Comment 312 92 NOP  <||@
  Comment 313 94 rax|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 315 96 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 1 size: DWORD inlinedY: null  <||@
  Comment 324 block B6 null  <||@
  Comment 324 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 100 NOP  <||@
  Comment 325 102 NOP  <||@
  Comment 326 104 NOP  <||@
  Comment 327 106 NOP  <||@
  Comment 328 108 NOP  <||@
  Comment 329 110 NOP  <||@
  Comment 330 112 rax|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 334 114 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3d5801ac encoding: base: 0 shift: 3  <||@
  Comment 338 -1 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 341 116 JUMP ~outgoingValues: [] destination: B6 -> B10  <||@
  Comment 346 block B11 null  <||@
  Comment 346 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 346 236 NOP  <||@
  Comment 347 238 NOP  <||@
  Comment 348 240 NOP  <||@
  Comment 349 242 NOP  <||@
  Comment 350 244 NOP  <||@
  Comment 351 246 NOP  <||@
  Comment 352 248 NOP  <||@
  Comment 353 250 NOP  <||@
  Comment 354 252 NOP  <||@
  Comment 355 254 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}  <||@
  Comment 355 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}}  <||@
  Comment 365 258 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:38, 11, 2, 1]  <||@
  Comment 365 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 370 [r10:0, r11:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                             |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |r11|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                             |1 
     locals:  |-                                                                                                                                             |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.]   <||@
  Comment 378 262 NULLCHECK address: [rax|QWORD[.]] state [bci:38, 11, 2, 1]  <||@
  Comment 378 [rax:0, r10:0, r11:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                             |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |r11|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                             |1 
     locals:  |-                                                                                                                                             |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.]   <||@
  Comment 378 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 380 264 JUMP ~outgoingValues: [] destination: B11 -> B13  <||@
  Comment 385 block B3 null  <||@
  Comment 385 276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 385 278 NOP  <||@
  Comment 386 280 NOP  <||@
  Comment 387 282 NOP  <||@
  Comment 388 -1 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 395 -1 r11|DWORD = MOVE input: int[-20499|0xffffffffffffafed]  <||@
  Comment 401 284 JUMP ~outgoingValues: [] destination: B3 -> B8  <||@
  Comment 401 block B8 null  <||@
  Comment 401 286 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 401 288 NOP  <||@
  Comment 402 290 NOP  <||@
  Comment 403 292 NOP  <||@
  Comment 404 294 NOP  <||@
  Comment 405 296 NOP  <||@
  Comment 406 298 NOP  <||@
  Comment 407 300 NOP  <||@
  Comment 408 302 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 415 304 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 422 306 DEOPT info [bci:0]  <||@
  Comment 422 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 427 [r10:0]at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r10|QWORD[.]   <||@
  Comment 435 block B7 null  <||@
  Comment 435 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 435 268 NOP  <||@
  Comment 436 270 NOP  <||@
  Comment 437 272 NOP  <||@
  Comment 438 -1 r8|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 445 -1 r11|DWORD = MOVE input: int[-24595|0xffffffffffff9fed]  <||@
  Comment 451 274 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 458 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 483 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 511 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 516 [rax:0, r10:0, r11:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                             |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |r11|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:879) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                             |1 
     locals:  |-                                                                                                                                             |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=r8|DWORD,lastReturned=Object[null],next=Object[null],this$0=r10|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:313) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:240) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.]   <||@
  Comment 524 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 524 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 530 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 530 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
