begin_compilation
  name " HotSpotCompilation-11338[java.util.regex.Pattern$BnM.optimize(Pattern$Node)]"
  method "HotSpotCompilation-11338[java.util.regex.Pattern$BnM.optimize(Pattern$Node)]"
  date 1724269748750
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.util.regex.Pattern$Node
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?46 v1069 v1049 ?95 ?157 ?141 v1038 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5644
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v664 v1035 v1033 a732 a813 i1009 v1007 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-46131|0xffffffffffff4bcd]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1069 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
v1028 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1069 lastLocationAccess: - #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1007 
y: v1027 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1007 y: v1027  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v352 
falseSuccessor: v1024 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v352 #falseSuccessor: v1024  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1008 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1008 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$SliceNode.buffer
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5648) [bci: 13]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
lastLocationAccess: - 
=== Succesors ===
next: i1009 
=== Usages ===
a184 v409 v1039 v1040 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 lastLocationAccess: - #next: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1008 
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1009 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-47627|0xffffffffffff45f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1039 
lastLocationAccess: - 
=== Succesors ===
next: v997 
=== Usages ===
v17 v765 j300 a732 i342 ?141 i45 ?46 v308 i54 ?157 i165 ?95 v518 v248 i632 v449 
=== Predecessor ===
a1008 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1039 lastLocationAccess: - #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 72]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i54 i87 i92 i481 i501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 72]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1009 
y: i53 
=== Succesors ===
=== Usages ===
i68 j280 j277 v60 j302 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1009 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j302 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1009 
=== Succesors ===
=== Usages ===
v307 v324 j701 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j302 
y: j300 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j302 y: j300  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 v28 j701 v308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v996 
=== Usages ===
=== Predecessor ===
i1009 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v993 #falseSuccessor: v996  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
v993 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i162 
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v994 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v994 #falseSuccessor: v362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
v994 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v991 v992 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v991 v992 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5654) [bci: 21]
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 i627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5654) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i16 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5654) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v389 #falseSuccessor: v390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5654) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid j669 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: -99347
stableDimension: 0
stamp: i32 [-99347]
stampKind: i32
value: int[-99347|0xfffffffffffe7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v389 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
v264 v228 
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j697 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j697 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j758 
=== Usages ===
v1070 v1071 
=== Predecessor ===
v776 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j758  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j697 
index: - 
=== Succesors ===
=== Usages ===
j758 v760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j758 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
lastLocationAccess: - 
=== Succesors ===
next: j759 
=== Usages ===
j704 v1072 v1073 v1074 a731 v1075 v1079 v1076 v1077 v1078 
=== Predecessor ===
j697 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1070 lastLocationAccess: - #next: j759  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j697 
index: - 
=== Succesors ===
=== Usages ===
j759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j759 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
lastLocationAccess: - 
=== Succesors ===
next: v708 
=== Usages ===
v705 
=== Predecessor ===
j758 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1071 lastLocationAccess: - #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid j701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64 [0 - 8589934588] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j300 
y: i162 
=== Succesors ===
=== Usages ===
j742 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j300 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64 [23 - 8589934611] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j701 
y: j741 
=== Succesors ===
=== Usages ===
j703 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j701 y: j741  <|@  <|@
f <@~|@floating>@ <|@
tid j702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64 [0 - 8589934608] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j742 
y: j702 
=== Succesors ===
=== Usages ===
j704 v720 j744 v1076 v1077 v1078 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j742 y: j702  <|@  <|@
f <@~|@floating>@ <|@
tid j704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
=== Inputs ===
x: j703 
y: j758 
=== Succesors ===
=== Usages ===
v705 v760 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j703 y: j758  <|@  <|@
f <@~|@floating>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j759 
y: j704 
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j759 y: j704  <|@  <|@
f <@~|@floating>@ <|@
tid j691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j807 j728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v904 j678 v959 v766 v958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5648) [bci: 13]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j719 j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v764 v894 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j709 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 v891 v953 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a732 a813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v705 
=== Succesors ===
trueSuccessor: v707 
falseSuccessor: v706 
=== Usages ===
=== Predecessor ===
j759 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v705 #trueSuccessor: v707 #falseSuccessor: v706  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a732 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v696 i1009 
=== Succesors ===
next: v1033 
=== Usages ===
v1033 a756 
=== Predecessor ===
v707 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v696 i1009 #next: v1033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-197745|0xfffffffffffcfb8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a732 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
a732 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a732 #next: v736  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
v1033 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
lastLocationAccess: - 
value: j704 
stateAfter: - 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 lastLocationAccess: - value: j704 stateAfter: - #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j703 
index: j758 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j703 index: j758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
address: v1076 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1076 #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j703 
index: j758 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j703 index: j758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
address: v1077 
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1077 #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j703 
index: j758 
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j703 index: j758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
address: v1078 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1078 #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: - 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
lastLocationAccess: - 
value: j709 
stateAfter: - 
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1072 lastLocationAccess: - value: j709 stateAfter: - #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: - 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1079 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1079 lastLocationAccess: - value: v971 stateAfter: - #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: - 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
lastLocationAccess: - 
value: i1009 
stateAfter: - 
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 lastLocationAccess: - value: i1009 stateAfter: - #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64 [-16 - 8589934592] bits:x...x000
=== Inputs ===
x: j703 
y: j743 
=== Succesors ===
=== Usages ===
v712 v716 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j703 y: j743  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j744 
y: j745 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j744 y: j745  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v712 
=== Succesors ===
trueSuccessor: v714 
falseSuccessor: v713 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v712 #trueSuccessor: v714 #falseSuccessor: v713  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
v714 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v718 
values: j181 j728 
=== Succesors ===
=== Usages ===
v720 v1074 j728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v718 values: j181 j728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v717 
=== Succesors ===
next: v726 
=== Usages ===
j719 v725 v729 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v717 #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j719 
y: j703 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j719 y: j703  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v720 
=== Succesors ===
trueSuccessor: v721 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v720 #trueSuccessor: v721 #falseSuccessor: v725  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: j719 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: j719  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
lastLocationAccess: - 
value: j661 
stateAfter: - 
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1074 lastLocationAccess: - value: j661 stateAfter: - #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid j728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
=== Inputs ===
x: j719 
y: j691 
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j719 y: j691  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
loopBegin: v718 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v718  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v718 
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v718 #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: - 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
lastLocationAccess: - 
length: j744 
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1075 lastLocationAccess: - length: j744 #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v722 v724 
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v722 v724 #next: v730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a731 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j758 
=== Succesors ===
next: v734 
=== Usages ===
a756 
=== Predecessor ===
v730 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j758 #next: v734  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
a731 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v735 
values: a731 a732 
=== Succesors ===
=== Usages ===
v1067 v1068 ?141 ?157 v1045 ?46 v1044 v1048 ?95 a416 v1058 v1059 v1062 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v735 values: a731 a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v734 v736 
=== Succesors ===
next: v914 
=== Usages ===
a756 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v734 v736 #next: v914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j778 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j778 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j888 
=== Usages ===
v1080 v1081 
=== Predecessor ===
v914 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j888  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
j888 v890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j888 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
lastLocationAccess: - 
=== Succesors ===
next: j889 
=== Usages ===
j977 v1082 v1083 v1084 a812 v1096 v1095 v1094 v1085 
=== Predecessor ===
j778 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1080 lastLocationAccess: - #next: j889  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
j889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j889 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
lastLocationAccess: - 
=== Succesors ===
next: v788 
=== Usages ===
v785 
=== Predecessor ===
j888 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1081 lastLocationAccess: - #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid j976 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
rawvalue: 528
stableDimension: 0
stamp: i64 [528]
stampKind: i64
value: long[528|0x210]
=== Inputs ===
=== Succesors ===
=== Usages ===
j977 v802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
=== Inputs ===
x: j888 
y: j976 
=== Succesors ===
=== Usages ===
v785 v890 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j888 y: j976  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j889 
y: j977 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j889 y: j977  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v895 a813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v785 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
j889 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v785 #trueSuccessor: v787 #falseSuccessor: v786  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a813 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a813 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v696 i392 
=== Succesors ===
next: v1035 
=== Usages ===
v1035 a886 
=== Predecessor ===
v787 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v696 i392 #next: v1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-233073|0xfffffffffffc718f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a813 
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
a813 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a813 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
v1035 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
lastLocationAccess: - 
value: j977 
stateAfter: - 
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1080 lastLocationAccess: - value: j977 stateAfter: - #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
displacement: 784
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
address: v1094 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1094 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
displacement: 848
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
address: v1095 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1095 #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
displacement: 912
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
address: v1096 
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1096 #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
lastLocationAccess: - 
value: j709 
stateAfter: - 
=== Succesors ===
next: v894 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1082 lastLocationAccess: - value: j709 stateAfter: - #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1085 lastLocationAccess: - value: v971 stateAfter: - #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1083 
lastLocationAccess: - 
value: i392 
stateAfter: - 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1083 lastLocationAccess: - value: i392 stateAfter: - #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
v895 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v800 
values: j181 j807 
=== Succesors ===
=== Usages ===
v802 v1084 j807 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v800 values: j181 j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 84
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v799 
=== Succesors ===
next: v805 
=== Usages ===
j801 v804 v808 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v799 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j801 
y: j976 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j801 y: j976  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v803 
falseSuccessor: v804 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v803 #falseSuccessor: v804  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: j801 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1084 
lastLocationAccess: - 
value: j661 
stateAfter: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1084 lastLocationAccess: - value: j661 stateAfter: - #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
=== Inputs ===
x: j801 
y: j691 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j801 y: j691  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v800 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v800  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v800 
=== Succesors ===
next: a812 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v800 #next: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j888 
=== Succesors ===
next: v815 
=== Usages ===
a886 
=== Predecessor ===
v804 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j888 #next: v815  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
a812 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v816 
values: a812 a813 
=== Succesors ===
=== Usages ===
a394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v816 values: a812 a813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v815 v817 
=== Succesors ===
next: v395 
=== Usages ===
a886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v815 v817 #next: v395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern$Node) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a394 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern$Node) [bci: -6] Placeholder
stamp: a!# int[]
=== Inputs ===
object: a886 
=== Succesors ===
next: i1010 
=== Usages ===
v1041 ?173 v1043 a412 v1055 v1057 v1061 v1064 v1066 
=== Predecessor ===
v395 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a886 #next: i1010  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1008 
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1010 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
lastLocationAccess: - 
=== Succesors ===
next: v205 
=== Usages ===
i132 
=== Predecessor ===
a394 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 lastLocationAccess: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 51]
rawvalue: 127
stableDimension: 0
stamp: i32 [127]
stampKind: i32
value: int[127|0x7f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 i132 i427 i453 i527 i576 i591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1010 
y: i35 
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1010 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i132 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j271 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j271  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 55]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 v47 i520 v264 i143 v205 i428 i454 v497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
lastLocationAccess: - 
value: i37 
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
i1010 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1041 lastLocationAccess: - value: i37 stateAfter: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid a184 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5648) [bci: 13]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1008 
=== Succesors ===
=== Usages ===
v1065 ?46 ?157 ?95 ?141 v1063 v1060 v1042 v1046 v1047 v1054 v1056 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
v205 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v25 
values: i37 i38 
=== Succesors ===
=== Usages ===
i38 v28 j272 i430 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v25 values: i37 i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v24 
=== Succesors ===
next: v33 
=== Usages ===
i143 v30 v41 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v24 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i143 
y: i162 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i143 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v32 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1011 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1011  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i143 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i143  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j272 
=== Succesors ===
=== Usages ===
i1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1011 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
lastLocationAccess: - 
=== Succesors ===
next: v219 
=== Usages ===
i36 
=== Predecessor ===
v32 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 lastLocationAccess: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1011 
y: i35 
=== Succesors ===
=== Usages ===
j273 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1011 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i36 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j273 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j273  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i143 
y: i37 
=== Succesors ===
=== Usages ===
v219 i143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i143 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
lastLocationAccess: - 
value: i38 
stateAfter: - 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
i1011 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1043 lastLocationAccess: - value: i38 stateAfter: - #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v25 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v25 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v25 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i625 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i632 i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i632 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-4 - 2147483643]
=== Inputs ===
x: i1009 
y: i625 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1009 y: i625  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v422 
values: i143 i627 
=== Succesors ===
=== Usages ===
v423 i428 j439 i456 i568 i626 i627 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v422 values: i143 i627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 25
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v444 
=== Succesors ===
next: v426 
=== Usages ===
v424 v429 i430 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v444 #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i430 
y: i632 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i430 y: i632  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.3333333333333339
stamp: void
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v425 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v425 #falseSuccessor: v424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1012 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1012  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i430 
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i430  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j439 
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1012 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
i427 
=== Predecessor ===
v425 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1054 lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1012 
y: i35 
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1012 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i427 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i427  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j440 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j440  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i430 
y: i37 
=== Succesors ===
=== Usages ===
j538 v438 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
lastLocationAccess: - 
value: i428 
stateAfter: - 
=== Succesors ===
next: i1013 
=== Usages ===
=== Predecessor ===
i1012 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 lastLocationAccess: - value: i428 stateAfter: - #next: i1013  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i428 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i428  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j538 
=== Succesors ===
=== Usages ===
i1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
i527 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1013 
y: i35 
=== Succesors ===
=== Usages ===
j539 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1013 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j539 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i527 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i527  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j539 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j539  <|@  <|@
f <@~|@floating>@ <|@
tid i568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i430 
y: i162 
=== Succesors ===
=== Usages ===
v537 j587 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
lastLocationAccess: - 
value: i568 
stateAfter: - 
=== Succesors ===
next: i1014 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1061 lastLocationAccess: - value: i568 stateAfter: - #next: i1014  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i568 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i568  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j587 
=== Succesors ===
=== Usages ===
i1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1014 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
lastLocationAccess: - 
=== Succesors ===
next: v586 
=== Usages ===
i576 
=== Predecessor ===
v537 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1063 lastLocationAccess: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1014 
y: i35 
=== Succesors ===
=== Usages ===
j588 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1014 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j588 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i576 
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i576  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j588 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j588  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i430 
y: i328 
=== Succesors ===
=== Usages ===
v586 j600 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1064 
lastLocationAccess: - 
value: i626 
stateAfter: - 
=== Succesors ===
next: i1015 
=== Usages ===
=== Predecessor ===
i1014 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1064 lastLocationAccess: - value: i626 stateAfter: - #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid j600 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i626 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i626  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j600 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
i591 
=== Predecessor ===
v586 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1065 lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1015 
y: i35 
=== Succesors ===
=== Usages ===
j601 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1015 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j601 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i591 
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i591  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j601 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j601  <|@  <|@
f <@~|@floating>@ <|@
tid i627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i430 
y: i16 
=== Succesors ===
=== Usages ===
v599 i430 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
lastLocationAccess: - 
value: i627 
stateAfter: - 
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 lastLocationAccess: - value: i627 stateAfter: - #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v422 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v422 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v422 #next: v470  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v448 
values: i430 i454 
=== Succesors ===
=== Usages ===
v449 i454 j465 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v448 values: i430 i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 25
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v470 
=== Succesors ===
next: v452 
=== Usages ===
v450 v455 i456 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v470 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i456 
y: i1009 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i456 y: i1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v451 #falseSuccessor: v450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1016 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1016  <|@  <|@
f <@~|@floating>@ <|@
tid j465 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i456 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i456  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j465 
=== Succesors ===
=== Usages ===
i1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1016 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
lastLocationAccess: - 
=== Succesors ===
next: v464 
=== Usages ===
i453 
=== Predecessor ===
v451 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1056 lastLocationAccess: - #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1016 
y: i35 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1016 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i453 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i453  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j466 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j466  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i456 
y: i37 
=== Succesors ===
=== Usages ===
i456 v464 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i456 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
lastLocationAccess: - 
value: i454 
stateAfter: - 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
i1016 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1057 lastLocationAccess: - value: i454 stateAfter: - #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v448 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v448  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v448 
=== Succesors ===
next: v1005 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v448 #next: v1005  <|@  <|@
tid a168 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<int>
hasIdentity: true
length: 128
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
objectId: 0
stamp: a!# int[]
=== Inputs ===
=== Succesors ===
=== Usages ===
?95 ?157 ?173 ?141 ?46 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@jdk.graal.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a168 
materializedValue: a394 
=== Succesors ===
=== Usages ===
?95 ?46 ?157 ?141 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a168 materializedValue: a394  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i165 i569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32 [-2 - 2147483645]
=== Inputs ===
x: i1009 
y: i164 
=== Succesors ===
=== Usages ===
i159 j1020 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1009 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid j1020 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i165 
=== Succesors ===
=== Usages ===
j344 v1044 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i165  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -3
stableDimension: 0
stamp: i32 [-3]
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i342 i628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-3 - 2147483644]
=== Inputs ===
x: i1009 
y: i341 
=== Succesors ===
=== Usages ===
j1021 i520 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1009 y: i341  <|@  <|@
f <@~|@floating>@ <|@
tid j1021 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i342 
=== Succesors ===
=== Usages ===
j344 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i342  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1020 
y: j1021 
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1020 y: j1021  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j344 
y: j316 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j344 y: j316  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j323 
y: j300 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j323 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v1001 
falseSuccessor: v1004 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v1001 #falseSuccessor: v1004  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
v331 v623 v511 
=== Predecessor ===
v1005 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j1020 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j1020  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 84]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j277 
=== Succesors ===
=== Usages ===
i1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j277  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 v477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i517 
=== Succesors ===
=== Usages ===
i520 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i517  <|@  <|@
f <@~|@floating>@ <|@
tid i520 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-3 - 2147483644]
=== Inputs ===
condition: v518 
trueValue: i37 
falseValue: i342 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v518 trueValue: i37 falseValue: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
v1001 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v44 
values: i1009 i92 i92 
=== Succesors ===
=== Usages ===
?46 v47 ?157 v60 v236 i68 i92 v228 v488 v508 v559 v615 v621 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v44 values: i1009 i92 i92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v43 
=== Succesors ===
next: v52 
=== Usages ===
i45 v50 v93 v108 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v43 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 67]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i37 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 67]
profileData: PROFILED designatedSuccessorProbability: 0.1428571428571428
stamp: void
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v50 #falseSuccessor: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: i32
=== Inputs ===
x: i45 
y: i53 
=== Succesors ===
=== Usages ===
i45 i45 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i45 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 78]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i45 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 78]
profileData: PROFILED designatedSuccessorProbability: 0.16666666666666666
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v105 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v390 
address: v1044 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v390 address: v1044 lastLocationAccess: - value: i45 stateAfter: - #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i165 i87 
=== Succesors ===
=== Usages ===
i87 v79 i483 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v76 values: i165 i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.000000000000001
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v75 
=== Succesors ===
next: v86 
=== Usages ===
i159 v84 v90 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v75 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i159 
y: i520 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i159 y: i520  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v84 #falseSuccessor: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
v331 
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
guards: v1001 v80 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1001 v80  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i159 
y: i53 
=== Succesors ===
=== Usages ===
j276 i159 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i159 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i87 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j276 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v331 
address: v1045 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v331 address: v1045 lastLocationAccess: - value: i45 stateAfter: - #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
loopBegin: v76 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v76 
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v76 #next: v492  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v476 
values: i159 i629 
=== Succesors ===
=== Usages ===
v477 i481 i503 i569 i628 i629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v476 values: i159 i629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 76
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.000000000000001
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v492 
=== Succesors ===
next: v480 
=== Usages ===
v479 v482 i483 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v492 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i483 
y: i517 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i483 y: i517  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 0.7999999999999998
stamp: void
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v479 #falseSuccessor: v478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
v623 
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
guards: v1001 v478 
=== Succesors ===
=== Usages ===
v559 v615 v488 v621 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1001 v478  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i483 
y: i53 
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i483 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i481 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i481  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j489 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v623 
address: v1058 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v623 address: v1058 lastLocationAccess: - value: i45 stateAfter: - #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid i569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i483 
y: i164 
=== Succesors ===
=== Usages ===
j560 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i483 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i569 
=== Succesors ===
=== Usages ===
v1062 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i569  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j560 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v623 
address: v1062 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v623 address: v1062 lastLocationAccess: - value: i45 stateAfter: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i483 
y: i341 
=== Succesors ===
=== Usages ===
j616 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i483 y: i341  <|@  <|@
f <@~|@floating>@ <|@
tid j616 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i628 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i628  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j616 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v623 
address: v1067 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v623 address: v1067 lastLocationAccess: - value: i45 stateAfter: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i483 
y: i625 
=== Succesors ===
=== Usages ===
j622 i483 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i483 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid j622 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i629 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j622 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v623 
address: v1068 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v623 address: v1068 lastLocationAccess: - value: i45 stateAfter: - #next: v482  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
loopBegin: v476 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v476  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v476 
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v476 #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v496 
values: i483 i501 
=== Succesors ===
=== Usages ===
v497 i501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v496 values: i483 i501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 76
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.000000000000001
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v512 
=== Succesors ===
next: v500 
=== Usages ===
v499 v502 i503 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v512 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i37 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i503 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v499 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v499 #falseSuccessor: v498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
v511 
=== Predecessor ===
v500 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
guards: v1001 v498 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1001 v498  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i503 
y: i53 
=== Succesors ===
=== Usages ===
i503 j509 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i503 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i501 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i501  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j509 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v511 
address: v1059 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v511 address: v1059 lastLocationAccess: - value: i45 stateAfter: - #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
loopBegin: v496 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v496  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v496 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v496 #next: v374  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 125
bytecode: iinc
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5668
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a184 i1009 i45 - a168 a756 
virtualObjectMappings: ?173 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a184 i1009 i45 - a168 a756 virtualObjectMappings: ?173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
stateBefore: ?157 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?157 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
loopBegin: v44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 66
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5668
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a184 i1009 i45 - a168 a756 
virtualObjectMappings: ?173 
=== Succesors ===
=== Usages ===
v679 v373 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a184 i1009 i45 - a168 a756 virtualObjectMappings: ?173  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 89]
stamp: i32
=== Inputs ===
x: i54 
y: i45 
=== Succesors ===
=== Usages ===
j278 v248 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i54 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i1009 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i68 y: i1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v368 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v368 #falseSuccessor: v370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1017 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1017 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 84]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
lastLocationAccess: - 
=== Succesors ===
next: i1018 
=== Usages ===
v70 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 lastLocationAccess: - #next: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i68 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i68  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j278 
=== Succesors ===
=== Usages ===
i1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1018 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
v70 
=== Predecessor ===
i1017 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i1018 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1017 y: i1018  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
i1018 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v399 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid j676 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j678 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
rawvalue: -101907
stableDimension: 0
stamp: i32 [-101907]
stampKind: i32
value: int[-101907|0xfffffffffffe71ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?46 #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
stamp: void
=== Inputs ===
loopBegin: v44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5689) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v44 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v44 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5689) [bci: 137]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j280 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5689) [bci: 137]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v390 
address: v1048 
lastLocationAccess: - 
value: i37 
stateAfter: - 
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v390 address: v1048 lastLocationAccess: - value: i37 stateAfter: - #next: v969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: j925 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j925 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j950 
=== Usages ===
v1086 v1087 
=== Predecessor ===
v969 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j950  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j925 
index: - 
=== Succesors ===
=== Usages ===
j950 v952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j950 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
lastLocationAccess: - 
=== Succesors ===
next: j951 
=== Usages ===
j928 v1088 v1089 a935 v1090 v1091 v1092 v1093 
=== Predecessor ===
j925 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1086 lastLocationAccess: - #next: j951  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j925 
index: - 
=== Succesors ===
=== Usages ===
j951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j951 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
lastLocationAccess: - 
=== Succesors ===
next: v932 
=== Usages ===
v929 
=== Predecessor ===
j950 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1087 lastLocationAccess: - #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid j843 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: i64
=== Inputs ===
x: j950 
y: j843 
=== Succesors ===
=== Usages ===
v929 v952 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j950 y: j843  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j951 
y: j928 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j951 y: j928  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v929 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v930 
=== Usages ===
=== Predecessor ===
j951 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v929 #trueSuccessor: v931 #falseSuccessor: v930  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: a936 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a936  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 138
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5689) [bci: 137]
sourceFile: Pattern.java
sourceLine: 5690
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a184 i1009 - - a168 a756 
virtualObjectMappings: ?173 
=== Succesors ===
=== Usages ===
v1037 a936 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a184 i1009 - - a168 a756 virtualObjectMappings: ?173  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a936 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a936 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?95 
arguments: v923 
=== Succesors ===
next: v1037 
=== Usages ===
v1037 a948 
=== Predecessor ===
v931 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?95 arguments: v923 #next: v1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-247153|0xfffffffffffc3a8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?95 
object: a936 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
a936 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?95 object: a936 #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v1037 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
lastLocationAccess: - 
value: j928 
stateAfter: - 
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1086 lastLocationAccess: - value: j928 stateAfter: - #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
address: v1090 
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1090 #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
lastLocationAccess: - 
value: j709 
stateAfter: - 
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1088 lastLocationAccess: - value: j709 stateAfter: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1093 
lastLocationAccess: - 
value: v975 
stateAfter: - 
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1093 lastLocationAccess: - value: v975 stateAfter: - #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i924 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1089 
lastLocationAccess: - 
value: i924 
stateAfter: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1089 lastLocationAccess: - value: i924 stateAfter: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1091 
lastLocationAccess: - 
value: j661 
stateAfter: - 
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1091 lastLocationAccess: - value: j661 stateAfter: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1092 
lastLocationAccess: - 
value: j661 
stateAfter: - 
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1092 lastLocationAccess: - value: j661 stateAfter: - #next: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j950 
=== Succesors ===
next: v938 
=== Usages ===
a948 
=== Predecessor ===
v959 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j950 #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
a935 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v939 
values: a935 a936 
=== Succesors ===
=== Usages ===
v1053 a418 v1050 v1051 v1052 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v939 values: a935 a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v938 v940 
=== Succesors ===
next: v417 
=== Usages ===
a948 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v938 v940 #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a948 
index: - 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a948 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a416 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a756 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a756  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
lastLocationAccess: - 
value: a416 
stateAfter: - 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1053 lastLocationAccess: - value: a416 stateAfter: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a948 
index: - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a948 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a412 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a394 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
lastLocationAccess: - 
value: a412 
stateAfter: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1052 lastLocationAccess: - value: a412 stateAfter: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a948 
index: - 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
lastLocationAccess: - 
value: a1008 
stateAfter: - 
=== Succesors ===
next: a1019 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1051 lastLocationAccess: - value: a1008 stateAfter: - #next: a1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1019 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 172]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
v406 
=== Predecessor ===
v409 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 lastLocationAccess: - #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a948 
index: - 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
lastLocationAccess: - 
value: a1019 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
a1019 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1050 lastLocationAccess: - value: a1019 stateAfter: - #next: v419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern$Node) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a418 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern$Node) [bci: -6] Placeholder
stamp: a!# java.util.regex.Pattern$BnM
=== Inputs ===
object: a948 
=== Succesors ===
next: v103 
=== Usages ===
v103 
=== Predecessor ===
v419 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a948 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 178]
stamp: void
=== Inputs ===
memoryMap: - 
result: a418 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a418 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
rawvalue: -63771
stableDimension: 0
stamp: i32 [-63771]
stampKind: i32
value: int[-63771|0xffffffffffff06e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i32 [-101907 - -63771] bits:1...1x0xxx0xxx1110x101
valueDescription: i32
=== Inputs ===
merge: v673 
values: i675 i681 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v673 values: i675 i681  <|@  <|@
f <@~|@floating>@ <|@
tid j678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i64 [0 - 1940] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v673 
values: j676 j661 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v673 values: j676 j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v674 v680 
=== Succesors ===
next: v679 
=== Usages ===
i677 j678 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v674 v680 #next: v679  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
stateBefore: ?46 
actionAndReason: i677 
speculation: j678 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?46 actionAndReason: i677 speculation: j678  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5668
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a184 i1009 - - a168 a756 
virtualObjectMappings: ?173 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a184 i1009 - - a168 a756 virtualObjectMappings: ?173  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 230
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
reason: BoundsCheckException
speculation: {0x0000000000000f98[index: 124, len: 24, hash: 0x9eeba630]: GuardMovement@3[HotSpotMethod<Pattern$BnM.optimize(Pattern$Node)>, 66, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?141 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: 3224
stableDimension: 0
stamp: i64 [3224]
stampKind: i64
value: long[3224|0xc98]
=== Inputs ===
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: -53275
stableDimension: 0
stamp: i32 [-53275]
stampKind: i32
value: int[-53275|0xffffffffffff2fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v362 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: -46131
stableDimension: 0
stamp: i32 [-46131]
stampKind: i32
value: int[-46131|0xffffffffffff4bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v1024 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: i32 [-99347 - -46131] bits:1...1x0xxx1x1111x0x101
valueDescription: i32
=== Inputs ===
merge: v658 
values: i666 i668 i671 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v658 values: i666 i668 i671  <|@  <|@
f <@~|@floating>@ <|@
tid j663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: i64 [20 - 3224] bits:0...0xx0xx001xx00
valueDescription: i64
=== Inputs ===
merge: v658 
values: j410 j669 j672 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v658 values: j410 j669 j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v665 v667 v670 
=== Succesors ===
next: v664 
=== Usages ===
i662 j663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v665 v667 v670 #next: v664  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i662 
speculation: j663 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i662 speculation: j663  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.util.regex.Pattern$Node
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?46 v1069 v1049 ?95 ?157 ?141 v1038 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5644
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v664 v1035 v1033 a732 a813 i1009 v1007 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-46131|0xffffffffffff4bcd]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1069 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
v1028 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1069 lastLocationAccess: - #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1007 
y: v1027 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1007 y: v1027  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v352 
falseSuccessor: v1024 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v352 #falseSuccessor: v1024  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1008 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1008 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$SliceNode.buffer
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5648) [bci: 13]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
lastLocationAccess: - 
=== Succesors ===
next: i1009 
=== Usages ===
a184 v409 v1039 v1040 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 lastLocationAccess: - #next: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1008 
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1009 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-47627|0xffffffffffff45f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1039 
lastLocationAccess: - 
=== Succesors ===
next: v997 
=== Usages ===
v17 v765 j300 a732 i342 ?141 i45 ?46 v308 i54 ?157 i165 ?95 v518 v248 i632 v449 
=== Predecessor ===
a1008 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1039 lastLocationAccess: - #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 72]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i54 i87 i92 i481 i501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 72]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1009 
y: i53 
=== Succesors ===
=== Usages ===
i68 j280 j277 v60 j302 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1009 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j302 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1009 
=== Succesors ===
=== Usages ===
v307 v324 j701 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j302 
y: j300 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j302 y: j300  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 v28 j701 v308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v996 
=== Usages ===
=== Predecessor ===
i1009 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v993 #falseSuccessor: v996  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
v993 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i162 
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v994 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v994 #falseSuccessor: v362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
v994 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v991 v992 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v991 v992 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5654) [bci: 21]
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 i627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5654) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i16 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5654) [bci: 22]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v389 #falseSuccessor: v390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5654) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid j669 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
result int[-99347|0xfffffffffffe7bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: -99347
stableDimension: 0
stamp: i32 [-99347]
stampKind: i32
value: int[-99347|0xfffffffffffe7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v389 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
v264 v228 
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j697 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j697 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j758 
=== Usages ===
v1070 v1071 
=== Predecessor ===
v776 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j758  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j697 
index: - 
=== Succesors ===
=== Usages ===
j758 v760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j758 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
lastLocationAccess: - 
=== Succesors ===
next: j759 
=== Usages ===
j704 v1072 v1073 v1074 a731 v1075 v1079 v1076 v1077 v1078 
=== Predecessor ===
j697 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1070 lastLocationAccess: - #next: j759  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j697 
index: - 
=== Succesors ===
=== Usages ===
j759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j759 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
lastLocationAccess: - 
=== Succesors ===
next: v708 
=== Usages ===
v705 
=== Predecessor ===
j758 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1071 lastLocationAccess: - #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid j701 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64 [0 - 8589934588] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j300 
y: i162 
=== Succesors ===
=== Usages ===
j742 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j300 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64 [23 - 8589934611] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j701 
y: j741 
=== Succesors ===
=== Usages ===
j703 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j701 y: j741  <|@  <|@
f <@~|@floating>@ <|@
tid j702 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64 [0 - 8589934608] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j742 
y: j702 
=== Succesors ===
=== Usages ===
j704 v720 j744 v1076 v1077 v1078 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j742 y: j702  <|@  <|@
f <@~|@floating>@ <|@
tid j704 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
=== Inputs ===
x: j703 
y: j758 
=== Succesors ===
=== Usages ===
v705 v760 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j703 y: j758  <|@  <|@
f <@~|@floating>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j759 
y: j704 
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j759 y: j704  <|@  <|@
f <@~|@floating>@ <|@
tid j691 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j807 j728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v904 j678 v959 v766 v958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5648) [bci: 13]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j719 j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v764 v894 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j709 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 v891 v953 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a732 a813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v705 
=== Succesors ===
trueSuccessor: v707 
falseSuccessor: v706 
=== Usages ===
=== Predecessor ===
j759 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v705 #trueSuccessor: v707 #falseSuccessor: v706  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a732 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v696 i1009 
=== Succesors ===
next: v1033 
=== Usages ===
v1033 a756 
=== Predecessor ===
v707 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v696 i1009 #next: v1033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-197745|0xfffffffffffcfb8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a732 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
a732 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a732 #next: v736  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
v1033 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
lastLocationAccess: - 
value: j704 
stateAfter: - 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 lastLocationAccess: - value: j704 stateAfter: - #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
result [v9|QWORD + v6|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j703 
index: j758 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j703 index: j758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
address: v1076 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1076 #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
result [v9|QWORD + v6|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j703 
index: j758 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j703 index: j758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
address: v1077 
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1077 #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
result [v9|QWORD + v6|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j703 
index: j758 
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j703 index: j758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
address: v1078 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1078 #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: - 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
lastLocationAccess: - 
value: j709 
stateAfter: - 
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1072 lastLocationAccess: - value: j709 stateAfter: - #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: - 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1079 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1079 lastLocationAccess: - value: v971 stateAfter: - #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: - 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
lastLocationAccess: - 
value: i1009 
stateAfter: - 
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 lastLocationAccess: - value: i1009 stateAfter: - #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64 [-16 - 8589934592] bits:x...x000
=== Inputs ===
x: j703 
y: j743 
=== Succesors ===
=== Usages ===
v712 v716 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j703 y: j743  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j744 
y: j745 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j744 y: j745  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v712 
=== Succesors ===
trueSuccessor: v714 
falseSuccessor: v713 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v712 #trueSuccessor: v714 #falseSuccessor: v713  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
v714 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j719 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v718 
values: j181 j728 
=== Succesors ===
=== Usages ===
v720 v1074 j728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v718 values: j181 j728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v717 
=== Succesors ===
next: v726 
=== Usages ===
j719 v725 v729 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v717 #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j719 
y: j703 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j719 y: j703  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v720 
=== Succesors ===
trueSuccessor: v721 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v720 #trueSuccessor: v721 #falseSuccessor: v725  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
result [v6|QWORD + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: j719 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: j719  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
lastLocationAccess: - 
value: j661 
stateAfter: - 
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1074 lastLocationAccess: - value: j661 stateAfter: - #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid j728 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: i64
=== Inputs ===
x: j719 
y: j691 
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j719 y: j691  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
loopBegin: v718 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v718  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v718 
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v718 #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
result [v6|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j758 
index: - 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
lastLocationAccess: - 
length: j744 
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1075 lastLocationAccess: - length: j744 #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v722 v724 
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v722 v724 #next: v730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a731 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a731 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j758 
=== Succesors ===
next: v734 
=== Usages ===
a756 
=== Predecessor ===
v730 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j758 #next: v734  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
a731 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a756 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v735 
values: a731 a732 
=== Succesors ===
=== Usages ===
v1067 v1068 ?141 ?157 v1045 ?46 v1044 v1048 ?95 a416 v1058 v1059 v1062 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v735 values: a731 a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5659) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v734 v736 
=== Succesors ===
next: v914 
=== Usages ===
a756 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v734 v736 #next: v914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: j778 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j778 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j888 
=== Usages ===
v1080 v1081 
=== Predecessor ===
v914 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j888  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
j888 v890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j888 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
lastLocationAccess: - 
=== Succesors ===
next: j889 
=== Usages ===
j977 v1082 v1083 v1084 a812 v1096 v1095 v1094 v1085 
=== Predecessor ===
j778 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1080 lastLocationAccess: - #next: j889  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
j889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j889 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
lastLocationAccess: - 
=== Succesors ===
next: v788 
=== Usages ===
v785 
=== Predecessor ===
j888 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1081 lastLocationAccess: - #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid j976 <|@
result long[528|0x210] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
rawvalue: 528
stableDimension: 0
stamp: i64 [528]
stampKind: i64
value: long[528|0x210]
=== Inputs ===
=== Succesors ===
=== Usages ===
j977 v802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j977 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
=== Inputs ===
x: j888 
y: j976 
=== Succesors ===
=== Usages ===
v785 v890 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j888 y: j976  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j889 
y: j977 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j889 y: j977  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v895 a813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v785 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
j889 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v785 #trueSuccessor: v787 #falseSuccessor: v786  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a813 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a813 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v696 i392 
=== Succesors ===
next: v1035 
=== Usages ===
v1035 a886 
=== Predecessor ===
v787 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v696 i392 #next: v1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-233073|0xfffffffffffc718f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a813 
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
a813 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a813 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
v1035 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
lastLocationAccess: - 
value: j977 
stateAfter: - 
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1080 lastLocationAccess: - value: j977 stateAfter: - #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
result [v19|QWORD + 784] <|@
d <@d|@=== Debug Properties ===
displacement: 784
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
address: v1094 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1094 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
result [v19|QWORD + 848] <|@
d <@d|@=== Debug Properties ===
displacement: 848
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
address: v1095 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1095 #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
result [v19|QWORD + 912] <|@
d <@d|@=== Debug Properties ===
displacement: 912
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
address: v1096 
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1096 #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
result [v19|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
lastLocationAccess: - 
value: j709 
stateAfter: - 
=== Succesors ===
next: v894 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1082 lastLocationAccess: - value: j709 stateAfter: - #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
result [v19|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1085 lastLocationAccess: - value: v971 stateAfter: - #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
result [v19|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: - 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1083 
lastLocationAccess: - 
value: i392 
stateAfter: - 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1083 lastLocationAccess: - value: i392 stateAfter: - #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
v895 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j801 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v800 
values: j181 j807 
=== Succesors ===
=== Usages ===
v802 v1084 j807 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v800 values: j181 j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 84
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v799 
=== Succesors ===
next: v805 
=== Usages ===
j801 v804 v808 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v799 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j801 
y: j976 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j801 y: j976  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v803 
falseSuccessor: v804 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v803 #falseSuccessor: v804  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
result [v19|QWORD + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j888 
index: j801 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1084 
lastLocationAccess: - 
value: j661 
stateAfter: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1084 lastLocationAccess: - value: j661 stateAfter: - #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: i64
=== Inputs ===
x: j801 
y: j691 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j801 y: j691  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v800 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v800  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v800 
=== Succesors ===
next: a812 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v800 #next: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a812 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j888 
=== Succesors ===
next: v815 
=== Usages ===
a886 
=== Predecessor ===
v804 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j888 #next: v815  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
a812 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a886 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v816 
values: a812 a813 
=== Succesors ===
=== Usages ===
a394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v816 values: a812 a813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v815 v817 
=== Succesors ===
next: v395 
=== Usages ===
a886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v815 v817 #next: v395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern$Node) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a394 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a394 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern$Node) [bci: -6] Placeholder
stamp: a!# int[]
=== Inputs ===
object: a886 
=== Succesors ===
next: i1010 
=== Usages ===
v1041 ?173 v1043 a412 v1055 v1057 v1061 v1064 v1066 
=== Predecessor ===
v395 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a886 #next: i1010  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
result [v1|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1008 
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1010 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
lastLocationAccess: - 
=== Succesors ===
next: v205 
=== Usages ===
i132 
=== Predecessor ===
a394 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 lastLocationAccess: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[127|0x7f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 51]
rawvalue: 127
stableDimension: 0
stamp: i32 [127]
stampKind: i32
value: int[127|0x7f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 i132 i427 i453 i527 i576 i591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1010 
y: i35 
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1010 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i132 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
result [v26|QWORD[.] + v28|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j271 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j271  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 55]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 v47 i520 v264 i143 v205 i428 i454 v497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
lastLocationAccess: - 
value: i37 
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
i1010 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1041 lastLocationAccess: - value: i37 stateAfter: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid a184 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5648) [bci: 13]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1008 
=== Succesors ===
=== Usages ===
v1065 ?46 ?157 ?95 ?141 v1063 v1060 v1042 v1046 v1047 v1054 v1056 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
v205 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i143 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v25 
values: i37 i38 
=== Succesors ===
=== Usages ===
i38 v28 j272 i430 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v25 values: i37 i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v24 
=== Succesors ===
next: v33 
=== Usages ===
i143 v30 v41 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v24 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i143 
y: i162 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i143 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v32 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1011 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1011  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i143 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i143  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
result [v29|QWORD[.] + v30|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j272 
=== Succesors ===
=== Usages ===
i1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1011 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
lastLocationAccess: - 
=== Succesors ===
next: v219 
=== Usages ===
i36 
=== Predecessor ===
v32 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 lastLocationAccess: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1011 
y: i35 
=== Succesors ===
=== Usages ===
j273 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1011 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i36 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
result [v26|QWORD[.] + v32|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j273 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j273  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i143 
y: i37 
=== Succesors ===
=== Usages ===
v219 i143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i143 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
lastLocationAccess: - 
value: i38 
stateAfter: - 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
i1011 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1043 lastLocationAccess: - value: i38 stateAfter: - #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v25 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v25 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v25 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i625 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i632 i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i632 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-4 - 2147483643]
=== Inputs ===
x: i1009 
y: i625 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1009 y: i625  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i430 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v422 
values: i143 i627 
=== Succesors ===
=== Usages ===
v423 i428 j439 i456 i568 i626 i627 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v422 values: i143 i627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 25
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v444 
=== Succesors ===
next: v426 
=== Usages ===
v424 v429 i430 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v444 #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i430 
y: i632 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i430 y: i632  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.3333333333333339
stamp: void
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v425 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v425 #falseSuccessor: v424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1012 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1012  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i430 
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i430  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
result [v29|QWORD[.] + v35|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j439 
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1012 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
i427 
=== Predecessor ===
v425 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1054 lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1012 
y: i35 
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1012 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i427 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i427  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
result [v26|QWORD[.] + v37|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j440 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j440  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i430 
y: i37 
=== Succesors ===
=== Usages ===
j538 v438 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
lastLocationAccess: - 
value: i428 
stateAfter: - 
=== Succesors ===
next: i1013 
=== Usages ===
=== Predecessor ===
i1012 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 lastLocationAccess: - value: i428 stateAfter: - #next: i1013  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i428 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i428  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
result [v29|QWORD[.] + v38|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j538 
=== Succesors ===
=== Usages ===
i1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
i527 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1013 
y: i35 
=== Succesors ===
=== Usages ===
j539 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1013 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j539 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i527 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i527  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
result [v26|QWORD[.] + v40|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j539 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j539  <|@  <|@
f <@~|@floating>@ <|@
tid i568 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i430 
y: i162 
=== Succesors ===
=== Usages ===
v537 j587 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
lastLocationAccess: - 
value: i568 
stateAfter: - 
=== Succesors ===
next: i1014 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1061 lastLocationAccess: - value: i568 stateAfter: - #next: i1014  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i568 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i568  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
result [v29|QWORD[.] + v41|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j587 
=== Succesors ===
=== Usages ===
i1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1014 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
lastLocationAccess: - 
=== Succesors ===
next: v586 
=== Usages ===
i576 
=== Predecessor ===
v537 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1063 lastLocationAccess: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1014 
y: i35 
=== Succesors ===
=== Usages ===
j588 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1014 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j588 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i576 
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i576  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
result [v26|QWORD[.] + v43|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j588 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j588  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i626 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i430 
y: i328 
=== Succesors ===
=== Usages ===
v586 j600 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1064 
lastLocationAccess: - 
value: i626 
stateAfter: - 
=== Succesors ===
next: i1015 
=== Usages ===
=== Predecessor ===
i1014 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1064 lastLocationAccess: - value: i626 stateAfter: - #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid j600 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i626 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i626  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
result [v29|QWORD[.] + v44|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j600 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
i591 
=== Predecessor ===
v586 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1065 lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1015 
y: i35 
=== Succesors ===
=== Usages ===
j601 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1015 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j601 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i591 
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i591  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
result [v26|QWORD[.] + v46|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j601 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j601  <|@  <|@
f <@~|@floating>@ <|@
tid i627 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i430 
y: i16 
=== Succesors ===
=== Usages ===
v599 i430 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i430 y: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
lastLocationAccess: - 
value: i627 
stateAfter: - 
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 lastLocationAccess: - value: i627 stateAfter: - #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v422 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v422 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v422 #next: v470  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i456 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v448 
values: i430 i454 
=== Succesors ===
=== Usages ===
v449 i454 j465 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v448 values: i430 i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 25
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v470 
=== Succesors ===
next: v452 
=== Usages ===
v450 v455 i456 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v470 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i456 
y: i1009 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i456 y: i1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v451 #falseSuccessor: v450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1016 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1016  <|@  <|@
f <@~|@floating>@ <|@
tid j465 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i456 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i456  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
result [v29|QWORD[.] + v48|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j465 
=== Succesors ===
=== Usages ===
i1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1016 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
lastLocationAccess: - 
=== Succesors ===
next: v464 
=== Usages ===
i453 
=== Predecessor ===
v451 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1056 lastLocationAccess: - #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 53]
stamp: i32 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
x: i1016 
y: i35 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1016 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
resultBits: 64
stamp: i64 [0 - 127] bits:0...0xxxxxxx
=== Inputs ===
value: i453 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i453  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
result [v26|QWORD[.] + v50|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j466 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j466  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 56]
stamp: i32
=== Inputs ===
x: i456 
y: i37 
=== Succesors ===
=== Usages ===
i456 v464 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i456 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 57]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
lastLocationAccess: - 
value: i454 
stateAfter: - 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
i1016 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1057 lastLocationAccess: - value: i454 stateAfter: - #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5663) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v448 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v448  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v448 
=== Succesors ===
next: v1005 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v448 #next: v1005  <|@  <|@
tid a168 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<int>
hasIdentity: true
length: 128
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
objectId: 0
stamp: a!# int[]
=== Inputs ===
=== Succesors ===
=== Usages ===
?95 ?157 ?173 ?141 ?46 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@jdk.graal.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a168 
materializedValue: a394 
=== Succesors ===
=== Usages ===
?95 ?46 ?157 ?141 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a168 materializedValue: a394  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i165 i569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32 [-2 - 2147483645]
=== Inputs ===
x: i1009 
y: i164 
=== Succesors ===
=== Usages ===
i159 j1020 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1009 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid j1020 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i165 
=== Succesors ===
=== Usages ===
j344 v1044 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i165  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result int[-3|0xfffffffffffffffd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -3
stableDimension: 0
stamp: i32 [-3]
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i342 i628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-3 - 2147483644]
=== Inputs ===
x: i1009 
y: i341 
=== Succesors ===
=== Usages ===
j1021 i520 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1009 y: i341  <|@  <|@
f <@~|@floating>@ <|@
tid j1021 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i342 
=== Succesors ===
=== Usages ===
j344 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i342  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1020 
y: j1021 
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1020 y: j1021  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j344 
y: j316 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j344 y: j316  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j323 
y: j300 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j323 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v1001 
falseSuccessor: v1004 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v1001 #falseSuccessor: v1004  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
v331 v623 v511 
=== Predecessor ===
v1005 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
result [v18|QWORD[.] + v53|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j1020 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j1020  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 84]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
result [v29|QWORD[.] + v3|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j277 
=== Succesors ===
=== Usages ===
i1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j277  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 v477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i517 
=== Succesors ===
=== Usages ===
i520 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i517  <|@  <|@
f <@~|@floating>@ <|@
tid i520 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-3 - 2147483644]
=== Inputs ===
condition: v518 
trueValue: i37 
falseValue: i342 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v518 trueValue: i37 falseValue: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
v1001 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i45 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v44 
values: i1009 i92 i92 
=== Succesors ===
=== Usages ===
?46 v47 ?157 v60 v236 i68 i92 v228 v488 v508 v559 v615 v621 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v44 values: i1009 i92 i92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v43 
=== Succesors ===
next: v52 
=== Usages ===
i45 v50 v93 v108 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v43 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 67]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i37 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 67]
profileData: PROFILED designatedSuccessorProbability: 0.1428571428571428
stamp: void
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v50 #falseSuccessor: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: i32
=== Inputs ===
x: i45 
y: i53 
=== Succesors ===
=== Usages ===
i45 i45 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i45 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 78]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i45 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5670) [bci: 78]
profileData: PROFILED designatedSuccessorProbability: 0.16666666666666666
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v105 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v390 
address: v1044 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v390 address: v1044 lastLocationAccess: - value: i45 stateAfter: - #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i159 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i165 i87 
=== Succesors ===
=== Usages ===
i87 v79 i483 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v76 values: i165 i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.000000000000001
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v75 
=== Succesors ===
next: v86 
=== Usages ===
i159 v84 v90 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v75 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i159 
y: i520 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i159 y: i520  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v84 #falseSuccessor: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
v331 
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
guards: v1001 v80 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1001 v80  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i159 
y: i53 
=== Succesors ===
=== Usages ===
j276 i159 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i159 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i87 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
result [v18|QWORD[.] + v63|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j276 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v331 
address: v1045 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v331 address: v1045 lastLocationAccess: - value: i45 stateAfter: - #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
loopBegin: v76 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v76 
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v76 #next: v492  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i483 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v476 
values: i159 i629 
=== Succesors ===
=== Usages ===
v477 i481 i503 i569 i628 i629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v476 values: i159 i629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 76
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.000000000000001
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v492 
=== Succesors ===
next: v480 
=== Usages ===
v479 v482 i483 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v492 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i483 
y: i517 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i483 y: i517  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 0.7999999999999998
stamp: void
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v479 #falseSuccessor: v478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
v623 
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
guards: v1001 v478 
=== Succesors ===
=== Usages ===
v559 v615 v488 v621 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1001 v478  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i483 
y: i53 
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i483 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i481 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i481  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
result [v18|QWORD[.] + v65|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j489 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v623 
address: v1058 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v623 address: v1058 lastLocationAccess: - value: i45 stateAfter: - #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid i569 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i483 
y: i164 
=== Succesors ===
=== Usages ===
j560 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i483 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i569 
=== Succesors ===
=== Usages ===
v1062 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i569  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
result [v18|QWORD[.] + v66|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j560 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v623 
address: v1062 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v623 address: v1062 lastLocationAccess: - value: i45 stateAfter: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i628 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i483 
y: i341 
=== Succesors ===
=== Usages ===
j616 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i483 y: i341  <|@  <|@
f <@~|@floating>@ <|@
tid j616 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i628 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i628  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
result [v18|QWORD[.] + v67|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j616 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v623 
address: v1067 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v623 address: v1067 lastLocationAccess: - value: i45 stateAfter: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i483 
y: i625 
=== Succesors ===
=== Usages ===
j622 i483 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i483 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid j622 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i629 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
result [v18|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j622 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v623 
address: v1068 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v623 address: v1068 lastLocationAccess: - value: i45 stateAfter: - #next: v482  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
loopBegin: v476 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v476  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v476 
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v476 #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i503 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v496 
values: i483 i501 
=== Succesors ===
=== Usages ===
v497 i501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v496 values: i483 i501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 76
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.000000000000001
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v512 
=== Succesors ===
next: v500 
=== Usages ===
v499 v502 i503 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v512 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i37 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i503 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v499 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v499 #falseSuccessor: v498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
v511 
=== Predecessor ===
v500 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
guards: v1001 v498 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1001 v498  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 115]
stamp: i32
=== Inputs ===
x: i503 
y: i53 
=== Succesors ===
=== Usages ===
i503 j509 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i503 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i501 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i501  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
result [v18|QWORD[.] + v70|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j509 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v511 
address: v1059 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v511 address: v1059 lastLocationAccess: - value: i45 stateAfter: - #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5684) [bci: 108]
stamp: void
=== Inputs ===
loopBegin: v496 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v496  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v496 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v496 #next: v374  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 125
bytecode: iinc
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5668
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a184 i1009 i45 - a168 a756 
virtualObjectMappings: ?173 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a184 i1009 i45 - a168 a756 virtualObjectMappings: ?173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
stateBefore: ?157 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?157 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
loopBegin: v44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 66
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5668
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a184 i1009 i45 - a168 a756 
virtualObjectMappings: ?173 
=== Succesors ===
=== Usages ===
v679 v373 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a184 i1009 i45 - a168 a756 virtualObjectMappings: ?173  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 89]
stamp: i32
=== Inputs ===
x: i54 
y: i45 
=== Succesors ===
=== Usages ===
j278 v248 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i54 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i1009 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i68 y: i1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v368 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v368 #falseSuccessor: v370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1017 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1017 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 84]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
lastLocationAccess: - 
=== Succesors ===
next: i1018 
=== Usages ===
v70 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 lastLocationAccess: - #next: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i68 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i68  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
result [v29|QWORD[.] + v72|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a184 
index: j278 
=== Succesors ===
=== Usages ===
i1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: j278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1018 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
v70 
=== Predecessor ===
i1017 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i1018 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1017 y: i1018  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
i1018 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v399 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid j676 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j678 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
result int[-101907|0xfffffffffffe71ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
rawvalue: -101907
stableDimension: 0
stamp: i32 [-101907]
stampKind: i32
value: int[-101907|0xfffffffffffe71ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?46 #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
stamp: void
=== Inputs ===
loopBegin: v44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5689) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v44 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v44 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5689) [bci: 137]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
result [v18|QWORD[.] + v3|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a756 
index: j280 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a756 index: j280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5689) [bci: 137]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v390 
address: v1048 
lastLocationAccess: - 
value: i37 
stateAfter: - 
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v390 address: v1048 lastLocationAccess: - value: i37 stateAfter: - #next: v969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: j925 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j925 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j950 
=== Usages ===
v1086 v1087 
=== Predecessor ===
v969 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j950  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j925 
index: - 
=== Succesors ===
=== Usages ===
j950 v952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j950 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
lastLocationAccess: - 
=== Succesors ===
next: j951 
=== Usages ===
j928 v1088 v1089 a935 v1090 v1091 v1092 v1093 
=== Predecessor ===
j925 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1086 lastLocationAccess: - #next: j951  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j925 
index: - 
=== Succesors ===
=== Usages ===
j951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j951 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
lastLocationAccess: - 
=== Succesors ===
next: v932 
=== Usages ===
v929 
=== Predecessor ===
j950 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1087 lastLocationAccess: - #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid j843 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5658) [bci: 30]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j928 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: i64
=== Inputs ===
x: j950 
y: j843 
=== Succesors ===
=== Usages ===
v929 v952 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j950 y: j843  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j951 
y: j928 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j951 y: j928  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v929 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v930 
=== Usages ===
=== Predecessor ===
j951 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v929 #trueSuccessor: v931 #falseSuccessor: v930  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: a936 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a936  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 138
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5689) [bci: 137]
sourceFile: Pattern.java
sourceLine: 5690
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a184 i1009 - - a168 a756 
virtualObjectMappings: ?173 
=== Succesors ===
=== Usages ===
v1037 a936 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a184 i1009 - - a168 a756 virtualObjectMappings: ?173  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a936 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a936 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?95 
arguments: v923 
=== Succesors ===
next: v1037 
=== Usages ===
v1037 a948 
=== Predecessor ===
v931 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?95 arguments: v923 #next: v1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-247153|0xfffffffffffc3a8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?95 
object: a936 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
a936 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?95 object: a936 #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
v1037 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
lastLocationAccess: - 
value: j928 
stateAfter: - 
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1086 lastLocationAccess: - value: j928 stateAfter: - #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
result [v75|QWORD + 288] <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
address: v1090 
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1090 #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
result [v75|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
lastLocationAccess: - 
value: j709 
stateAfter: - 
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1088 lastLocationAccess: - value: j709 stateAfter: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
result [v75|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1093 
lastLocationAccess: - 
value: v975 
stateAfter: - 
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1093 lastLocationAccess: - value: v975 stateAfter: - #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
result [v75|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i924 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1089 
lastLocationAccess: - 
value: i924 
stateAfter: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1089 lastLocationAccess: - value: i924 stateAfter: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
result [v75|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1091 
lastLocationAccess: - 
value: j661 
stateAfter: - 
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1091 lastLocationAccess: - value: j661 stateAfter: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
result [v75|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j950 
index: - 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j950 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1092 
lastLocationAccess: - 
value: j661 
stateAfter: - 
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1092 lastLocationAccess: - value: j661 stateAfter: - #next: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j950 
=== Succesors ===
next: v938 
=== Usages ===
a948 
=== Predecessor ===
v959 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j950 #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
a935 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a948 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v939 
values: a935 a936 
=== Succesors ===
=== Usages ===
v1053 a418 v1050 v1051 v1052 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v939 values: a935 a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v938 v940 
=== Succesors ===
next: v417 
=== Usages ===
a948 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v938 v940 #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
result [v81|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a948 
index: - 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a948 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a416 <|@
result v82|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a756 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a756  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
lastLocationAccess: - 
value: a416 
stateAfter: - 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1053 lastLocationAccess: - value: a416 stateAfter: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
result [v81|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a948 
index: - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a948 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a412 <|@
result v83|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a394 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
lastLocationAccess: - 
value: a412 
stateAfter: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1052 lastLocationAccess: - value: a412 stateAfter: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
result [v81|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a948 
index: - 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
lastLocationAccess: - 
value: a1008 
stateAfter: - 
=== Succesors ===
next: a1019 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1051 lastLocationAccess: - value: a1008 stateAfter: - #next: a1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1019 <|@
result v84|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 172]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
v406 
=== Predecessor ===
v409 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 lastLocationAccess: - #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
result [v81|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a948 
index: - 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
lastLocationAccess: - 
value: a1019 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
a1019 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1050 lastLocationAccess: - value: a1019 stateAfter: - #next: v419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern$Node) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a418 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a418 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern$Node) [bci: -6] Placeholder
stamp: a!# java.util.regex.Pattern$BnM
=== Inputs ===
object: a948 
=== Succesors ===
next: v103 
=== Usages ===
v103 
=== Predecessor ===
v419 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a948 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 178]
stamp: void
=== Inputs ===
memoryMap: - 
result: a418 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a418 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
result int[-63771|0xffffffffffff06e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
rawvalue: -63771
stableDimension: 0
stamp: i32 [-63771]
stampKind: i32
value: int[-63771|0xffffffffffff06e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i677 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i32 [-101907 - -63771] bits:1...1x0xxx0xxx1110x101
valueDescription: i32
=== Inputs ===
merge: v673 
values: i675 i681 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v673 values: i675 i681  <|@  <|@
f <@~|@floating>@ <|@
tid j678 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: i64 [0 - 1940] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v673 
values: j676 j661 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v673 values: j676 j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v674 v680 
=== Succesors ===
next: v679 
=== Usages ===
i677 j678 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v674 v680 #next: v679  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5672) [bci: 91]
stamp: void
=== Inputs ===
stateBefore: ?46 
actionAndReason: i677 
speculation: j678 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?46 actionAndReason: i677 speculation: j678  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$BnM.optimize(Pattern$Node)>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5668
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a184 i1009 - - a168 a756 
virtualObjectMappings: ?173 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a184 i1009 - - a168 a756 virtualObjectMappings: ?173  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 230
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5685) [bci: 121]
reason: BoundsCheckException
speculation: {0x0000000000000f98[index: 124, len: 24, hash: 0x9eeba630]: GuardMovement@3[HotSpotMethod<Pattern$BnM.optimize(Pattern$Node)>, 66, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?141 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5664) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result long[3224|0xc98] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: 3224
stableDimension: 0
stamp: i64 [3224]
stampKind: i64
value: long[3224|0xc98]
=== Inputs ===
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
result int[-53275|0xffffffffffff2fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: -53275
stableDimension: 0
stamp: i32 [-53275]
stampKind: i32
value: int[-53275|0xffffffffffff2fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v362 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5692) [bci: 162]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result int[-46131|0xffffffffffff4bcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
rawvalue: -46131
stableDimension: 0
stamp: i32 [-46131]
stampKind: i32
value: int[-46131|0xffffffffffff4bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v1024 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i662 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: i32 [-99347 - -46131] bits:1...1x0xxx1x1111x0x101
valueDescription: i32
=== Inputs ===
merge: v658 
values: i666 i668 i671 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v658 values: i666 i668 i671  <|@  <|@
f <@~|@floating>@ <|@
tid j663 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: i64 [20 - 3224] bits:0...0xx0xx001xx00
valueDescription: i64
=== Inputs ===
merge: v658 
values: j410 j669 j672 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v658 values: j410 j669 j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v665 v667 v670 
=== Succesors ===
next: v664 
=== Usages ===
i662 j663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v665 v667 v670 #next: v664  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BnM.optimize(Pattern.java:5649) [bci: 18]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i662 
speculation: j663 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i662 speculation: j663  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  128  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr  130  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  274  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr  304  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr  308  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  316  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  384  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  392  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  422  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  448  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  514  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  522  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  524  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  530  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  538  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  540  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  556  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  586  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  588  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr  626  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr  630  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  654  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  656  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  660  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  750  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  790  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  866  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  936  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr  938  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr  966  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr  968  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr  970  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr  972  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  982  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr 1018  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1060  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1094  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1126  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1220  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1252  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  128  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr  130  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  274  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr  304  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr  308  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  316  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  384  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  392  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  422  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  448  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  514  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  522  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  524  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  530  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  538  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  540  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  556  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  586  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  588  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr  626  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr  630  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  654  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  656  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  660  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  750  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  790  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  866  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  936  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr  938  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr  966  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr  968  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr  970  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr  972  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  982  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr 1018  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1060  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1094  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1126  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1220  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1252  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v81|q [0, 1[[1028, 1030[[1058, 1060[[1092, 1094[[1124, 1126[[1154, 1155[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v13|q [0, 1[[1152, 1155[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d v2|d [0, 1[[1056, 1058[[1090, 1092[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 16[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v89|q [0, 20[[1054, 1058[[1088, 1092[[1122, 1124[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1154, 1155[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [20, 1024[[1032, 1179[[1180, 1241[[1242, 1273[20 MustHaveRegister 22 MustHaveRegister 44 MustHaveRegister 1024 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [44, 1022[[1032, 1158[44 MustHaveRegister 46 MustHaveRegister 384 MustHaveRegister 388 MustHaveRegister 1022 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [46, 940[[1032, 1129[[1132, 1179[[1200, 1241[46 MustHaveRegister 48 ShouldHaveRegister 52 ShouldHaveRegister 66 ShouldHaveRegister 98 ShouldHaveRegister 180 MustHaveRegister 444 MustHaveRegister 566 MustHaveRegister 593 LiveAtLoopEnd 624 MustHaveRegister 628 MustHaveRegister 652 ShouldHaveRegister 658 ShouldHaveRegister 702 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd 1090 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d v2|d [48, 932[[1032, 1100[[1132, 1158[48 MustHaveRegister 50 ShouldHaveRegister 686 ShouldHaveRegister 700 MustHaveRegister 716 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd 932 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [50, 54[50 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v2|d [52, 636[[1032, 1100[[1132, 1158[52 MustHaveRegister 54 MustHaveRegister 128 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [126, 250[[1132, 1158[126 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 224 MustHaveRegister 229 LiveAtLoopEnd 250 ShouldHaveRegister 1154 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v5|q [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [130, 132[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [132, 230[132 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 182 MustHaveRegister 206 MustHaveRegister 229 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v9|q [134, 168[134 MustHaveRegister 136 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q rax|q [1094, 1099[1094 MustHaveRegister 1096 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [182, 186[[1132, 1152[182 MustHaveRegister 184 ShouldHaveRegister 1152 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v15|q [196, 226[206 ShouldHaveRegister 224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v14|q [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v6|q [250, 253[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v17|q [254, 1014[[1032, 1066[[1100, 1132[[1158, 1179[[1200, 1241[735 LiveAtLoopEnd 746 MustHaveRegister 776 MustHaveRegister 779 LiveAtLoopEnd 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 855 LiveAtLoopEnd 892 MustHaveRegister 895 LiveAtLoopEnd 911 LiveAtLoopEnd 932 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [272, 360[272 MustHaveRegister 274 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 344 MustHaveRegister 349 LiveAtLoopEnd 360 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [274, 300[274 MustHaveRegister 276 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q rax|q [1060, 1065[1060 MustHaveRegister 1062 MustHaveRegister 1064 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v23|q [316, 346[326 ShouldHaveRegister 344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|q [346, 349[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v19|q [360, 363[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v25|q [364, 1018[[1100, 1132[[1158, 1179[[1200, 1241[386 MustHaveRegister 426 MustHaveRegister 429 LiveAtLoopEnd 518 MustHaveRegister 526 MustHaveRegister 534 MustHaveRegister 542 MustHaveRegister 545 LiveAtLoopEnd 590 MustHaveRegister 593 LiveAtLoopEnd 1018 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v27|d [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v1|d [388, 940[[1100, 1129[[1158, 1179[[1200, 1241[388 MustHaveRegister 422 MustHaveRegister 429 LiveAtLoopEnd 514 MustHaveRegister 522 MustHaveRegister 530 MustHaveRegister 538 MustHaveRegister 545 LiveAtLoopEnd 586 MustHaveRegister 593 LiveAtLoopEnd 716 MustHaveRegister 718 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v33|d [392, 424[[430, 447[402 ShouldHaveRegister 422 MustHaveRegister 424 ShouldHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v31|d [422, 426[422 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v30|d [424, 429[424 MustHaveRegister 426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [444, 546[444 MustHaveRegister 458 MustHaveRegister 545 LiveAtLoopEnd  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v30|d [448, 540[[546, 555[458 ShouldHaveRegister 514 MustHaveRegister 516 ShouldHaveRegister 524 MustHaveRegister 532 MustHaveRegister 540 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [512, 514[512 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v36|d [514, 518[514 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v35|d [516, 523[516 MustHaveRegister 518 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v39|d [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [524, 531[524 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v42|d [530, 534[530 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [532, 539[532 MustHaveRegister 534 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [536, 538[536 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d v45|d [538, 542[538 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [540, 545[540 MustHaveRegister 542 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v35|d [556, 588[566 ShouldHaveRegister 586 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d v49|d [586, 590[586 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v48|d [588, 593[588 MustHaveRegister 590 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [624, 912[624 MustHaveRegister 626 ShouldHaveRegister 735 LiveAtLoopEnd 748 ShouldHaveRegister 911 LiveAtLoopEnd  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v52|d [626, 912[626 MustHaveRegister 632 MustHaveRegister 735 LiveAtLoopEnd 746 MustHaveRegister 911 LiveAtLoopEnd  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [628, 656[628 MustHaveRegister 630 ShouldHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v54|d [630, 633[630 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v53|q [632, 634[632 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v56|q [634, 636[634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v54|d [656, 912[656 MustHaveRegister 760 MustHaveRegister 779 LiveAtLoopEnd  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [654, 657[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d v61|d [660, 733[[736, 909[[1200, 1241[670 ShouldHaveRegister 684 ShouldHaveRegister 686 MustHaveRegister 700 ShouldHaveRegister 746 MustHaveRegister 776 MustHaveRegister 779 LiveAtLoopEnd 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 855 LiveAtLoopEnd 892 MustHaveRegister 895 LiveAtLoopEnd  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d v60|d [684, 735[[736, 911[684 MustHaveRegister 734 ShouldHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v63|d [750, 774[[780, 789[760 ShouldHaveRegister 774 ShouldHaveRegister 788 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d v62|d [774, 779[774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d v62|d [790, 850[[856, 865[800 ShouldHaveRegister 838 ShouldHaveRegister 842 MustHaveRegister 846 MustHaveRegister 850 MustHaveRegister 864 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d v64|d [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d -1 [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[v67|d]" v67|d -1 [846, 848[846 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [850, 855[850 MustHaveRegister 852 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d v64|d [866, 890[876 ShouldHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d v69|d [890, 895[890 MustHaveRegister 892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [908, 909[908 MustHaveRegister  "NoDefinitionFound"
  v72|d DWORD "[v72|d]" v72|d v3|d [700, 718[700 MustHaveRegister 702 ShouldHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d -1 [716, 718[716 MustHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v75|q QWORD "[v75|q]" v75|q -1 [934, 978[934 MustHaveRegister 936 MustHaveRegister 966 MustHaveRegister 968 MustHaveRegister 970 MustHaveRegister 972 MustHaveRegister 974 MustHaveRegister 976 MustHaveRegister 978 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q -1 [936, 964[936 MustHaveRegister 938 MustHaveRegister 964 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q -1 [1120, 1122[1120 MustHaveRegister 1122 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q rax|q [1126, 1131[1126 MustHaveRegister 1128 MustHaveRegister 1130 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q v75|q [978, 981[978 MustHaveRegister 980 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q v80|q [982, 1028[1016 MustHaveRegister 1020 MustHaveRegister 1022 MustHaveRegister 1026 MustHaveRegister 1028 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d v18|q [1014, 1016[1014 MustHaveRegister 1016 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[v83|d]" v83|d v26|q [1018, 1020[1018 MustHaveRegister 1020 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d -1 [1220, 1236[1236 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[v86|q]" v86|q -1 [1220, 1238[1238 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [1252, 1268[1268 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q -1 [1252, 1270[1270 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q -1 [1034, 1054[1034 MustHaveRegister 1054 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q -1 [1068, 1088[1068 MustHaveRegister 1088 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v81|q [0, 1[[1028, 1030[[1058, 1060[[1092, 1094[[1124, 1126[[1154, 1155[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v13|q [0, 1[[1152, 1155[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d v2|d [0, 1[[1056, 1058[[1090, 1092[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 16[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v89|q [0, 20[[1054, 1058[[1088, 1092[[1122, 1124[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1154, 1155[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [20, 660[20 MustHaveRegister 22 MustHaveRegister 44 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[r11|d]" v1|d -1 [44, 1022[[1032, 1158[44 MustHaveRegister 46 MustHaveRegister 384 MustHaveRegister 388 MustHaveRegister 1022 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r8|d]" v2|d -1 [46, 940[[1032, 1129[[1132, 1179[[1200, 1241[46 MustHaveRegister 48 ShouldHaveRegister 52 ShouldHaveRegister 66 ShouldHaveRegister 98 ShouldHaveRegister 180 MustHaveRegister 444 MustHaveRegister 566 MustHaveRegister 593 LiveAtLoopEnd 624 MustHaveRegister 628 MustHaveRegister 652 ShouldHaveRegister 658 ShouldHaveRegister 702 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd 1090 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d v2|d [48, 932[[1032, 1100[[1132, 1158[48 MustHaveRegister 50 ShouldHaveRegister 686 ShouldHaveRegister 700 MustHaveRegister 716 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd 932 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [50, 54[50 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v2|d [52, 636[[1032, 1100[[1132, 1158[52 MustHaveRegister 54 MustHaveRegister 128 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [126, 250[[1132, 1158[126 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 224 MustHaveRegister 229 LiveAtLoopEnd 250 ShouldHaveRegister 1154 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v5|q [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [130, 132[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v8|q [132, 230[132 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 182 MustHaveRegister 206 MustHaveRegister 229 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v9|q [134, 168[134 MustHaveRegister 136 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [1094, 1099[1094 MustHaveRegister 1096 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [182, 186[[1132, 1152[182 MustHaveRegister 184 ShouldHaveRegister 1152 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v15|q [196, 226[206 ShouldHaveRegister 224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v14|q [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v6|q [250, 253[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q v17|q [254, 1014[[1032, 1066[[1100, 1132[[1158, 1179[[1200, 1241[735 LiveAtLoopEnd 746 MustHaveRegister 776 MustHaveRegister 779 LiveAtLoopEnd 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 855 LiveAtLoopEnd 892 MustHaveRegister 895 LiveAtLoopEnd 911 LiveAtLoopEnd 932 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [272, 360[272 MustHaveRegister 274 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 344 MustHaveRegister 349 LiveAtLoopEnd 360 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [274, 300[274 MustHaveRegister 276 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q rax|q [1060, 1065[1060 MustHaveRegister 1062 MustHaveRegister 1064 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v23|q [316, 346[326 ShouldHaveRegister 344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v22|q [346, 349[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q v19|q [360, 363[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q v25|q [364, 1018[[1100, 1132[[1158, 1179[[1200, 1241[386 MustHaveRegister 426 MustHaveRegister 429 LiveAtLoopEnd 518 MustHaveRegister 526 MustHaveRegister 534 MustHaveRegister 542 MustHaveRegister 545 LiveAtLoopEnd 590 MustHaveRegister 593 LiveAtLoopEnd 1018 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d v27|d [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q v1|d [388, 940[[1100, 1129[[1158, 1179[[1200, 1241[388 MustHaveRegister 422 MustHaveRegister 429 LiveAtLoopEnd 514 MustHaveRegister 522 MustHaveRegister 530 MustHaveRegister 538 MustHaveRegister 545 LiveAtLoopEnd 586 MustHaveRegister 593 LiveAtLoopEnd 716 MustHaveRegister 718 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d v33|d [392, 424[[430, 447[402 ShouldHaveRegister 422 MustHaveRegister 424 ShouldHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rsi|d]" v31|d -1 [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rsi|d]" v32|d v31|d [422, 426[422 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d v30|d [424, 429[424 MustHaveRegister 426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [444, 546[444 MustHaveRegister 458 MustHaveRegister 545 LiveAtLoopEnd  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d v30|d [448, 540[[546, 555[458 ShouldHaveRegister 514 MustHaveRegister 516 ShouldHaveRegister 524 MustHaveRegister 532 MustHaveRegister 540 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rbp|d]" v36|d -1 [512, 514[512 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rbp|d]" v37|d v36|d [514, 518[514 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r13|d]" v38|d v35|d [516, 523[516 MustHaveRegister 518 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbp|d]" v39|d -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d v39|d [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r13|d]" v41|d -1 [524, 531[524 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbp|d]" v42|d -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbp|d]" v43|d v42|d [530, 534[530 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r13|d]" v44|d -1 [532, 539[532 MustHaveRegister 534 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rbp|d]" v45|d -1 [536, 538[536 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbp|d]" v46|d v45|d [538, 542[538 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d -1 [540, 545[540 MustHaveRegister 542 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d v35|d [556, 588[566 ShouldHaveRegister 586 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[rsi|d]" v49|d -1 [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d v49|d [586, 590[586 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rax|d]" v51|d v48|d [588, 593[588 MustHaveRegister 590 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d -1 [624, 912[624 MustHaveRegister 626 ShouldHaveRegister 735 LiveAtLoopEnd 748 ShouldHaveRegister 911 LiveAtLoopEnd  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v52|d [626, 912[626 MustHaveRegister 632 MustHaveRegister 735 LiveAtLoopEnd 746 MustHaveRegister 911 LiveAtLoopEnd  "NoSpillStore"
  v54|d DWORD "[rbp|d]" v54|d -1 [628, 656[628 MustHaveRegister 630 ShouldHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r13|q]" v55|q v54|d [630, 633[630 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[r14|q]" v56|q v53|q [632, 634[632 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r14|q]" v57|q v56|q [634, 636[634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbp|d]" v58|d v54|d [656, 912[656 MustHaveRegister 760 MustHaveRegister 779 LiveAtLoopEnd  "NoSpillStore"
  v59|d DWORD "[rbx|d]" v59|d -1 [654, 657[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rbx|d]" v60|d v61|d [660, 733[[736, 909[[1200, 1241[670 ShouldHaveRegister 684 ShouldHaveRegister 686 MustHaveRegister 700 ShouldHaveRegister 746 MustHaveRegister 776 MustHaveRegister 779 LiveAtLoopEnd 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 855 LiveAtLoopEnd 892 MustHaveRegister 895 LiveAtLoopEnd  "NoSpillStore"
  v61|d DWORD "[r13|d]" v61|d v60|d [684, 735[[736, 911[684 MustHaveRegister 734 ShouldHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r10|d]" v62|d v63|d [750, 774[[780, 789[760 ShouldHaveRegister 774 ShouldHaveRegister 788 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d v62|d [774, 779[774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r10|d]" v64|d v62|d [790, 850[[856, 865[800 ShouldHaveRegister 838 ShouldHaveRegister 842 MustHaveRegister 846 MustHaveRegister 850 MustHaveRegister 864 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[r14|d]" v65|d v64|d [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[r14|d]" v66|d -1 [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r14|d]" v67|d -1 [846, 848[846 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[r10|d]" v68|d -1 [850, 855[850 MustHaveRegister 852 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[r10|d]" v69|d v64|d [866, 890[876 ShouldHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[r10|d]" v70|d v69|d [890, 895[890 MustHaveRegister 892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[r10|q]" v71|q -1 [908, 909[908 MustHaveRegister  "NoDefinitionFound"
  v72|d DWORD "[r14|d]" v72|d v3|d [700, 718[700 MustHaveRegister 702 ShouldHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[r10|d]" v73|d -1 [716, 718[716 MustHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r10|q]" v74|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v75|q QWORD "[rax|q]" v75|q -1 [934, 978[934 MustHaveRegister 936 MustHaveRegister 966 MustHaveRegister 968 MustHaveRegister 970 MustHaveRegister 972 MustHaveRegister 974 MustHaveRegister 976 MustHaveRegister 978 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q -1 [936, 964[936 MustHaveRegister 938 MustHaveRegister 964 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rsi|q]" v77|q -1 [1120, 1122[1120 MustHaveRegister 1122 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[rax|q]" v78|q rax|q [1126, 1131[1126 MustHaveRegister 1128 MustHaveRegister 1130 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rax|q]" v80|q v75|q [978, 981[978 MustHaveRegister 980 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q v80|q [982, 1028[1016 MustHaveRegister 1020 MustHaveRegister 1022 MustHaveRegister 1026 MustHaveRegister 1028 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rcx|d]" v82|d v18|q [1014, 1016[1014 MustHaveRegister 1016 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[rdi|d]" v83|d v26|q [1018, 1020[1018 MustHaveRegister 1020 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r11|d]" v85|d -1 [1220, 1236[1236 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[r9|q]" v86|q -1 [1220, 1238[1238 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [1252, 1268[1268 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r8|q]" v88|q -1 [1252, 1270[1270 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rsi|q]" v89|q -1 [1034, 1054[1034 MustHaveRegister 1054 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [1068, 1088[1068 MustHaveRegister 1088 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r10|q]" v0|q v0|q [982, 1024[[1032, 1179[[1180, 1241[[1242, 1273[1024 MustHaveRegister  "SpillInDominator"
  v92|q QWORD "[vstack:0|q]" v0|q v0|q [660, 982[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  128  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr  130  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  274  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr  304  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr  308  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  316  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  384  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  392  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  422  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  448  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  514  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  522  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  524  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  530  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  538  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  540  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  556  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  586  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  588  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr  626  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr  630  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  654  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  656  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  660  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  750  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  790  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  866  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  936  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr  938  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr  966  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr  968  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr  970  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr  972  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  982  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr 1018  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1060  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1094  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1126  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1220  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1252  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v81|q [0, 1[[1028, 1030[[1058, 1060[[1092, 1094[[1124, 1126[[1154, 1155[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v13|q [0, 1[[1152, 1155[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d v2|d [0, 1[[1056, 1058[[1090, 1092[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 16[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v89|q [0, 20[[1054, 1058[[1088, 1092[[1122, 1124[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1154, 1155[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [20, 660[20 MustHaveRegister 22 MustHaveRegister 44 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r11|d]" v1|d -1 [44, 1022[[1032, 1158[44 MustHaveRegister 46 MustHaveRegister 384 MustHaveRegister 388 MustHaveRegister 1022 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r8|d]" v2|d -1 [46, 940[[1032, 1129[[1132, 1179[[1200, 1241[46 MustHaveRegister 48 ShouldHaveRegister 52 ShouldHaveRegister 66 ShouldHaveRegister 98 ShouldHaveRegister 180 MustHaveRegister 444 MustHaveRegister 566 MustHaveRegister 593 LiveAtLoopEnd 624 MustHaveRegister 628 MustHaveRegister 652 ShouldHaveRegister 658 ShouldHaveRegister 702 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd 1090 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d v2|d [48, 932[[1032, 1100[[1132, 1158[48 MustHaveRegister 50 ShouldHaveRegister 686 ShouldHaveRegister 700 MustHaveRegister 716 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd 932 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [50, 54[50 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v2|d [52, 636[[1032, 1100[[1132, 1158[52 MustHaveRegister 54 MustHaveRegister 128 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [126, 250[[1132, 1158[126 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 224 MustHaveRegister 229 LiveAtLoopEnd 250 ShouldHaveRegister 1154 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v5|q [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [130, 132[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v8|q [132, 230[132 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 182 MustHaveRegister 206 MustHaveRegister 229 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v9|q [134, 168[134 MustHaveRegister 136 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [1094, 1099[1094 MustHaveRegister 1096 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [182, 186[[1132, 1152[182 MustHaveRegister 184 ShouldHaveRegister 1152 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v15|q [196, 226[206 ShouldHaveRegister 224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v14|q [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v6|q [250, 253[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q v17|q [254, 1014[[1032, 1066[[1100, 1132[[1158, 1179[[1200, 1241[735 LiveAtLoopEnd 746 MustHaveRegister 776 MustHaveRegister 779 LiveAtLoopEnd 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 855 LiveAtLoopEnd 892 MustHaveRegister 895 LiveAtLoopEnd 911 LiveAtLoopEnd 932 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [272, 360[272 MustHaveRegister 274 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 344 MustHaveRegister 349 LiveAtLoopEnd 360 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [274, 300[274 MustHaveRegister 276 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q rax|q [1060, 1065[1060 MustHaveRegister 1062 MustHaveRegister 1064 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v23|q [316, 346[326 ShouldHaveRegister 344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v22|q [346, 349[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q v19|q [360, 363[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q v25|q [364, 1018[[1100, 1132[[1158, 1179[[1200, 1241[386 MustHaveRegister 426 MustHaveRegister 429 LiveAtLoopEnd 518 MustHaveRegister 526 MustHaveRegister 534 MustHaveRegister 542 MustHaveRegister 545 LiveAtLoopEnd 590 MustHaveRegister 593 LiveAtLoopEnd 1018 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d v27|d [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q v1|d [388, 940[[1100, 1129[[1158, 1179[[1200, 1241[388 MustHaveRegister 422 MustHaveRegister 429 LiveAtLoopEnd 514 MustHaveRegister 522 MustHaveRegister 530 MustHaveRegister 538 MustHaveRegister 545 LiveAtLoopEnd 586 MustHaveRegister 593 LiveAtLoopEnd 716 MustHaveRegister 718 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d v33|d [392, 424[[430, 447[402 ShouldHaveRegister 422 MustHaveRegister 424 ShouldHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rsi|d]" v31|d -1 [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rsi|d]" v32|d v31|d [422, 426[422 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d v30|d [424, 429[424 MustHaveRegister 426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [444, 546[444 MustHaveRegister 458 MustHaveRegister 545 LiveAtLoopEnd  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d v30|d [448, 540[[546, 555[458 ShouldHaveRegister 514 MustHaveRegister 516 ShouldHaveRegister 524 MustHaveRegister 532 MustHaveRegister 540 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rbp|d]" v36|d -1 [512, 514[512 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rbp|d]" v37|d v36|d [514, 518[514 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r13|d]" v38|d v35|d [516, 523[516 MustHaveRegister 518 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbp|d]" v39|d -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d v39|d [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r13|d]" v41|d -1 [524, 531[524 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbp|d]" v42|d -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbp|d]" v43|d v42|d [530, 534[530 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r13|d]" v44|d -1 [532, 539[532 MustHaveRegister 534 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rbp|d]" v45|d -1 [536, 538[536 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbp|d]" v46|d v45|d [538, 542[538 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d -1 [540, 545[540 MustHaveRegister 542 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d v35|d [556, 588[566 ShouldHaveRegister 586 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[rsi|d]" v49|d -1 [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d v49|d [586, 590[586 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rax|d]" v51|d v48|d [588, 593[588 MustHaveRegister 590 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d -1 [624, 912[624 MustHaveRegister 626 ShouldHaveRegister 735 LiveAtLoopEnd 748 ShouldHaveRegister 911 LiveAtLoopEnd  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v52|d [626, 912[626 MustHaveRegister 632 MustHaveRegister 735 LiveAtLoopEnd 746 MustHaveRegister 911 LiveAtLoopEnd  "NoSpillStore"
  v54|d DWORD "[rbp|d]" v54|d -1 [628, 656[628 MustHaveRegister 630 ShouldHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r13|q]" v55|q v54|d [630, 633[630 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[r14|q]" v56|q v53|q [632, 634[632 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r14|q]" v57|q v56|q [634, 636[634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbp|d]" v58|d v54|d [656, 912[656 MustHaveRegister 760 MustHaveRegister 779 LiveAtLoopEnd  "NoSpillStore"
  v59|d DWORD "[rbx|d]" v59|d -1 [654, 657[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rbx|d]" v60|d v61|d [660, 733[[736, 909[[1200, 1241[670 ShouldHaveRegister 684 ShouldHaveRegister 686 MustHaveRegister 700 ShouldHaveRegister 746 MustHaveRegister 776 MustHaveRegister 779 LiveAtLoopEnd 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 855 LiveAtLoopEnd 892 MustHaveRegister 895 LiveAtLoopEnd  "NoSpillStore"
  v61|d DWORD "[r13|d]" v61|d v60|d [684, 735[[736, 911[684 MustHaveRegister 734 ShouldHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r10|d]" v62|d v63|d [750, 774[[780, 789[760 ShouldHaveRegister 774 ShouldHaveRegister 788 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d v62|d [774, 779[774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r10|d]" v64|d v62|d [790, 850[[856, 865[800 ShouldHaveRegister 838 ShouldHaveRegister 842 MustHaveRegister 846 MustHaveRegister 850 MustHaveRegister 864 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[r14|d]" v65|d v64|d [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[r14|d]" v66|d -1 [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r14|d]" v67|d -1 [846, 848[846 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[r10|d]" v68|d -1 [850, 855[850 MustHaveRegister 852 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[r10|d]" v69|d v64|d [866, 890[876 ShouldHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[r10|d]" v70|d v69|d [890, 895[890 MustHaveRegister 892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[r10|q]" v71|q -1 [908, 909[908 MustHaveRegister  "NoDefinitionFound"
  v72|d DWORD "[r14|d]" v72|d v3|d [700, 718[700 MustHaveRegister 702 ShouldHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[r10|d]" v73|d -1 [716, 718[716 MustHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r10|q]" v74|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v75|q QWORD "[rax|q]" v75|q -1 [934, 978[934 MustHaveRegister 936 MustHaveRegister 966 MustHaveRegister 968 MustHaveRegister 970 MustHaveRegister 972 MustHaveRegister 974 MustHaveRegister 976 MustHaveRegister 978 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q -1 [936, 964[936 MustHaveRegister 938 MustHaveRegister 964 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rsi|q]" v77|q -1 [1120, 1122[1120 MustHaveRegister 1122 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[rax|q]" v78|q rax|q [1126, 1131[1126 MustHaveRegister 1128 MustHaveRegister 1130 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rax|q]" v80|q v75|q [978, 981[978 MustHaveRegister 980 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q v80|q [982, 1028[1016 MustHaveRegister 1020 MustHaveRegister 1022 MustHaveRegister 1026 MustHaveRegister 1028 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rcx|d]" v82|d v18|q [1014, 1016[1014 MustHaveRegister 1016 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[rdi|d]" v83|d v26|q [1018, 1020[1018 MustHaveRegister 1020 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r11|d]" v85|d -1 [1220, 1236[1236 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[r9|q]" v86|q -1 [1220, 1238[1238 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [1252, 1268[1268 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r8|q]" v88|q -1 [1252, 1270[1270 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rsi|q]" v89|q -1 [1034, 1054[1034 MustHaveRegister 1054 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [1068, 1088[1068 MustHaveRegister 1088 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r10|q]" v0|q v0|q [982, 1024[[1032, 1179[[1180, 1241[[1242, 1273[1024 MustHaveRegister  "StoreAtDefinition"
  v92|q QWORD "[vstack:0|q]" v0|q v0|q [660, 982[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  128  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr  130  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  274  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr  304  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr  308  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  316  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [v23|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  384  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  392  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  422  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  448  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  514  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  522  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  524  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  530  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  538  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  540  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  556  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  586  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  588  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr  626  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr  630  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  654  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  656  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  660  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  750  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [v62|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  790  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [v64|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  866  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v70|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  936  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr  938  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr  966  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr  968  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr  970  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr  972  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [v80|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  982  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr 1018  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1060  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1094  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1126  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [v78|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [int[-99347|0xfffffffffffe7bed], long[1300|0x514]] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [int[-46131|0xffffffffffff4bcd], long[20|0x14]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction JUMP ~outgoingValues: [int[-101907|0xfffffffffffe71ed], long[1940|0x794]] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [int[-63771|0xffffffffffff06e5], long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1220  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5], long[3224|0xc98]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1252  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v81|q [0, 1[[1028, 1030[[1058, 1060[[1092, 1094[[1124, 1126[[1154, 1155[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v13|q [0, 1[[1152, 1155[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d v2|d [0, 1[[1056, 1058[[1090, 1092[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 16[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v89|q [0, 20[[1054, 1058[[1088, 1092[[1122, 1124[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1154, 1155[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [20, 660[20 MustHaveRegister 22 MustHaveRegister 44 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r11|d]" v1|d -1 [44, 1022[[1032, 1158[44 MustHaveRegister 46 MustHaveRegister 384 MustHaveRegister 388 MustHaveRegister 1022 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r8|d]" v2|d -1 [46, 940[[1032, 1129[[1132, 1179[[1200, 1241[46 MustHaveRegister 48 ShouldHaveRegister 52 ShouldHaveRegister 66 ShouldHaveRegister 98 ShouldHaveRegister 180 MustHaveRegister 444 MustHaveRegister 566 MustHaveRegister 593 LiveAtLoopEnd 624 MustHaveRegister 628 MustHaveRegister 652 ShouldHaveRegister 658 ShouldHaveRegister 702 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd 1090 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d v2|d [48, 932[[1032, 1100[[1132, 1158[48 MustHaveRegister 50 ShouldHaveRegister 686 ShouldHaveRegister 700 MustHaveRegister 716 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd 932 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [50, 54[50 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v2|d [52, 636[[1032, 1100[[1132, 1158[52 MustHaveRegister 54 MustHaveRegister 128 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [126, 250[[1132, 1158[126 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 224 MustHaveRegister 229 LiveAtLoopEnd 250 ShouldHaveRegister 1154 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v5|q [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [130, 132[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v8|q [132, 230[132 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 182 MustHaveRegister 206 MustHaveRegister 229 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v9|q [134, 168[134 MustHaveRegister 136 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [1094, 1099[1094 MustHaveRegister 1096 MustHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [182, 186[[1132, 1152[182 MustHaveRegister 184 ShouldHaveRegister 1152 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v15|q [196, 226[206 ShouldHaveRegister 224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v14|q [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v6|q [250, 253[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q v17|q [254, 1014[[1032, 1066[[1100, 1132[[1158, 1179[[1200, 1241[735 LiveAtLoopEnd 746 MustHaveRegister 776 MustHaveRegister 779 LiveAtLoopEnd 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 855 LiveAtLoopEnd 892 MustHaveRegister 895 LiveAtLoopEnd 911 LiveAtLoopEnd 932 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [272, 360[272 MustHaveRegister 274 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 344 MustHaveRegister 349 LiveAtLoopEnd 360 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [274, 300[274 MustHaveRegister 276 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q rax|q [1060, 1065[1060 MustHaveRegister 1062 MustHaveRegister 1064 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v23|q [316, 346[326 ShouldHaveRegister 344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v22|q [346, 349[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q v19|q [360, 363[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q v25|q [364, 1018[[1100, 1132[[1158, 1179[[1200, 1241[386 MustHaveRegister 426 MustHaveRegister 429 LiveAtLoopEnd 518 MustHaveRegister 526 MustHaveRegister 534 MustHaveRegister 542 MustHaveRegister 545 LiveAtLoopEnd 590 MustHaveRegister 593 LiveAtLoopEnd 1018 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d v27|d [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q v1|d [388, 940[[1100, 1129[[1158, 1179[[1200, 1241[388 MustHaveRegister 422 MustHaveRegister 429 LiveAtLoopEnd 514 MustHaveRegister 522 MustHaveRegister 530 MustHaveRegister 538 MustHaveRegister 545 LiveAtLoopEnd 586 MustHaveRegister 593 LiveAtLoopEnd 716 MustHaveRegister 718 MustHaveRegister 735 LiveAtLoopEnd 911 LiveAtLoopEnd  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d v33|d [392, 424[[430, 447[402 ShouldHaveRegister 422 MustHaveRegister 424 ShouldHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rsi|d]" v31|d -1 [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rsi|d]" v32|d v31|d [422, 426[422 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d v30|d [424, 429[424 MustHaveRegister 426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [444, 546[444 MustHaveRegister 458 MustHaveRegister 545 LiveAtLoopEnd  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d v30|d [448, 540[[546, 555[458 ShouldHaveRegister 514 MustHaveRegister 516 ShouldHaveRegister 524 MustHaveRegister 532 MustHaveRegister 540 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rbp|d]" v36|d -1 [512, 514[512 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rbp|d]" v37|d v36|d [514, 518[514 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r13|d]" v38|d v35|d [516, 523[516 MustHaveRegister 518 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbp|d]" v39|d -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d v39|d [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r13|d]" v41|d -1 [524, 531[524 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbp|d]" v42|d -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbp|d]" v43|d v42|d [530, 534[530 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r13|d]" v44|d -1 [532, 539[532 MustHaveRegister 534 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rbp|d]" v45|d -1 [536, 538[536 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbp|d]" v46|d v45|d [538, 542[538 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d -1 [540, 545[540 MustHaveRegister 542 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d v35|d [556, 588[566 ShouldHaveRegister 586 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[rsi|d]" v49|d -1 [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d v49|d [586, 590[586 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rax|d]" v51|d v48|d [588, 593[588 MustHaveRegister 590 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d -1 [624, 912[624 MustHaveRegister 626 ShouldHaveRegister 735 LiveAtLoopEnd 748 ShouldHaveRegister 911 LiveAtLoopEnd  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v52|d [626, 912[626 MustHaveRegister 632 MustHaveRegister 735 LiveAtLoopEnd 746 MustHaveRegister 911 LiveAtLoopEnd  "NoSpillStore"
  v54|d DWORD "[rbp|d]" v54|d -1 [628, 656[628 MustHaveRegister 630 ShouldHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r13|q]" v55|q v54|d [630, 633[630 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[r14|q]" v56|q v53|q [632, 634[632 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r14|q]" v57|q v56|q [634, 636[634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbp|d]" v58|d v54|d [656, 912[656 MustHaveRegister 760 MustHaveRegister 779 LiveAtLoopEnd  "NoSpillStore"
  v59|d DWORD "[rbx|d]" v59|d -1 [654, 657[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rbx|d]" v60|d v61|d [660, 733[[736, 909[[1200, 1241[670 ShouldHaveRegister 684 ShouldHaveRegister 686 MustHaveRegister 700 ShouldHaveRegister 746 MustHaveRegister 776 MustHaveRegister 779 LiveAtLoopEnd 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 855 LiveAtLoopEnd 892 MustHaveRegister 895 LiveAtLoopEnd  "NoSpillStore"
  v61|d DWORD "[r13|d]" v61|d v60|d [684, 735[[736, 911[684 MustHaveRegister 734 ShouldHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r10|d]" v62|d v63|d [750, 774[[780, 789[760 ShouldHaveRegister 774 ShouldHaveRegister 788 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d v62|d [774, 779[774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r10|d]" v64|d v62|d [790, 850[[856, 865[800 ShouldHaveRegister 838 ShouldHaveRegister 842 MustHaveRegister 846 MustHaveRegister 850 MustHaveRegister 864 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[r14|d]" v65|d v64|d [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[r14|d]" v66|d -1 [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r14|d]" v67|d -1 [846, 848[846 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[r10|d]" v68|d -1 [850, 855[850 MustHaveRegister 852 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[r10|d]" v69|d v64|d [866, 890[876 ShouldHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[r10|d]" v70|d v69|d [890, 895[890 MustHaveRegister 892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[r10|q]" v71|q -1 [908, 909[908 MustHaveRegister  "NoDefinitionFound"
  v72|d DWORD "[r14|d]" v72|d v3|d [700, 718[700 MustHaveRegister 702 ShouldHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[r10|d]" v73|d -1 [716, 718[716 MustHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r10|q]" v74|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v75|q QWORD "[rax|q]" v75|q -1 [934, 978[934 MustHaveRegister 936 MustHaveRegister 966 MustHaveRegister 968 MustHaveRegister 970 MustHaveRegister 972 MustHaveRegister 974 MustHaveRegister 976 MustHaveRegister 978 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q -1 [936, 964[936 MustHaveRegister 938 MustHaveRegister 964 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rsi|q]" v77|q -1 [1120, 1122[1120 MustHaveRegister 1122 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[rax|q]" v78|q rax|q [1126, 1131[1126 MustHaveRegister 1128 MustHaveRegister 1130 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rax|q]" v80|q v75|q [978, 981[978 MustHaveRegister 980 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q v80|q [982, 1028[1016 MustHaveRegister 1020 MustHaveRegister 1022 MustHaveRegister 1026 MustHaveRegister 1028 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rcx|d]" v82|d v18|q [1014, 1016[1014 MustHaveRegister 1016 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[rdi|d]" v83|d v26|q [1018, 1020[1018 MustHaveRegister 1020 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r11|d]" v85|d -1 [1220, 1236[1236 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[r9|q]" v86|q -1 [1220, 1238[1238 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [1252, 1268[1268 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r8|q]" v88|q -1 [1252, 1270[1270 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rsi|q]" v89|q -1 [1034, 1054[1034 MustHaveRegister 1054 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [1068, 1088[1068 MustHaveRegister 1088 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r10|q]" v0|q v0|q [982, 1024[[1032, 1179[[1180, 1241[[1242, 1273[1024 MustHaveRegister  "StoreAtDefinition"
  v92|q QWORD "[vstack:0|q]" v0|q v0|q [660, 982[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  128  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr  130  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  274  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr  304  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr  308  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  316  <|@ instruction [v22|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [v26|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  384  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  392  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  422  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  448  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  514  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  522  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  524  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  530  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  538  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  540  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  556  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  586  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  588  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr  626  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr  630  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  654  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  656  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  660  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  750  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  790  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  866  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  936  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr  938  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr  966  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr  968  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr  970  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr  972  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  982  <|@ instruction [v81|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr 1018  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1060  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1094  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1126  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] // MoveResolver resolve mapping <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] // MoveResolver resolve mapping <|@ <|@
      nr 1208  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1220  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1252  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  128  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr  130  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v6|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v6|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v19|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  274  <|@ instruction v20|QWORD = LEA address: [v19|QWORD + 528] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 784] instr: 0 <|@ <|@
      nr  304  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 848] instr: 0 <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + 912] instr: 0 <|@ <|@
      nr  308  <|@ instruction MOV x: [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction MOV x: [v19|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v22|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction MOV x: [v19|QWORD + v22|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 8] size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction v27|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  384  <|@ instruction v28|DWORD = AND (x: v27|DWORD, ~y: [v1|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v26|QWORD[.] + v28|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: v30|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction v31|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  422  <|@ instruction v32|DWORD = AND (x: v31|DWORD, ~y: [v29|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v33|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v26|QWORD[.] + v32|DWORD * 4 + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction v34|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v35|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v36|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  514  <|@ instruction v37|DWORD = AND (x: v36|DWORD, ~y: [v29|QWORD[.] + v35|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  516  <|@ instruction v38|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v26|QWORD[.] + v37|DWORD * 4 + 16], y: v38|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction v39|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  522  <|@ instruction v40|DWORD = AND (x: v39|DWORD, ~y: [v29|QWORD[.] + v38|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  524  <|@ instruction v41|DWORD = LEA address: [v35|DWORD + 2] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v26|QWORD[.] + v40|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v42|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  530  <|@ instruction v43|DWORD = AND (x: v42|DWORD, ~y: [v29|QWORD[.] + v41|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v44|DWORD = LEA address: [v35|DWORD + 3] size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v26|QWORD[.] + v43|DWORD * 4 + 16], y: v44|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  538  <|@ instruction v46|DWORD = AND (x: v45|DWORD, ~y: [v29|QWORD[.] + v44|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  540  <|@ instruction v47|DWORD = LEA address: [v35|DWORD + 4] size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [v26|QWORD[.] + v46|DWORD * 4 + 16], y: v47|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v48|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v49|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  586  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v29|QWORD[.] + v48|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  588  <|@ instruction v51|DWORD = INC value: v48|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [v26|QWORD[.] + v50|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction v52|DWORD = LEA address: [v2|DWORD - 2] size: DWORD <|@ <|@
      nr  626  <|@ instruction v53|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction v54|DWORD = LEA address: [v2|DWORD - 3] size: DWORD <|@ <|@
      nr  630  <|@ instruction v55|QWORD = MOVE input: v54|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction v56|QWORD = SUB (x: v53|QWORD, ~y: v55|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction v57|QWORD = DEC value: v56|QWORD size: QWORD <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v57|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMP x: v2|DWORD y: 5 size: DWORD <|@ <|@
      nr  654  <|@ instruction v59|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  656  <|@ instruction v58|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v59|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: v60|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v3|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v72|DWORD = SUB (x: v3|DWORD, ~y: v60|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v73|DWORD = MOV input: [v29|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v73|DWORD, y: [v29|QWORD[.] + v72|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v74|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [v18|QWORD[.] + v53|QWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v62|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v63|DWORD = DEC value: v62|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [v18|QWORD[.] + v63|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v64|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v65|DWORD = DEC value: v64|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [v18|QWORD[.] + v65|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction v66|DWORD = LEA address: [v64|DWORD - 2] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [v18|QWORD[.] + v66|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction v67|DWORD = LEA address: [v64|DWORD - 3] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [v18|QWORD[.] + v67|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction v68|DWORD = LEA address: [v64|DWORD - 4] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [v18|QWORD[.] + v68|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v70|DWORD = DEC value: v69|DWORD size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [v18|QWORD[.] + v70|DWORD * 4 + 16], y: v60|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v18|QWORD[.] + v3|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v75|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  936  <|@ instruction v76|QWORD = LEA address: [v75|QWORD + 32] size: QWORD <|@ <|@
      nr  938  <|@ instruction CMPBRANCH (x: v76|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 440], y: v76|QWORD) size: QWORD <|@ <|@
      nr  966  <|@ instruction AMD64PREFETCH ~address: [v75|QWORD + 288] instr: 0 <|@ <|@
      nr  968  <|@ instruction MOV x: [v75|QWORD] y: 1 size: QWORD <|@ <|@
      nr  970  <|@ instruction MOV x: [v75|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr  972  <|@ instruction MOV x: [v75|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [v75|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [v75|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ instruction v80|QWORD[.] = MOVE input: v75|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction v82|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [v81|QWORD[.] + 24], y: v82|DWORD[_]) size: DWORD <|@ <|@
      nr 1018  <|@ instruction v83|DWORD[_] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [v81|QWORD[.] + 20], y: v83|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v81|QWORD[.] + 16], y: v1|DWORD[_]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction v84|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [v81|QWORD[.] + 12], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = MOVE input: v89|QWORD moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1060  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v21|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction v90|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = MOVE input: v90|QWORD moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1094  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1126  <|@ instruction v78|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v78|QWORD[.]] state [bci:138] <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD - - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] // MoveResolver resolve mapping <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] // MoveResolver resolve mapping <|@ <|@
      nr 1208  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: v0|QWORD[.] v29|QWORD[.] v2|DWORD v60|DWORD - v26|QWORD[.] v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  304  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  308  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  384  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  422  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  514  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  516  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  530  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  532  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  538  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  586  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  588  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  654  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  656  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: vstack:0|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: vstack:0|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  938  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  966  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  968  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  970  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr  972  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1018  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1096  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] // MoveResolver resolve mapping <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] // MoveResolver resolve mapping <|@ <|@
      nr 1208  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  304  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  308  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  384  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  422  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  514  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  516  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  530  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  532  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  538  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  586  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  588  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  654  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  656  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: vstack:0|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: vstack:0|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  938  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  966  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr  968  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  970  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr  972  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1018  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1096  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] // MoveResolver resolve mapping <|@ <|@
      nr 1198  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] // MoveResolver resolve mapping <|@ <|@
      nr 1208  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: vstack:0|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: vstack:0|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  382  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [22, 1202[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [22, 1202[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  382  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  382  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [rcx:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rdi:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B56" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  148  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  222  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  224  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  228  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B12" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0 <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0 <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0 <|@ <|@
      nr  416  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD + 12] y: 128 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636666922610458618
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  498  <|@ instruction MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  536  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646924
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  636  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  644  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction rbp|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  652  <|@ instruction rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4609434218613702662
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4576976457662906203
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE input: int[127|0x7f] <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607227909705344383
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD <|@ <|@
      nr  744  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction r14|QWORD = DEC value: r14|QWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction CMP x: r8|DWORD y: 5 size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<| <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B48" "B44" 
    successors "B49" "B34" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4619567317775286276
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B45" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4618441417868443652
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction r13|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B46" "B53" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  998  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4617315517961601028
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66] <|@ <|@
      nr 1046  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B38" "B37" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4598175219545276423
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r14|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B41" "B40" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4608308318706860036
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 2
    probability 4576976457662906211
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B44" "B43" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 2
    probability 4607227909705344385
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4607182418800017410
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125]
locals: stack:32|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0 <|@ <|@
      nr 1136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV x: [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1186  <|@ instruction MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1190  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: int[128|0x80] <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [rcx:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  380  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>} <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138] <|@ <|@
      nr 1104  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rdi:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:138] <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1212  <|@ instruction r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD rbx|DWORD - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:66] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr 1270  <|@ instruction r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B6" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0]
locals: r10|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64]
locals: r10|QWORD[.] rdx|QWORD[.] r8|DWORD - - rdi|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:64] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1028  <|@ instruction r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1284  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B58 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: instanceof    #1          // java.util.regex.Pattern$Slice
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: checkcast     #1          // java.util.regex.Pattern$Slice
    13: getfield      #0          // java.util.regex.Pattern$SliceNode.buffer:int[]
    16: astore_1      
    17: aload_1       
    18: arraylength   
    19: istore_2      
    20: iload_2       
    21: iconst_4      
    22: if_icmpge     27
    25: aload_0       
    26: areturn       
    27: sipush        128
    30: newarray      int
    32: astore        5
    34: iload_2       
    35: newarray      int
    37: astore        6
    39: iconst_0      
    40: istore_3      
    41: iload_3       
    42: iload_2       
    43: if_icmpge     64
    46: aload         5
    48: aload_1       
    49: iload_3       
    50: iaload        
    51: bipush        127
    53: iand          
    54: iload_3       
    55: iconst_1      
    56: iadd          
    57: iastore       
    58: iinc          
    61: goto          41
    64: iload_2       
    65: istore_3      
    66: iload_3       
    67: ifle          131
    70: iload_2       
    71: iconst_1      
    72: isub          
    73: istore        4
    75: iload         4
    77: iload_3       
    78: if_icmplt     108
    81: aload_1       
    82: iload         4
    84: iaload        
    85: aload_1       
    86: iload         4
    88: iload_3       
    89: isub          
    90: iaload        
    91: if_icmpne     125
    94: aload         6
    96: iload         4
    98: iconst_1      
    99: isub          
   100: iload_3       
   101: iastore       
   102: iinc          
   105: goto          75
   108: iload         4
   110: ifle          125
   113: aload         6
   115: iinc          
   118: iload         4
   120: iload_3       
   121: iastore       
   122: goto          108
   125: iinc          
   128: goto          66
   131: aload         6
   133: iload_2       
   134: iconst_1      
   135: isub          
   136: iconst_1      
   137: iastore       
   138: aload_0       
   139: instanceof    #7          // java.util.regex.Pattern$SliceS
   142: ifeq          162
   145: new           #9          // java.util.regex.Pattern$BnMS
   148: dup           
   149: aload_1       
   150: aload         5
   152: aload         6
   154: aload_0       
   155: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   158: invokespecial #2          // java.util.regex.Pattern$BnMS.<init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   161: areturn       
   162: new           #21         // java.util.regex.Pattern$BnM
   165: dup           
   166: aload_1       
   167: aload         5
   169: aload         6
   171: aload_0       
   172: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   175: invokespecial #3          // <init>:(int[], int[], int[], java.util.regex.Pattern$Node)void
   178: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85780600009090909090909048896c24104c8bd64c89142441817a08addeadde0f8530060000909090909090909090458b5a10468b04dd0c000000458bc841ffc94963c1418bd8483bd80f87b7040000909090904183f8020f8383050000909090909090904183f8040f82f9050000909090909090909090909090498b97b8010000488bc348c1e002488d40174883e0f8488bf04803f2493bb7c80100000f879704000090909090909090909090909090904989b7b80100000f188410000100000f188410400100000f1884108001000048c70201000000c74208addeadde4489420c488d48f04881f9000800000f839f04000090909048c7c610000000e91b0000000f1f8400000000009090909090909048c7043200000000488d760890909090483bc677e490909090909090488bca9090909090909090498b87b8010000488db010020000493bb7c80100000f87bb030000909090909090909090904989b7b80100000f1880100300000f1880500300000f18809003000048c70001000000c74008addeaddec7400c8000000048c7c610000000e9230000006666660f1f84000000000066666690909090909090909048c7043000000000488d7608909090904881fe1002000072e090909090488bf89090909090909090b87f000000422304dd10000000c744871001000000418bd348c1e203b801000000e9210000006666660f1f84000000000090909090909090be7f00000023748210ffc08944b7109090909083f8027ce1909090909090418d70fce9760000006666660f1f8400000000006666669066669090909090909090909090909090909090909090909090909090bd7f000000236c8210448be841ffc544896caf10bd7f00000042236caa10448d680244896caf10bd7f00000042236caa10448d680344896caf10bd7f00000042236caa108d40048944af10909090903bf07f94909090e9220000000f1f8400000000006666669090909090909090be7f00000023748210ffc08944b71090909090443bc07fe19090909090909090909090909090418d40fe8bf0418d68fd448bed4c8bf64d2bf549ffce493bde0f86fc0200009090909090904183f805bb010000000f42eb418bd86666660f1f840000000000666666909090909083fb010f8c110100009090909090448beb41ffcd413bd90f8f3d0000009090909090458bf1442bf3453bc60f863b0200009090909090468b548a10463b54b2100f84b802000090909090904d8b9758040000418502418bddeba290909090895cb110448bd0e90f0000006690909090909041ffca42895c911090909090413bea7eea909090e93900000066909090909090909090909090909090909090458bf241ffce42895cb110458d72fe42895cb110458d72fd42895cb110458d52fc42895c9110909090904183fa057dbf909090e9240000006666660f1f840000000000666666900f1f840000000000909090909041ffca42895c9110909090904183fa017de990909090904d8b9758040000418502418bdde9e2feffff90909090909090909042c744891001000000498b87b8010000488d7020493bb7c80100000f87e500000090909090909090909090904989b7b80100000f18802001000048c70001000000c74008addeaddec7400c0000000048c740100000000048c74018000000004c8b142490909090909090909090909090909048c1e90389481848c1ef0389781444895810418b720c89700c488b6c24104883c418493ba7500400000f878a010000c5f877c3909090e952fbffff48beaddeaddeaddeadde909090909090909090ba80000000e8000000000f1f8400000000008500e994fcffff48beaddeaddeaddeadde909090909090909090418bd0e8000000000f1f8400000000008500488bc8e9c9fbffff4c8b142490909090909090909048beaddeaddeaddeaddee8000000000f1f8400000000008500e932ffffff909090909090909090488d7a104833c0f348aae97ffbffff4c8b142490909049c7c10000000041bbe506ffff9090909090909045899f840400004d898f90040000e8000000000f1f84000000000090909049c7c0980c000041bbe52fffff9090909090909045899f840400004d898790040000e8000000000f1f8400000000009090909090909041c78784040000e519ffff49c78790040000980f0000e8000000000f1f8400000000004c8b142490909049c7c19407000041bbed71feffe969ffffff90909049c7c01400000041bbcd4bffffeb8990909049c7c01405000041bbed7bfeffe974ffffff48896c2410e800000000e979f9fffff4488d0d62feffff49898f68040000e94bf9fffff441c78784040000cd4bffff49c7879004000014000000e8000000000f1f84000000000041c78784040000f545ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f71fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008ffbfcff49c7879004000000000000e8000000000f1f84000000000041c787840400008f3afcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 38 18 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD  <||@
  Comment 38 20 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 41 22 stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 45 24 CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0]  <||@
  Comment 45 [r10:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 45 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 45 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}}  <||@
  Comment 59 block B1 null  <||@
  Comment 59 26 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 59 28 NOP  <||@
  Comment 60 30 NOP  <||@
  Comment 61 32 NOP  <||@
  Comment 62 34 NOP  <||@
  Comment 63 36 NOP  <||@
  Comment 64 38 NOP  <||@
  Comment 65 40 NOP  <||@
  Comment 66 42 NOP  <||@
  Comment 67 44 NOP  <||@
  Comment 68 46 r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 72 48 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 72 [r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 72 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 50 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 86 52 rax|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 89 54 rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 92 56 CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 101 block B3 null  <||@
  Comment 101 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 101 70 NOP  <||@
  Comment 102 72 NOP  <||@
  Comment 103 74 NOP  <||@
  Comment 104 76 NOP  <||@
  Comment 105 78 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null  <||@
  Comment 115 block B4 null  <||@
  Comment 115 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 82 NOP  <||@
  Comment 116 84 NOP  <||@
  Comment 117 86 NOP  <||@
  Comment 118 88 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 118 block B5 null  <||@
  Comment 118 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 118 92 NOP  <||@
  Comment 119 94 NOP  <||@
  Comment 120 96 NOP  <||@
  Comment 121 98 NOP  <||@
  Comment 122 100 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null  <||@
  Comment 132 block B7 null  <||@
  Comment 132 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 118 NOP  <||@
  Comment 133 120 NOP  <||@
  Comment 134 122 NOP  <||@
  Comment 135 124 NOP  <||@
  Comment 136 126 NOP  <||@
  Comment 137 128 NOP  <||@
  Comment 138 130 NOP  <||@
  Comment 139 132 NOP  <||@
  Comment 140 134 NOP  <||@
  Comment 141 136 NOP  <||@
  Comment 142 138 NOP  <||@
  Comment 143 140 NOP  <||@
  Comment 144 142 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 151 144 rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD  <||@
  Comment 158 146 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 162 148 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 166 150 rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 172 152 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD  <||@
  Comment 185 block B9 null  <||@
  Comment 185 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 185 188 NOP  <||@
  Comment 186 190 NOP  <||@
  Comment 187 192 NOP  <||@
  Comment 188 194 NOP  <||@
  Comment 189 196 NOP  <||@
  Comment 190 198 NOP  <||@
  Comment 191 200 NOP  <||@
  Comment 192 202 NOP  <||@
  Comment 193 204 NOP  <||@
  Comment 194 206 NOP  <||@
  Comment 195 208 NOP  <||@
  Comment 196 210 NOP  <||@
  Comment 197 212 NOP  <||@
  Comment 198 214 NOP  <||@
  Comment 199 216 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 206 218 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 214 220 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 222 222 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 230 224 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 237 226 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 237 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 244 228 MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 248 230 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 252 232 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 265 block B10 null  <||@
  Comment 265 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 236 NOP  <||@
  Comment 266 238 NOP  <||@
  Comment 267 240 NOP  <||@
  Comment 268 242 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 275 244 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 280 block B12 loop 0 depth 1 header:718|LoopBegin  <||@
  Comment 280 258 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 260 NOP  <||@
  Comment 289 262 NOP  <||@
  Comment 290 264 NOP  <||@
  Comment 291 266 NOP  <||@
  Comment 292 268 NOP  <||@
  Comment 293 270 NOP  <||@
  Comment 294 272 NOP  <||@
  Comment 295 274 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 276 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 307 278 JUMP ~outgoingValues: [] destination: B12 -> B11  <||@
  Comment 307 block B11 loop 0 depth 1 header:718|LoopBegin  <||@
  Comment 307 246 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 248 NOP  <||@
  Comment 308 250 NOP  <||@
  Comment 309 252 NOP  <||@
  Comment 310 254 NOP  <||@
  Comment 311 256 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD  <||@
  Comment 316 block B13 null  <||@
  Comment 316 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 282 NOP  <||@
  Comment 317 284 NOP  <||@
  Comment 318 286 NOP  <||@
  Comment 319 288 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 319 block B15 null  <||@
  Comment 319 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 316 NOP  <||@
  Comment 320 318 NOP  <||@
  Comment 321 320 NOP  <||@
  Comment 322 322 NOP  <||@
  Comment 323 324 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 323 326 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 326 328 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 326 block B16 null  <||@
  Comment 326 330 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 326 332 NOP  <||@
  Comment 327 334 NOP  <||@
  Comment 328 336 NOP  <||@
  Comment 329 338 NOP  <||@
  Comment 330 340 NOP  <||@
  Comment 331 342 NOP  <||@
  Comment 332 344 NOP  <||@
  Comment 333 346 NOP  <||@
  Comment 334 348 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 341 350 rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD  <||@
  Comment 348 352 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 361 block B18 null  <||@
  Comment 361 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 388 NOP  <||@
  Comment 362 390 NOP  <||@
  Comment 363 392 NOP  <||@
  Comment 364 394 NOP  <||@
  Comment 365 396 NOP  <||@
  Comment 366 398 NOP  <||@
  Comment 367 400 NOP  <||@
  Comment 368 402 NOP  <||@
  Comment 369 404 NOP  <||@
  Comment 370 406 NOP  <||@
  Comment 371 408 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 378 410 AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0  <||@
  Comment 385 412 AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0  <||@
  Comment 392 414 AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0  <||@
  Comment 399 416 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 406 418 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 406 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 413 420 MOV x: [rax|QWORD + 12] y: 128 size: DWORD  <||@
  Comment 420 422 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 427 424 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 432 block B20 loop 1 depth 1 header:800|LoopBegin  <||@
  Comment 432 438 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 448 440 NOP  <||@
  Comment 449 442 NOP  <||@
  Comment 450 444 NOP  <||@
  Comment 451 446 NOP  <||@
  Comment 452 448 NOP  <||@
  Comment 453 450 NOP  <||@
  Comment 454 452 NOP  <||@
  Comment 455 454 MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 463 456 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 467 458 JUMP ~outgoingValues: [] destination: B20 -> B19  <||@
  Comment 467 block B19 loop 1 depth 1 header:800|LoopBegin  <||@
  Comment 467 426 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 467 428 NOP  <||@
  Comment 468 430 NOP  <||@
  Comment 469 432 NOP  <||@
  Comment 470 434 NOP  <||@
  Comment 471 436 CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null  <||@
  Comment 480 block B21 null  <||@
  Comment 480 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 480 462 NOP  <||@
  Comment 481 464 NOP  <||@
  Comment 482 466 NOP  <||@
  Comment 483 468 NOP  <||@
  Comment 484 470 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 484 474 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 484 block B22 null  <||@
  Comment 484 476 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 484 472 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 487 478 NOP  <||@
  Comment 488 480 NOP  <||@
  Comment 489 482 NOP  <||@
  Comment 490 484 NOP  <||@
  Comment 491 486 NOP  <||@
  Comment 492 488 NOP  <||@
  Comment 493 490 NOP  <||@
  Comment 494 492 NOP  <||@
  Comment 495 494 rax|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 500 496 rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD  <||@
  Comment 508 498 MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD  <||@
  Comment 516 500 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3  <||@
  Comment 523 502 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 528 504 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 533 block B24 loop 2 depth 1 header:25|LoopBegin  <||@
  Comment 533 518 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 520 NOP  <||@
  Comment 545 522 NOP  <||@
  Comment 546 524 NOP  <||@
  Comment 547 526 NOP  <||@
  Comment 548 528 NOP  <||@
  Comment 549 530 NOP  <||@
  Comment 550 532 NOP  <||@
  Comment 551 534 rsi|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 556 536 rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 560 538 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 562 540 MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 566 542 JUMP ~outgoingValues: [] destination: B24 -> B23  <||@
  Comment 566 block B23 loop 2 depth 1 header:25|LoopBegin  <||@
  Comment 566 506 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 566 508 NOP  <||@
  Comment 567 510 NOP  <||@
  Comment 568 512 NOP  <||@
  Comment 569 514 NOP  <||@
  Comment 570 516 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null  <||@
  Comment 575 block B25 null  <||@
  Comment 575 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 575 546 NOP  <||@
  Comment 576 548 NOP  <||@
  Comment 577 550 NOP  <||@
  Comment 578 552 NOP  <||@
  Comment 579 554 NOP  <||@
  Comment 580 556 NOP  <||@
  Comment 581 558 rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD  <||@
  Comment 585 560 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 590 block B27 loop 3 depth 1 header:422|LoopBegin  <||@
  Comment 590 574 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 608 576 NOP  <||@
  Comment 609 578 NOP  <||@
  Comment 610 580 NOP  <||@
  Comment 611 582 NOP  <||@
  Comment 612 584 NOP  <||@
  Comment 613 586 NOP  <||@
  Comment 614 588 NOP  <||@
  Comment 615 590 NOP  <||@
  Comment 616 592 NOP  <||@
  Comment 617 594 NOP  <||@
  Comment 618 596 NOP  <||@
  Comment 619 598 NOP  <||@
  Comment 620 600 NOP  <||@
  Comment 621 602 NOP  <||@
  Comment 622 604 NOP  <||@
  Comment 623 606 NOP  <||@
  Comment 624 608 NOP  <||@
  Comment 625 610 NOP  <||@
  Comment 626 612 NOP  <||@
  Comment 627 614 NOP  <||@
  Comment 628 616 NOP  <||@
  Comment 629 618 NOP  <||@
  Comment 630 620 NOP  <||@
  Comment 631 622 NOP  <||@
  Comment 632 624 NOP  <||@
  Comment 633 626 rbp|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 638 628 rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 642 630 r13|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 648 632 MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 653 634 rbp|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 658 636 rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 663 638 r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD  <||@
  Comment 667 640 MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 672 642 rbp|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 677 644 rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 682 646 r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD  <||@
  Comment 686 648 MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 691 650 rbp|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 696 652 rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 701 654 rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD  <||@
  Comment 704 656 MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 708 658 JUMP ~outgoingValues: [] destination: B27 -> B26  <||@
  Comment 708 block B26 loop 3 depth 1 header:422|LoopBegin  <||@
  Comment 708 562 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 708 564 NOP  <||@
  Comment 709 566 NOP  <||@
  Comment 710 568 NOP  <||@
  Comment 711 570 NOP  <||@
  Comment 712 572 CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 716 block B28 null  <||@
  Comment 716 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 716 662 NOP  <||@
  Comment 717 664 NOP  <||@
  Comment 718 666 NOP  <||@
  Comment 719 668 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 724 block B30 loop 4 depth 1 header:448|LoopBegin  <||@
  Comment 724 682 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 684 NOP  <||@
  Comment 737 686 NOP  <||@
  Comment 738 688 NOP  <||@
  Comment 739 690 NOP  <||@
  Comment 740 692 NOP  <||@
  Comment 741 694 NOP  <||@
  Comment 742 696 NOP  <||@
  Comment 743 698 rsi|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 748 700 rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 752 702 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 754 704 MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 758 706 JUMP ~outgoingValues: [] destination: B30 -> B29  <||@
  Comment 758 block B29 loop 4 depth 1 header:448|LoopBegin  <||@
  Comment 758 670 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 758 672 NOP  <||@
  Comment 759 674 NOP  <||@
  Comment 760 676 NOP  <||@
  Comment 761 678 NOP  <||@
  Comment 762 680 CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 767 block B31 null  <||@
  Comment 767 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 767 710 NOP  <||@
  Comment 768 712 NOP  <||@
  Comment 769 714 NOP  <||@
  Comment 770 716 NOP  <||@
  Comment 771 718 NOP  <||@
  Comment 772 720 NOP  <||@
  Comment 773 722 NOP  <||@
  Comment 774 724 NOP  <||@
  Comment 775 726 NOP  <||@
  Comment 776 728 NOP  <||@
  Comment 777 730 NOP  <||@
  Comment 778 732 NOP  <||@
  Comment 779 734 NOP  <||@
  Comment 780 736 NOP  <||@
  Comment 781 738 rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD  <||@
  Comment 785 740 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 787 742 rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD  <||@
  Comment 791 744 r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 794 746 r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD  <||@
  Comment 800 748 r14|QWORD = DEC value: r14|QWORD size: QWORD  <||@
  Comment 803 750 CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD  <||@
  Comment 812 block B32 null  <||@
  Comment 812 752 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 812 754 NOP  <||@
  Comment 813 756 NOP  <||@
  Comment 814 758 NOP  <||@
  Comment 815 760 NOP  <||@
  Comment 816 762 NOP  <||@
  Comment 817 764 NOP  <||@
  Comment 818 766 CMP x: r8|DWORD y: 5 size: DWORD  <||@
  Comment 822 768 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 827 770 rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<|  <||@
  Comment 830 772 rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 833 774 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 833 block B33 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 833 776 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 848 778 NOP  <||@
  Comment 849 780 NOP  <||@
  Comment 850 782 NOP  <||@
  Comment 851 784 NOP  <||@
  Comment 852 786 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null  <||@
  Comment 861 block B34 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 861 788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 861 790 NOP  <||@
  Comment 862 792 NOP  <||@
  Comment 863 794 NOP  <||@
  Comment 864 796 NOP  <||@
  Comment 865 798 NOP  <||@
  Comment 866 800 r13|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 872 802 CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD  <||@
  Comment 881 block B45 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 881 984 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 881 986 NOP  <||@
  Comment 882 988 NOP  <||@
  Comment 883 990 NOP  <||@
  Comment 884 992 NOP  <||@
  Comment 885 994 NOP  <||@
  Comment 886 996 r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 892 998 CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD  <||@
  Comment 901 block B46 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 901 1000 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 901 1002 NOP  <||@
  Comment 902 1004 NOP  <||@
  Comment 903 1006 NOP  <||@
  Comment 904 1008 NOP  <||@
  Comment 905 1010 NOP  <||@
  Comment 906 1012 r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 911 1014 CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD  <||@
  Comment 922 block B48 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 922 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 922 1034 NOP  <||@
  Comment 923 1036 NOP  <||@
  Comment 924 1038 NOP  <||@
  Comment 925 1040 NOP  <||@
  Comment 926 1042 NOP  <||@
  Comment 927 1044 SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66]  <||@
  Comment 934 [rcx:0, rdx:0, rdi:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66, duringCall: false, rethrow: false]
              |0                  |1             |2         |3          |4  |5             |6            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |rbx|DWORD  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 934 {infopoint: SAFEPOINT}  <||@
  Comment 934 POLL_FAR  <||@
  Comment 937 1046 rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 940 1048 JUMP ~outgoingValues: [] destination: B48 -> B33  <||@
  Comment 942 block B35 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 942 804 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 942 806 NOP  <||@
  Comment 943 808 NOP  <||@
  Comment 944 810 NOP  <||@
  Comment 945 812 NOP  <||@
  Comment 946 814 MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 950 816 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 953 818 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 958 block B37 loop 6 depth 2 outer 5 header:76|LoopBegin  <||@
  Comment 958 832 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 960 834 NOP  <||@
  Comment 961 836 NOP  <||@
  Comment 962 838 NOP  <||@
  Comment 963 840 NOP  <||@
  Comment 964 842 NOP  <||@
  Comment 965 844 r10|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 968 846 MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 973 848 JUMP ~outgoingValues: [] destination: B37 -> B36  <||@
  Comment 973 block B36 loop 6 depth 2 outer 5 header:76|LoopBegin  <||@
  Comment 973 820 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 973 822 NOP  <||@
  Comment 974 824 NOP  <||@
  Comment 975 826 NOP  <||@
  Comment 976 828 NOP  <||@
  Comment 977 830 CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD  <||@
  Comment 982 block B38 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 982 850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 982 852 NOP  <||@
  Comment 983 854 NOP  <||@
  Comment 984 856 NOP  <||@
  Comment 985 858 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 990 block B40 loop 7 depth 2 outer 5 header:476|LoopBegin  <||@
  Comment 990 872 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 992 874 NOP  <||@
  Comment 993 876 NOP  <||@
  Comment 994 878 NOP  <||@
  Comment 995 880 NOP  <||@
  Comment 996 882 NOP  <||@
  Comment 997 884 NOP  <||@
  Comment 998 886 NOP  <||@
  Comment 999 888 NOP  <||@
  Comment 1000 890 NOP  <||@
  Comment 1001 892 NOP  <||@
  Comment 1002 894 NOP  <||@
  Comment 1003 896 NOP  <||@
  Comment 1004 898 NOP  <||@
  Comment 1005 900 NOP  <||@
  Comment 1006 902 NOP  <||@
  Comment 1007 904 NOP  <||@
  Comment 1008 906 NOP  <||@
  Comment 1009 908 r14|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 1015 910 MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1020 912 r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD  <||@
  Comment 1024 914 MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1029 916 r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD  <||@
  Comment 1033 918 MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1038 920 r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD  <||@
  Comment 1042 922 MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1047 924 JUMP ~outgoingValues: [] destination: B40 -> B39  <||@
  Comment 1047 block B39 loop 7 depth 2 outer 5 header:476|LoopBegin  <||@
  Comment 1047 860 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1047 862 NOP  <||@
  Comment 1048 864 NOP  <||@
  Comment 1049 866 NOP  <||@
  Comment 1050 868 NOP  <||@
  Comment 1051 870 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null  <||@
  Comment 1057 block B41 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 1057 926 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1057 928 NOP  <||@
  Comment 1058 930 NOP  <||@
  Comment 1059 932 NOP  <||@
  Comment 1060 934 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 1065 block B43 loop 8 depth 2 outer 5 header:496|LoopBegin  <||@
  Comment 1065 948 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1088 950 NOP  <||@
  Comment 1089 952 NOP  <||@
  Comment 1090 954 NOP  <||@
  Comment 1091 956 NOP  <||@
  Comment 1092 958 NOP  <||@
  Comment 1093 960 r10|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 1096 962 MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1101 964 JUMP ~outgoingValues: [] destination: B43 -> B42  <||@
  Comment 1101 block B42 loop 8 depth 2 outer 5 header:496|LoopBegin  <||@
  Comment 1101 936 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1101 938 NOP  <||@
  Comment 1102 940 NOP  <||@
  Comment 1103 942 NOP  <||@
  Comment 1104 944 NOP  <||@
  Comment 1105 946 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1111 block B44 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 1111 966 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1111 968 NOP  <||@
  Comment 1112 970 NOP  <||@
  Comment 1113 972 NOP  <||@
  Comment 1114 974 NOP  <||@
  Comment 1115 976 NOP  <||@
  Comment 1116 978 SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125]  <||@
  Comment 1123 [rcx:0, rdx:0, rdi:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125, duringCall: false, rethrow: false]
              |0                  |1             |2         |3          |4  |5             |6            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |rbx|DWORD  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1123 {infopoint: SAFEPOINT}  <||@
  Comment 1123 POLL_FAR  <||@
  Comment 1126 980 rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1129 982 JUMP ~outgoingValues: [] destination: B44 -> B33  <||@
  Comment 1134 block B49 null  <||@
  Comment 1134 1050 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1134 1052 NOP  <||@
  Comment 1135 1054 NOP  <||@
  Comment 1136 1056 NOP  <||@
  Comment 1137 1058 NOP  <||@
  Comment 1138 1060 NOP  <||@
  Comment 1139 1062 NOP  <||@
  Comment 1140 1064 NOP  <||@
  Comment 1141 1066 NOP  <||@
  Comment 1142 1068 NOP  <||@
  Comment 1143 1070 MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD  <||@
  Comment 1152 1072 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1159 1074 rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD  <||@
  Comment 1163 1076 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 1176 block B51 null  <||@
  Comment 1176 1108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1176 1110 NOP  <||@
  Comment 1177 1112 NOP  <||@
  Comment 1178 1114 NOP  <||@
  Comment 1179 1116 NOP  <||@
  Comment 1180 1118 NOP  <||@
  Comment 1181 1120 NOP  <||@
  Comment 1182 1122 NOP  <||@
  Comment 1183 1124 NOP  <||@
  Comment 1184 1126 NOP  <||@
  Comment 1185 1128 NOP  <||@
  Comment 1186 1130 NOP  <||@
  Comment 1187 1132 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1194 1134 AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0  <||@
  Comment 1201 1136 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1208 1138 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed}  <||@
  Comment 1208 {meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed}}  <||@
  Comment 1215 1140 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1222 1142 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1230 1144 MOV x: [rax|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 1238 1146 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1238 1148 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 1150 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1242 block B52 null  <||@
  Comment 1242 1152 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1242 1154 NOP  <||@
  Comment 1243 1156 NOP  <||@
  Comment 1244 1158 NOP  <||@
  Comment 1245 1160 NOP  <||@
  Comment 1246 1162 NOP  <||@
  Comment 1247 1164 NOP  <||@
  Comment 1248 1166 NOP  <||@
  Comment 1249 1168 NOP  <||@
  Comment 1250 1170 NOP  <||@
  Comment 1251 1172 NOP  <||@
  Comment 1252 1174 NOP  <||@
  Comment 1253 1176 NOP  <||@
  Comment 1254 1178 NOP  <||@
  Comment 1255 1180 NOP  <||@
  Comment 1256 1182 NOP  <||@
  Comment 1257 1184 rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3  <||@
  Comment 1261 1186 MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 1264 1188 rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3  <||@
  Comment 1268 1190 MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD  <||@
  Comment 1271 1192 MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 1275 1194 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1279 1196 MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1282 1198 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1291 POLL_RETURN_FAR  <||@
  Comment 1308 block B2 null  <||@
  Comment 1308 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1308 60 NOP  <||@
  Comment 1309 62 NOP  <||@
  Comment 1310 64 NOP  <||@
  Comment 1311 66 JUMP ~outgoingValues: [] destination: B2 -> B5  <||@
  Comment 1316 block B17 null  <||@
  Comment 1316 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1316 356 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1316 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1326 358 NOP  <||@
  Comment 1327 360 NOP  <||@
  Comment 1328 362 NOP  <||@
  Comment 1329 364 NOP  <||@
  Comment 1330 366 NOP  <||@
  Comment 1331 368 NOP  <||@
  Comment 1332 370 NOP  <||@
  Comment 1333 372 NOP  <||@
  Comment 1334 374 NOP  <||@
  Comment 1335 376 rdx|DWORD = MOVE input: int[128|0x80]  <||@
  Comment 1340 378 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1340 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1345 [rcx:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1353 380 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1353 [rax:0, rcx:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1353 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1355 384 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 1360 block B8 null  <||@
  Comment 1360 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1360 156 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1360 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1370 158 NOP  <||@
  Comment 1371 160 NOP  <||@
  Comment 1372 162 NOP  <||@
  Comment 1373 164 NOP  <||@
  Comment 1374 166 NOP  <||@
  Comment 1375 168 NOP  <||@
  Comment 1376 170 NOP  <||@
  Comment 1377 172 NOP  <||@
  Comment 1378 174 NOP  <||@
  Comment 1379 176 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1382 178 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1382 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1387 [r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1395 180 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1395 [rax:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1395 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1397 182 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1400 184 JUMP ~outgoingValues: [] destination: B8 -> B16  <||@
  Comment 1405 block B50 null  <||@
  Comment 1405 1078 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1405 1080 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1409 1082 NOP  <||@
  Comment 1410 1084 NOP  <||@
  Comment 1411 1086 NOP  <||@
  Comment 1412 1088 NOP  <||@
  Comment 1413 1090 NOP  <||@
  Comment 1414 1092 NOP  <||@
  Comment 1415 1094 NOP  <||@
  Comment 1416 1096 NOP  <||@
  Comment 1417 1098 NOP  <||@
  Comment 1418 1100 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>}  <||@
  Comment 1418 {meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>}}  <||@
  Comment 1428 1102 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138]  <||@
  Comment 1428 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1433 [rcx:0, rdx:0, rdi:0, r10:0, r11:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1441 1104 NULLCHECK address: [rax|QWORD[.]] state [bci:138]  <||@
  Comment 1441 [rax:0, rcx:0, rdx:0, rdi:0, r10:0, r11:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1441 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1443 1106 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 1448 block B14 null  <||@
  Comment 1448 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1448 292 NOP  <||@
  Comment 1449 294 NOP  <||@
  Comment 1450 296 NOP  <||@
  Comment 1451 298 NOP  <||@
  Comment 1452 300 NOP  <||@
  Comment 1453 302 NOP  <||@
  Comment 1454 304 NOP  <||@
  Comment 1455 306 NOP  <||@
  Comment 1456 308 NOP  <||@
  Comment 1457 310 ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1467 312 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 1472 block B53 null  <||@
  Comment 1472 1200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1472 1202 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1476 1204 NOP  <||@
  Comment 1477 1206 NOP  <||@
  Comment 1478 1208 NOP  <||@
  Comment 1479 1210 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1486 1212 r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5]  <||@
  Comment 1492 1214 JUMP ~outgoingValues: [] destination: B53 -> B54  <||@
  Comment 1492 block B54 null  <||@
  Comment 1492 1216 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1492 1218 NOP  <||@
  Comment 1493 1220 NOP  <||@
  Comment 1494 1222 NOP  <||@
  Comment 1495 1224 NOP  <||@
  Comment 1496 1226 NOP  <||@
  Comment 1497 1228 NOP  <||@
  Comment 1498 1230 NOP  <||@
  Comment 1499 1232 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1506 1234 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 1513 1236 DEOPT info [bci:66]  <||@
  Comment 1513 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1518 [rcx:0, rdx:0, rdi:0, r10:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66, duringCall: false, rethrow: false]
              |0             |1             |2         |3          |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |rbx|DWORD  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1526 block B56 null  <||@
  Comment 1526 1260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1526 1262 NOP  <||@
  Comment 1527 1264 NOP  <||@
  Comment 1528 1266 NOP  <||@
  Comment 1529 1268 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1536 1270 r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5]  <||@
  Comment 1542 1272 JUMP ~outgoingValues: [] destination: B56 -> B58  <||@
  Comment 1542 block B58 null  <||@
  Comment 1542 1288 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1542 1290 NOP  <||@
  Comment 1543 1292 NOP  <||@
  Comment 1544 1294 NOP  <||@
  Comment 1545 1296 NOP  <||@
  Comment 1546 1298 NOP  <||@
  Comment 1547 1300 NOP  <||@
  Comment 1548 1302 NOP  <||@
  Comment 1549 1304 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1556 1306 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1563 1308 DEOPT info [bci:0]  <||@
  Comment 1563 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1568 [r10:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1576 block B55 null  <||@
  Comment 1576 1238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1576 1240 NOP  <||@
  Comment 1577 1242 NOP  <||@
  Comment 1578 1244 NOP  <||@
  Comment 1579 1246 NOP  <||@
  Comment 1580 1248 NOP  <||@
  Comment 1581 1250 NOP  <||@
  Comment 1582 1252 NOP  <||@
  Comment 1583 1254 MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD  <||@
  Comment 1594 1256 MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD  <||@
  Comment 1605 1258 DEOPT info [bci:64]  <||@
  Comment 1605 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1610 [rcx:0, rdx:0, rdi:0, r10:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1618 block B47 null  <||@
  Comment 1618 1016 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1618 1018 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1622 1020 NOP  <||@
  Comment 1623 1022 NOP  <||@
  Comment 1624 1024 NOP  <||@
  Comment 1625 1026 r9|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 1632 1028 r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed]  <||@
  Comment 1638 1030 JUMP ~outgoingValues: [] destination: B47 -> B54  <||@
  Comment 1643 block B57 null  <||@
  Comment 1643 1274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1643 1276 NOP  <||@
  Comment 1644 1278 NOP  <||@
  Comment 1645 1280 NOP  <||@
  Comment 1646 1282 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1653 1284 r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd]  <||@
  Comment 1659 1286 JUMP ~outgoingValues: [] destination: B57 -> B58  <||@
  Comment 1661 block B6 null  <||@
  Comment 1661 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1661 104 NOP  <||@
  Comment 1662 106 NOP  <||@
  Comment 1663 108 NOP  <||@
  Comment 1664 110 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1671 112 r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed]  <||@
  Comment 1677 114 JUMP ~outgoingValues: [] destination: B6 -> B58  <||@
  Comment 1687 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1712 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1740 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1745 [r10:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1775 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1780 [r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1810 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1815 [rax:0, rcx:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1845 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1850 [rax:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1880 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1885 [rax:0, rcx:0, rdx:0, rdi:0, r10:0, r11:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1893 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1893 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1899 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-11338[java.util.regex.Pattern$BnM.optimize(Pattern$Node)]"
  method "HotSpotCompilation-11338[java.util.regex.Pattern$BnM.optimize(Pattern$Node)]"
  date 1724269749419
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aeaff40 89842400c0feff4883ec189041817f20000000000f85780600009090909090909048896c24104c8bd64c89142441817a08d89235000f8530060000909090909090909090458b5a10468b04dd0c000000458bc841ffc94963c1418bd8483bd80f87b7040000909090904183f8020f8383050000909090909090904183f8040f82f9050000909090909090909090909090498b97b8010000488bc348c1e002488d40174883e0f8488bf04803f2493bb7c80100000f879704000090909090909090909090909090904989b7b80100000f188410000100000f188410400100000f1884108001000048c70201000000c74208a02600004489420c488d48f04881f9000800000f839f04000090909048c7c610000000e91b0000000f1f8400000000009090909090909048c7043200000000488d760890909090483bc677e490909090909090488bca9090909090909090498b87b8010000488db010020000493bb7c80100000f87bb030000909090909090909090904989b7b80100000f1880100300000f1880500300000f18809003000048c70001000000c74008a0260000c7400c8000000048c7c610000000e9230000006666660f1f84000000000066666690909090909090909048c7043000000000488d7608909090904881fe1002000072e090909090488bf89090909090909090b87f000000422304dd10000000c744871001000000418bd348c1e203b801000000e9210000006666660f1f84000000000090909090909090be7f00000023748210ffc08944b7109090909083f8027ce1909090909090418d70fce9760000006666660f1f8400000000006666669066669090909090909090909090909090909090909090909090909090bd7f000000236c8210448be841ffc544896caf10bd7f00000042236caa10448d680244896caf10bd7f00000042236caa10448d680344896caf10bd7f00000042236caa108d40048944af10909090903bf07f94909090e9220000000f1f8400000000006666669090909090909090be7f00000023748210ffc08944b71090909090443bc07fe19090909090909090909090909090418d40fe8bf0418d68fd448bed4c8bf64d2bf549ffce493bde0f86fc0200009090909090904183f805bb010000000f42eb418bd86666660f1f840000000000666666909090909083fb010f8c110100009090909090448beb41ffcd413bd90f8f3d0000009090909090458bf1442bf3453bc60f863b0200009090909090468b548a10463b54b2100f84b802000090909090904d8b9758040000418502418bddeba290909090895cb110448bd0e90f0000006690909090909041ffca42895c911090909090413bea7eea909090e93900000066909090909090909090909090909090909090458bf241ffce42895cb110458d72fe42895cb110458d72fd42895cb110458d52fc42895c9110909090904183fa057dbf909090e9240000006666660f1f840000000000666666900f1f840000000000909090909041ffca42895c9110909090904183fa017de990909090904d8b9758040000418502418bdde9e2feffff90909090909090909042c744891001000000498b87b8010000488d7020493bb7c80100000f87e500000090909090909090909090904989b7b80100000f18802001000048c70001000000c7400838631c01c7400c0000000048c740100000000048c74018000000004c8b142490909090909090909090909090909048c1e90389481848c1ef0389781444895810418b720c89700c488b6c24104883c418493ba7500400000f878a010000c5f877c3909090e952fbffff48bea026002b787f0000909090909090909090ba80000000e87fe7a1fe0f1f8400000000008500e994fcffff48bea026002b787f0000909090909090909090418bd0e855e7a1fe0f1f8400000000008500488bc8e9c9fbffff4c8b142490909090909090909048be38631c2c787f0000e8a77da2fe0f1f8400000000008500e932ffffff909090909090909090488d7a104833c0f348aae97ffbffff4c8b142490909049c7c10000000041bbe506ffff9090909090909045899f840400004d898f90040000e84cac8dfe0f1f84000000000090909049c7c0980c000041bbe52fffff9090909090909045899f840400004d898790040000e81aac8dfe0f1f8400000000009090909090909041c78784040000e519ffff49c78790040000980f0000e8f0ab8dfe0f1f8400000000004c8b142490909049c7c19407000041bbed71feffe969ffffff90909049c7c01400000041bbcd4bffffeb8990909049c7c01405000041bbed7bfeffe974ffffff48896c2410e844ac8bfee979f9fffff4488d0d62feffff49898f68040000e90bba8dfef441c78784040000cd4bffff49c7879004000014000000e869ab8dfe0f1f84000000000041c78784040000f545ffff49c7879004000000000000e846ab8dfe0f1f84000000000041c787840400008f71fcff49c7879004000000000000e823ab8dfe0f1f84000000000041c787840400008ffbfcff49c7879004000000000000e800ab8dfe0f1f84000000000041c787840400008f3afcff49c7879004000000000000e8ddaa8dfe0f1f840000000000e8564ca1fef4e870a88dfef4f4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 38 18 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e37c62d slotKind: QWORD  <||@
  Comment 38 20 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 41 22 stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 45 24 CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B57 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} state [bci:0]  <||@
  Comment 45 [r10:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 45 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 45 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}}  <||@
  Comment 59 block B1 null  <||@
  Comment 59 26 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 59 28 NOP  <||@
  Comment 60 30 NOP  <||@
  Comment 61 32 NOP  <||@
  Comment 62 34 NOP  <||@
  Comment 63 36 NOP  <||@
  Comment 64 38 NOP  <||@
  Comment 65 40 NOP  <||@
  Comment 66 42 NOP  <||@
  Comment 67 44 NOP  <||@
  Comment 68 46 r11|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 72 48 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 72 [r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 72 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 50 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 86 52 rax|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 89 54 rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 92 56 CMPBRANCH (x: rbx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 101 block B3 null  <||@
  Comment 101 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 101 70 NOP  <||@
  Comment 102 72 NOP  <||@
  Comment 103 74 NOP  <||@
  Comment 104 76 NOP  <||@
  Comment 105 78 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B56 y: 2 size: DWORD inlinedY: null  <||@
  Comment 115 block B4 null  <||@
  Comment 115 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 82 NOP  <||@
  Comment 116 84 NOP  <||@
  Comment 117 86 NOP  <||@
  Comment 118 88 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 118 block B5 null  <||@
  Comment 118 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 118 92 NOP  <||@
  Comment 119 94 NOP  <||@
  Comment 120 96 NOP  <||@
  Comment 121 98 NOP  <||@
  Comment 122 100 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 4 size: DWORD inlinedY: null  <||@
  Comment 132 block B7 null  <||@
  Comment 132 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 118 NOP  <||@
  Comment 133 120 NOP  <||@
  Comment 134 122 NOP  <||@
  Comment 135 124 NOP  <||@
  Comment 136 126 NOP  <||@
  Comment 137 128 NOP  <||@
  Comment 138 130 NOP  <||@
  Comment 139 132 NOP  <||@
  Comment 140 134 NOP  <||@
  Comment 141 136 NOP  <||@
  Comment 142 138 NOP  <||@
  Comment 143 140 NOP  <||@
  Comment 144 142 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 151 144 rax|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD  <||@
  Comment 158 146 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 162 148 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 166 150 rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 172 152 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD  <||@
  Comment 185 block B9 null  <||@
  Comment 185 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 185 188 NOP  <||@
  Comment 186 190 NOP  <||@
  Comment 187 192 NOP  <||@
  Comment 188 194 NOP  <||@
  Comment 189 196 NOP  <||@
  Comment 190 198 NOP  <||@
  Comment 191 200 NOP  <||@
  Comment 192 202 NOP  <||@
  Comment 193 204 NOP  <||@
  Comment 194 206 NOP  <||@
  Comment 195 208 NOP  <||@
  Comment 196 210 NOP  <||@
  Comment 197 212 NOP  <||@
  Comment 198 214 NOP  <||@
  Comment 199 216 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 206 218 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 214 220 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 222 222 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 230 224 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 237 226 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 237 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 244 228 MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 248 230 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 252 232 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 265 block B10 null  <||@
  Comment 265 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 236 NOP  <||@
  Comment 266 238 NOP  <||@
  Comment 267 240 NOP  <||@
  Comment 268 242 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 275 244 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 280 block B12 loop 0 depth 1 header:718|LoopBegin  <||@
  Comment 280 258 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 260 NOP  <||@
  Comment 289 262 NOP  <||@
  Comment 290 264 NOP  <||@
  Comment 291 266 NOP  <||@
  Comment 292 268 NOP  <||@
  Comment 293 270 NOP  <||@
  Comment 294 272 NOP  <||@
  Comment 295 274 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 276 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 307 278 JUMP ~outgoingValues: [] destination: B12 -> B11  <||@
  Comment 307 block B11 loop 0 depth 1 header:718|LoopBegin  <||@
  Comment 307 246 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 248 NOP  <||@
  Comment 308 250 NOP  <||@
  Comment 309 252 NOP  <||@
  Comment 310 254 NOP  <||@
  Comment 311 256 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD  <||@
  Comment 316 block B13 null  <||@
  Comment 316 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 282 NOP  <||@
  Comment 317 284 NOP  <||@
  Comment 318 286 NOP  <||@
  Comment 319 288 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 319 block B15 null  <||@
  Comment 319 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 316 NOP  <||@
  Comment 320 318 NOP  <||@
  Comment 321 320 NOP  <||@
  Comment 322 322 NOP  <||@
  Comment 323 324 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 323 326 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 326 328 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 326 block B16 null  <||@
  Comment 326 330 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 326 332 NOP  <||@
  Comment 327 334 NOP  <||@
  Comment 328 336 NOP  <||@
  Comment 329 338 NOP  <||@
  Comment 330 340 NOP  <||@
  Comment 331 342 NOP  <||@
  Comment 332 344 NOP  <||@
  Comment 333 346 NOP  <||@
  Comment 334 348 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 341 350 rsi|QWORD = LEA address: [rax|QWORD + 528] size: QWORD  <||@
  Comment 348 352 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 361 block B18 null  <||@
  Comment 361 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 388 NOP  <||@
  Comment 362 390 NOP  <||@
  Comment 363 392 NOP  <||@
  Comment 364 394 NOP  <||@
  Comment 365 396 NOP  <||@
  Comment 366 398 NOP  <||@
  Comment 367 400 NOP  <||@
  Comment 368 402 NOP  <||@
  Comment 369 404 NOP  <||@
  Comment 370 406 NOP  <||@
  Comment 371 408 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 378 410 AMD64PREFETCH ~address: [rax|QWORD + 784] instr: 0  <||@
  Comment 385 412 AMD64PREFETCH ~address: [rax|QWORD + 848] instr: 0  <||@
  Comment 392 414 AMD64PREFETCH ~address: [rax|QWORD + 912] instr: 0  <||@
  Comment 399 416 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 406 418 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 406 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 413 420 MOV x: [rax|QWORD + 12] y: 128 size: DWORD  <||@
  Comment 420 422 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 427 424 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 432 block B20 loop 1 depth 1 header:800|LoopBegin  <||@
  Comment 432 438 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 448 440 NOP  <||@
  Comment 449 442 NOP  <||@
  Comment 450 444 NOP  <||@
  Comment 451 446 NOP  <||@
  Comment 452 448 NOP  <||@
  Comment 453 450 NOP  <||@
  Comment 454 452 NOP  <||@
  Comment 455 454 MOV x: [rax|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 463 456 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 467 458 JUMP ~outgoingValues: [] destination: B20 -> B19  <||@
  Comment 467 block B19 loop 1 depth 1 header:800|LoopBegin  <||@
  Comment 467 426 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 467 428 NOP  <||@
  Comment 468 430 NOP  <||@
  Comment 469 432 NOP  <||@
  Comment 470 434 NOP  <||@
  Comment 471 436 CMPCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 528 size: QWORD inlinedY: null  <||@
  Comment 480 block B21 null  <||@
  Comment 480 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 480 462 NOP  <||@
  Comment 481 464 NOP  <||@
  Comment 482 466 NOP  <||@
  Comment 483 468 NOP  <||@
  Comment 484 470 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 484 474 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 484 block B22 null  <||@
  Comment 484 476 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 484 472 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 487 478 NOP  <||@
  Comment 488 480 NOP  <||@
  Comment 489 482 NOP  <||@
  Comment 490 484 NOP  <||@
  Comment 491 486 NOP  <||@
  Comment 492 488 NOP  <||@
  Comment 493 490 NOP  <||@
  Comment 494 492 NOP  <||@
  Comment 495 494 rax|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 500 496 rax|DWORD = AND (x: rax|DWORD, ~y: [r11|DWORD[_] * 8 + 16]) size: DWORD  <||@
  Comment 508 498 MOV x: [rdi|QWORD[.] + rax|DWORD * 4 + 16] y: 1 size: DWORD  <||@
  Comment 516 500 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3  <||@
  Comment 523 502 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 528 504 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 533 block B24 loop 2 depth 1 header:25|LoopBegin  <||@
  Comment 533 518 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 520 NOP  <||@
  Comment 545 522 NOP  <||@
  Comment 546 524 NOP  <||@
  Comment 547 526 NOP  <||@
  Comment 548 528 NOP  <||@
  Comment 549 530 NOP  <||@
  Comment 550 532 NOP  <||@
  Comment 551 534 rsi|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 556 536 rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 560 538 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 562 540 MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 566 542 JUMP ~outgoingValues: [] destination: B24 -> B23  <||@
  Comment 566 block B23 loop 2 depth 1 header:25|LoopBegin  <||@
  Comment 566 506 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 566 508 NOP  <||@
  Comment 567 510 NOP  <||@
  Comment 568 512 NOP  <||@
  Comment 569 514 NOP  <||@
  Comment 570 516 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2 size: DWORD inlinedY: null  <||@
  Comment 575 block B25 null  <||@
  Comment 575 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 575 546 NOP  <||@
  Comment 576 548 NOP  <||@
  Comment 577 550 NOP  <||@
  Comment 578 552 NOP  <||@
  Comment 579 554 NOP  <||@
  Comment 580 556 NOP  <||@
  Comment 581 558 rsi|DWORD = LEA address: [r8|DWORD - 4] size: DWORD  <||@
  Comment 585 560 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 590 block B27 loop 3 depth 1 header:422|LoopBegin  <||@
  Comment 590 574 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 608 576 NOP  <||@
  Comment 609 578 NOP  <||@
  Comment 610 580 NOP  <||@
  Comment 611 582 NOP  <||@
  Comment 612 584 NOP  <||@
  Comment 613 586 NOP  <||@
  Comment 614 588 NOP  <||@
  Comment 615 590 NOP  <||@
  Comment 616 592 NOP  <||@
  Comment 617 594 NOP  <||@
  Comment 618 596 NOP  <||@
  Comment 619 598 NOP  <||@
  Comment 620 600 NOP  <||@
  Comment 621 602 NOP  <||@
  Comment 622 604 NOP  <||@
  Comment 623 606 NOP  <||@
  Comment 624 608 NOP  <||@
  Comment 625 610 NOP  <||@
  Comment 626 612 NOP  <||@
  Comment 627 614 NOP  <||@
  Comment 628 616 NOP  <||@
  Comment 629 618 NOP  <||@
  Comment 630 620 NOP  <||@
  Comment 631 622 NOP  <||@
  Comment 632 624 NOP  <||@
  Comment 633 626 rbp|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 638 628 rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 642 630 r13|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 648 632 MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 653 634 rbp|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 658 636 rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 663 638 r13|DWORD = LEA address: [rax|DWORD + 2] size: DWORD  <||@
  Comment 667 640 MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 672 642 rbp|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 677 644 rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 682 646 r13|DWORD = LEA address: [rax|DWORD + 3] size: DWORD  <||@
  Comment 686 648 MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 691 650 rbp|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 696 652 rbp|DWORD = AND (x: rbp|DWORD, ~y: [rdx|QWORD[.] + r13|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 701 654 rax|DWORD = LEA address: [rax|DWORD + 4] size: DWORD  <||@
  Comment 704 656 MOV (x: [rdi|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 708 658 JUMP ~outgoingValues: [] destination: B27 -> B26  <||@
  Comment 708 block B26 loop 3 depth 1 header:422|LoopBegin  <||@
  Comment 708 562 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 708 564 NOP  <||@
  Comment 709 566 NOP  <||@
  Comment 710 568 NOP  <||@
  Comment 711 570 NOP  <||@
  Comment 712 572 CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 716 block B28 null  <||@
  Comment 716 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 716 662 NOP  <||@
  Comment 717 664 NOP  <||@
  Comment 718 666 NOP  <||@
  Comment 719 668 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 724 block B30 loop 4 depth 1 header:448|LoopBegin  <||@
  Comment 724 682 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 684 NOP  <||@
  Comment 737 686 NOP  <||@
  Comment 738 688 NOP  <||@
  Comment 739 690 NOP  <||@
  Comment 740 692 NOP  <||@
  Comment 741 694 NOP  <||@
  Comment 742 696 NOP  <||@
  Comment 743 698 rsi|DWORD = MOVE input: int[127|0x7f]  <||@
  Comment 748 700 rsi|DWORD = AND (x: rsi|DWORD, ~y: [rdx|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 752 702 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 754 704 MOV (x: [rdi|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 758 706 JUMP ~outgoingValues: [] destination: B30 -> B29  <||@
  Comment 758 block B29 loop 4 depth 1 header:448|LoopBegin  <||@
  Comment 758 670 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 758 672 NOP  <||@
  Comment 759 674 NOP  <||@
  Comment 760 676 NOP  <||@
  Comment 761 678 NOP  <||@
  Comment 762 680 CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 767 block B31 null  <||@
  Comment 767 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 767 710 NOP  <||@
  Comment 768 712 NOP  <||@
  Comment 769 714 NOP  <||@
  Comment 770 716 NOP  <||@
  Comment 771 718 NOP  <||@
  Comment 772 720 NOP  <||@
  Comment 773 722 NOP  <||@
  Comment 774 724 NOP  <||@
  Comment 775 726 NOP  <||@
  Comment 776 728 NOP  <||@
  Comment 777 730 NOP  <||@
  Comment 778 732 NOP  <||@
  Comment 779 734 NOP  <||@
  Comment 780 736 NOP  <||@
  Comment 781 738 rax|DWORD = LEA address: [r8|DWORD - 2] size: DWORD  <||@
  Comment 785 740 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 787 742 rbp|DWORD = LEA address: [r8|DWORD - 3] size: DWORD  <||@
  Comment 791 744 r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 794 746 r14|QWORD = SUB (x: rsi|QWORD, ~y: r13|QWORD) size: QWORD  <||@
  Comment 800 748 r14|QWORD = DEC value: r14|QWORD size: QWORD  <||@
  Comment 803 750 CMPBRANCH (x: rbx|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B55 size: QWORD  <||@
  Comment 812 block B32 null  <||@
  Comment 812 752 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 812 754 NOP  <||@
  Comment 813 756 NOP  <||@
  Comment 814 758 NOP  <||@
  Comment 815 760 NOP  <||@
  Comment 816 762 NOP  <||@
  Comment 817 764 NOP  <||@
  Comment 818 766 CMP x: r8|DWORD y: 5 size: DWORD  <||@
  Comment 822 768 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 827 770 rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: rbx|DWORD) condition: |<|  <||@
  Comment 830 772 rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 833 774 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 833 block B33 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 833 776 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 848 778 NOP  <||@
  Comment 849 780 NOP  <||@
  Comment 850 782 NOP  <||@
  Comment 851 784 NOP  <||@
  Comment 852 786 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B33 -> B49 falseDestination: B33 -> B34 y: 1 size: DWORD inlinedY: null  <||@
  Comment 861 block B34 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 861 788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 861 790 NOP  <||@
  Comment 862 792 NOP  <||@
  Comment 863 794 NOP  <||@
  Comment 864 796 NOP  <||@
  Comment 865 798 NOP  <||@
  Comment 866 800 r13|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 872 802 CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.16666666666666666 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B45 size: DWORD  <||@
  Comment 881 block B45 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 881 984 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 881 986 NOP  <||@
  Comment 882 988 NOP  <||@
  Comment 883 990 NOP  <||@
  Comment 884 992 NOP  <||@
  Comment 885 994 NOP  <||@
  Comment 886 996 r14|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 892 998 CMPBRANCH (x: r8|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B53 size: DWORD  <||@
  Comment 901 block B46 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 901 1000 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 901 1002 NOP  <||@
  Comment 902 1004 NOP  <||@
  Comment 903 1006 NOP  <||@
  Comment 904 1008 NOP  <||@
  Comment 905 1010 NOP  <||@
  Comment 906 1012 r10|DWORD = MOV input: [rdx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 911 1014 CMPBRANCH (x: r10|DWORD, y: [rdx|QWORD[.] + r14|DWORD * 4 + 16]) trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD  <||@
  Comment 922 block B48 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 922 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 922 1034 NOP  <||@
  Comment 923 1036 NOP  <||@
  Comment 924 1038 NOP  <||@
  Comment 925 1040 NOP  <||@
  Comment 926 1042 NOP  <||@
  Comment 927 1044 SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:66]  <||@
  Comment 934 [rcx:0, rdx:0, rdi:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66, duringCall: false, rethrow: false]
              |0                  |1             |2         |3          |4  |5             |6            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |rbx|DWORD  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 934 {infopoint: SAFEPOINT}  <||@
  Comment 934 POLL_FAR  <||@
  Comment 937 1046 rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 940 1048 JUMP ~outgoingValues: [] destination: B48 -> B33  <||@
  Comment 942 block B35 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 942 804 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 942 806 NOP  <||@
  Comment 943 808 NOP  <||@
  Comment 944 810 NOP  <||@
  Comment 945 812 NOP  <||@
  Comment 946 814 MOV (x: [rcx|QWORD[.] + rsi|QWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 950 816 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 953 818 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 958 block B37 loop 6 depth 2 outer 5 header:76|LoopBegin  <||@
  Comment 958 832 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 960 834 NOP  <||@
  Comment 961 836 NOP  <||@
  Comment 962 838 NOP  <||@
  Comment 963 840 NOP  <||@
  Comment 964 842 NOP  <||@
  Comment 965 844 r10|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 968 846 MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 973 848 JUMP ~outgoingValues: [] destination: B37 -> B36  <||@
  Comment 973 block B36 loop 6 depth 2 outer 5 header:76|LoopBegin  <||@
  Comment 973 820 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 973 822 NOP  <||@
  Comment 974 824 NOP  <||@
  Comment 975 826 NOP  <||@
  Comment 976 828 NOP  <||@
  Comment 977 830 CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B37 size: DWORD  <||@
  Comment 982 block B38 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 982 850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 982 852 NOP  <||@
  Comment 983 854 NOP  <||@
  Comment 984 856 NOP  <||@
  Comment 985 858 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 990 block B40 loop 7 depth 2 outer 5 header:476|LoopBegin  <||@
  Comment 990 872 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 992 874 NOP  <||@
  Comment 993 876 NOP  <||@
  Comment 994 878 NOP  <||@
  Comment 995 880 NOP  <||@
  Comment 996 882 NOP  <||@
  Comment 997 884 NOP  <||@
  Comment 998 886 NOP  <||@
  Comment 999 888 NOP  <||@
  Comment 1000 890 NOP  <||@
  Comment 1001 892 NOP  <||@
  Comment 1002 894 NOP  <||@
  Comment 1003 896 NOP  <||@
  Comment 1004 898 NOP  <||@
  Comment 1005 900 NOP  <||@
  Comment 1006 902 NOP  <||@
  Comment 1007 904 NOP  <||@
  Comment 1008 906 NOP  <||@
  Comment 1009 908 r14|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 1015 910 MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1020 912 r14|DWORD = LEA address: [r10|DWORD - 2] size: DWORD  <||@
  Comment 1024 914 MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1029 916 r14|DWORD = LEA address: [r10|DWORD - 3] size: DWORD  <||@
  Comment 1033 918 MOV (x: [rcx|QWORD[.] + r14|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1038 920 r10|DWORD = LEA address: [r10|DWORD - 4] size: DWORD  <||@
  Comment 1042 922 MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1047 924 JUMP ~outgoingValues: [] destination: B40 -> B39  <||@
  Comment 1047 block B39 loop 7 depth 2 outer 5 header:476|LoopBegin  <||@
  Comment 1047 860 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1047 862 NOP  <||@
  Comment 1048 864 NOP  <||@
  Comment 1049 866 NOP  <||@
  Comment 1050 868 NOP  <||@
  Comment 1051 870 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.7999999999999998 condition: < trueDestination: B39 -> B41 falseDestination: B39 -> B40 y: 5 size: DWORD inlinedY: null  <||@
  Comment 1057 block B41 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 1057 926 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1057 928 NOP  <||@
  Comment 1058 930 NOP  <||@
  Comment 1059 932 NOP  <||@
  Comment 1060 934 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 1065 block B43 loop 8 depth 2 outer 5 header:496|LoopBegin  <||@
  Comment 1065 948 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1088 950 NOP  <||@
  Comment 1089 952 NOP  <||@
  Comment 1090 954 NOP  <||@
  Comment 1091 956 NOP  <||@
  Comment 1092 958 NOP  <||@
  Comment 1093 960 r10|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 1096 962 MOV (x: [rcx|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1101 964 JUMP ~outgoingValues: [] destination: B43 -> B42  <||@
  Comment 1101 block B42 loop 8 depth 2 outer 5 header:496|LoopBegin  <||@
  Comment 1101 936 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1101 938 NOP  <||@
  Comment 1102 940 NOP  <||@
  Comment 1103 942 NOP  <||@
  Comment 1104 944 NOP  <||@
  Comment 1105 946 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.99 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B43 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1111 block B44 loop 5 depth 1 header:44|LoopBegin  <||@
  Comment 1111 966 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1111 968 NOP  <||@
  Comment 1112 970 NOP  <||@
  Comment 1113 972 NOP  <||@
  Comment 1114 974 NOP  <||@
  Comment 1115 976 NOP  <||@
  Comment 1116 978 SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:125]  <||@
  Comment 1123 [rcx:0, rdx:0, rdi:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 125, duringCall: false, rethrow: false]
              |0                  |1             |2         |3          |4  |5             |6            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |rbx|DWORD  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1123 {infopoint: SAFEPOINT}  <||@
  Comment 1123 POLL_FAR  <||@
  Comment 1126 980 rbx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1129 982 JUMP ~outgoingValues: [] destination: B44 -> B33  <||@
  Comment 1134 block B49 null  <||@
  Comment 1134 1050 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1134 1052 NOP  <||@
  Comment 1135 1054 NOP  <||@
  Comment 1136 1056 NOP  <||@
  Comment 1137 1058 NOP  <||@
  Comment 1138 1060 NOP  <||@
  Comment 1139 1062 NOP  <||@
  Comment 1140 1064 NOP  <||@
  Comment 1141 1066 NOP  <||@
  Comment 1142 1068 NOP  <||@
  Comment 1143 1070 MOV x: [rcx|QWORD[.] + r9|DWORD * 4 + 16] y: 1 size: DWORD  <||@
  Comment 1152 1072 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1159 1074 rsi|QWORD = LEA address: [rax|QWORD + 32] size: QWORD  <||@
  Comment 1163 1076 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 1176 block B51 null  <||@
  Comment 1176 1108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1176 1110 NOP  <||@
  Comment 1177 1112 NOP  <||@
  Comment 1178 1114 NOP  <||@
  Comment 1179 1116 NOP  <||@
  Comment 1180 1118 NOP  <||@
  Comment 1181 1120 NOP  <||@
  Comment 1182 1122 NOP  <||@
  Comment 1183 1124 NOP  <||@
  Comment 1184 1126 NOP  <||@
  Comment 1185 1128 NOP  <||@
  Comment 1186 1130 NOP  <||@
  Comment 1187 1132 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1194 1134 AMD64PREFETCH ~address: [rax|QWORD + 288] instr: 0  <||@
  Comment 1201 1136 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1208 1138 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed}  <||@
  Comment 1208 {meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>;compressed}}  <||@
  Comment 1215 1140 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1222 1142 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1230 1144 MOV x: [rax|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 1238 1146 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1238 1148 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 1150 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1242 block B52 null  <||@
  Comment 1242 1152 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1242 1154 NOP  <||@
  Comment 1243 1156 NOP  <||@
  Comment 1244 1158 NOP  <||@
  Comment 1245 1160 NOP  <||@
  Comment 1246 1162 NOP  <||@
  Comment 1247 1164 NOP  <||@
  Comment 1248 1166 NOP  <||@
  Comment 1249 1168 NOP  <||@
  Comment 1250 1170 NOP  <||@
  Comment 1251 1172 NOP  <||@
  Comment 1252 1174 NOP  <||@
  Comment 1253 1176 NOP  <||@
  Comment 1254 1178 NOP  <||@
  Comment 1255 1180 NOP  <||@
  Comment 1256 1182 NOP  <||@
  Comment 1257 1184 rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3  <||@
  Comment 1261 1186 MOV (x: [rax|QWORD[.] + 24], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 1264 1188 rdi|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e45fee7 encoding: base: 0 shift: 3  <||@
  Comment 1268 1190 MOV (x: [rax|QWORD[.] + 20], y: rdi|DWORD[_]) size: DWORD  <||@
  Comment 1271 1192 MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 1275 1194 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1279 1196 MOV (x: [rax|QWORD[.] + 12], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1282 1198 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1291 POLL_RETURN_FAR  <||@
  Comment 1308 block B2 null  <||@
  Comment 1308 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1308 60 NOP  <||@
  Comment 1309 62 NOP  <||@
  Comment 1310 64 NOP  <||@
  Comment 1311 66 JUMP ~outgoingValues: [] destination: B2 -> B5  <||@
  Comment 1316 block B17 null  <||@
  Comment 1316 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1316 356 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1316 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1326 358 NOP  <||@
  Comment 1327 360 NOP  <||@
  Comment 1328 362 NOP  <||@
  Comment 1329 364 NOP  <||@
  Comment 1330 366 NOP  <||@
  Comment 1331 368 NOP  <||@
  Comment 1332 370 NOP  <||@
  Comment 1333 372 NOP  <||@
  Comment 1334 374 NOP  <||@
  Comment 1335 376 rdx|DWORD = MOVE input: int[128|0x80]  <||@
  Comment 1340 378 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1340 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1345 [rcx:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1353 380 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1353 [rax:0, rcx:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1353 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1355 384 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 1360 block B8 null  <||@
  Comment 1360 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1360 156 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1360 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1370 158 NOP  <||@
  Comment 1371 160 NOP  <||@
  Comment 1372 162 NOP  <||@
  Comment 1373 164 NOP  <||@
  Comment 1374 166 NOP  <||@
  Comment 1375 168 NOP  <||@
  Comment 1376 170 NOP  <||@
  Comment 1377 172 NOP  <||@
  Comment 1378 174 NOP  <||@
  Comment 1379 176 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1382 178 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1382 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1387 [r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1395 180 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1395 [rax:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1395 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1397 182 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1400 184 JUMP ~outgoingValues: [] destination: B8 -> B16  <||@
  Comment 1405 block B50 null  <||@
  Comment 1405 1078 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1405 1080 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1409 1082 NOP  <||@
  Comment 1410 1084 NOP  <||@
  Comment 1411 1086 NOP  <||@
  Comment 1412 1088 NOP  <||@
  Comment 1413 1090 NOP  <||@
  Comment 1414 1092 NOP  <||@
  Comment 1415 1094 NOP  <||@
  Comment 1416 1096 NOP  <||@
  Comment 1417 1098 NOP  <||@
  Comment 1418 1100 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>}  <||@
  Comment 1418 {meta{HotSpotType<Ljava/util/regex/Pattern$BnM;, resolved>}}  <||@
  Comment 1428 1102 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:138]  <||@
  Comment 1428 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1433 [rcx:0, rdx:0, rdi:0, r10:0, r11:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1441 1104 NULLCHECK address: [rax|QWORD[.]] state [bci:138]  <||@
  Comment 1441 [rax:0, rcx:0, rdx:0, rdi:0, r10:0, r11:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1441 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1443 1106 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 1448 block B14 null  <||@
  Comment 1448 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1448 292 NOP  <||@
  Comment 1449 294 NOP  <||@
  Comment 1450 296 NOP  <||@
  Comment 1451 298 NOP  <||@
  Comment 1452 300 NOP  <||@
  Comment 1453 302 NOP  <||@
  Comment 1454 304 NOP  <||@
  Comment 1455 306 NOP  <||@
  Comment 1456 308 NOP  <||@
  Comment 1457 310 ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1467 312 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 1472 block B53 null  <||@
  Comment 1472 1200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1472 1202 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1476 1204 NOP  <||@
  Comment 1477 1206 NOP  <||@
  Comment 1478 1208 NOP  <||@
  Comment 1479 1210 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1486 1212 r11|DWORD = MOVE input: int[-63771|0xffffffffffff06e5]  <||@
  Comment 1492 1214 JUMP ~outgoingValues: [] destination: B53 -> B54  <||@
  Comment 1492 block B54 null  <||@
  Comment 1492 1216 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1492 1218 NOP  <||@
  Comment 1493 1220 NOP  <||@
  Comment 1494 1222 NOP  <||@
  Comment 1495 1224 NOP  <||@
  Comment 1496 1226 NOP  <||@
  Comment 1497 1228 NOP  <||@
  Comment 1498 1230 NOP  <||@
  Comment 1499 1232 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1506 1234 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 1513 1236 DEOPT info [bci:66]  <||@
  Comment 1513 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1518 [rcx:0, rdx:0, rdi:0, r10:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 66, duringCall: false, rethrow: false]
              |0             |1             |2         |3          |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |rbx|DWORD  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1526 block B56 null  <||@
  Comment 1526 1260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1526 1262 NOP  <||@
  Comment 1527 1264 NOP  <||@
  Comment 1528 1266 NOP  <||@
  Comment 1529 1268 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1536 1270 r11|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5]  <||@
  Comment 1542 1272 JUMP ~outgoingValues: [] destination: B56 -> B58  <||@
  Comment 1542 block B58 null  <||@
  Comment 1542 1288 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1542 1290 NOP  <||@
  Comment 1543 1292 NOP  <||@
  Comment 1544 1294 NOP  <||@
  Comment 1545 1296 NOP  <||@
  Comment 1546 1298 NOP  <||@
  Comment 1547 1300 NOP  <||@
  Comment 1548 1302 NOP  <||@
  Comment 1549 1304 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1556 1306 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1563 1308 DEOPT info [bci:0]  <||@
  Comment 1563 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1568 [r10:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1576 block B55 null  <||@
  Comment 1576 1238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1576 1240 NOP  <||@
  Comment 1577 1242 NOP  <||@
  Comment 1578 1244 NOP  <||@
  Comment 1579 1246 NOP  <||@
  Comment 1580 1248 NOP  <||@
  Comment 1581 1250 NOP  <||@
  Comment 1582 1252 NOP  <||@
  Comment 1583 1254 MOV x: [r15|QWORD + 1156] y: -58907 size: DWORD  <||@
  Comment 1594 1256 MOV x: [r15|QWORD + 1168] y: 3992 size: QWORD  <||@
  Comment 1605 1258 DEOPT info [bci:64]  <||@
  Comment 1605 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1610 [rcx:0, rdx:0, rdi:0, r10:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5668) [bci: 64, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1618 block B47 null  <||@
  Comment 1618 1016 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1618 1018 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1622 1020 NOP  <||@
  Comment 1623 1022 NOP  <||@
  Comment 1624 1024 NOP  <||@
  Comment 1625 1026 r9|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 1632 1028 r11|DWORD = MOVE input: int[-101907|0xfffffffffffe71ed]  <||@
  Comment 1638 1030 JUMP ~outgoingValues: [] destination: B47 -> B54  <||@
  Comment 1643 block B57 null  <||@
  Comment 1643 1274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1643 1276 NOP  <||@
  Comment 1644 1278 NOP  <||@
  Comment 1645 1280 NOP  <||@
  Comment 1646 1282 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1653 1284 r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd]  <||@
  Comment 1659 1286 JUMP ~outgoingValues: [] destination: B57 -> B58  <||@
  Comment 1661 block B6 null  <||@
  Comment 1661 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1661 104 NOP  <||@
  Comment 1662 106 NOP  <||@
  Comment 1663 108 NOP  <||@
  Comment 1664 110 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1671 112 r11|DWORD = MOVE input: int[-99347|0xfffffffffffe7bed]  <||@
  Comment 1677 114 JUMP ~outgoingValues: [] destination: B6 -> B58  <||@
  Comment 1687 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1712 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1740 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1745 [r10:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1775 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1780 [r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1810 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1815 [rax:0, rcx:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1845 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1850 [rax:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5644) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1880 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1885 [rax:0, rcx:0, rdx:0, rdi:0, r10:0, r11:0]at java.util.regex.Pattern$BnM.optimize(Pattern.java:5690) [bci: 138, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5             |6            
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |-  |rdi|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 1893 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1893 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1899 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
