begin_compilation
  name " HotSpotCompilation-5901[java.util.ArrayList.grow(int)]"
  method "HotSpotCompilation-5901[java.util.ArrayList.grow(int)]"
  date 1724269729475
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a197  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.ArrayList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v207 ?44 ?53 ?53 ?100 v104 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a197 v70 a199 v79 v102 v104 v105 v107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:232) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
=== Succesors ===
next: i198 
=== Usages ===
v208 v81 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - #next: i198  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i39 i58 v23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
localsSize: 4
locksSize: 0
sourceFile: ArrayList.java
sourceLine: 232
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i198 v206 a145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a197 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-16395|0xffffffffffffbff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:232) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v208 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
v7 v71 i39 i41 
=== Predecessor ===
a197 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v208 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i198 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9913892247766504
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 17]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# java.lang.Object[]
stampKind: n java.lang.Object
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a197 
y: a80 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a197 y: a80  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.9999908146124536
stamp: void
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: j110 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j110 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j173 
=== Usages ===
v211 v212 
=== Predecessor ===
v191 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j173  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j110 
index: - 
=== Succesors ===
=== Usages ===
j173 v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
lastLocationAccess: - 
=== Succesors ===
next: j174 
=== Usages ===
j117 v213 v214 v215 a144 v216 v220 v217 v218 v219 
=== Predecessor ===
j110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 lastLocationAccess: - #next: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j110 
index: - 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
v118 
=== Predecessor ===
j173 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v212 lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 49]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 49]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i22 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 46]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 49]
stamp: i32 [10 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v23 
trueValue: i20 
falseValue: i2 
=== Succesors ===
=== Usages ===
v180 j113 a145 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v23 trueValue: i20 falseValue: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j113 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
resultBits: 64
stamp: i64 [10 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i58 
=== Succesors ===
=== Usages ===
j114 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64 [40 - 8589934588] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j113 
y: i109 
=== Succesors ===
=== Usages ===
j155 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j113 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid j154 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64 [63 - 8589934611] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j114 
y: j154 
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j114 y: j154  <|@  <|@
f <@~|@floating>@ <|@
tid j115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64 [0 - 8589934608] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j155 
y: j115 
=== Succesors ===
=== Usages ===
j117 v133 j158 v217 v218 v219 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j155 y: j115  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
=== Inputs ===
x: j116 
y: j173 
=== Succesors ===
=== Usages ===
v118 v175 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j116 y: j173  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j174 
y: j117 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j174 y: j117  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
j174 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v120 #falseSuccessor: v119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: a145 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a145  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a145 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v108 i58 
=== Succesors ===
next: v206 
=== Usages ===
v206 a171 
=== Predecessor ===
v120 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v108 i58 #next: v206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-47985|0xffffffffffff448f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a145 
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
a145 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a145 #next: v149  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
lastLocationAccess: - 
value: j117 
stateAfter: - 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v211 lastLocationAccess: - value: j117 stateAfter: - #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j116 
index: j173 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j116 index: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
address: v217 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v217 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j116 
index: j173 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j116 index: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
address: v218 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v218 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j116 
index: j173 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j116 index: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
address: v219 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v219 #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
lastLocationAccess: - 
value: j122 
stateAfter: - 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v213 lastLocationAccess: - value: j122 stateAfter: - #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
lastLocationAccess: - 
value: v196 
stateAfter: - 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v220 lastLocationAccess: - value: v196 stateAfter: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
lastLocationAccess: - 
value: i58 
stateAfter: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v214 lastLocationAccess: - value: i58 stateAfter: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid j157 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64 [-16 - 8589934592] bits:x...x000
=== Inputs ===
x: j116 
y: j157 
=== Succesors ===
=== Usages ===
v125 v129 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j116 y: j157  <|@  <|@
f <@~|@floating>@ <|@
tid j160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j158 
y: j160 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j158 y: j160  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v127 #falseSuccessor: v126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j97 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j156 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:175) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v131 
values: j156 j141 
=== Succesors ===
=== Usages ===
v133 v215 j141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v131 values: j156 j141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v130 
=== Succesors ===
next: v139 
=== Usages ===
j132 v138 v142 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v130 #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j132 
y: j116 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j132 y: j116  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v134 #falseSuccessor: v138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: j132 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: j132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
lastLocationAccess: - 
value: j97 
stateAfter: - 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 lastLocationAccess: - value: j97 stateAfter: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid j141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
=== Inputs ===
x: j132 
y: j159 
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j132 y: j159  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
loopBegin: v131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v131 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v131 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
lastLocationAccess: - 
length: j158 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v216 lastLocationAccess: - length: j158 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 #next: v143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j173 
=== Succesors ===
next: v147 
=== Usages ===
a171 
=== Predecessor ===
v143 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j173 #next: v147  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
a144 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v148 
values: a144 a145 
=== Succesors ===
=== Usages ===
a69 v37 v104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v148 values: a144 a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v147 v149 
=== Succesors ===
next: v102 
=== Usages ===
a171 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v147 v149 #next: v102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 56]
precise: true
stamp: void
=== Inputs ===
address: v207 
value: - 
stateBefore: - 
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v207 value: - stateBefore: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid a69 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 56]
op: Compress
stamp: n!# java.lang.Object[]
=== Inputs ===
value: a171 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayList.elementData
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
value: a69 
stateAfter: - 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - value: a69 stateAfter: - #next: v104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 56]
precise: false
stamp: void
=== Inputs ===
address: v207 
value: a171 
object: a1 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v207 value: a171 object: a1 #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 59]
stamp: void
=== Inputs ===
memoryMap: - 
result: a171 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a171  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v8 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v14 v16 
=== Succesors ===
next: i43 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v14 v16 #next: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i198 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i2 y: i198  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 26]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i198 
y: i40 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i198 y: i40  <|@  <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
referencedType: [null]
returnStamp: i32
signature: [HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ArraysSupport.newLength(int, int, int)>
=== Inputs ===
arguments: i198 i39 i41 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i198 i39 i41  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
localsSize: 4
locksSize: 0
sourceFile: ArrayList.java
sourceLine: 234
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
polymorphic: false
stamp: i32
targetMethod: Direct#ArraysSupport.newLength
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v71 
stateDuring: ?100 
=== Succesors ===
next: a199 
=== Usages ===
?44 ?53 v77 
=== Predecessor ===
v15 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v71 stateDuring: ?100 #next: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 33]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
a73 v221 
=== Predecessor ===
i43 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - #next: v200  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: istore_3
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
sourceFile: ArrayList.java
sourceLine: 234
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i43 a1 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i43 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-18955|0xffffffffffffb5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?44 
guard: - 
address: v221 
lastLocationAccess: - 
=== Succesors ===
next: j201 
=== Usages ===
v195 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?44 guard: - address: v221 lastLocationAccess: - #next: j201  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v200 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: v195 
index: - 
=== Succesors ===
=== Usages ===
j201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_java_mirror:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
lastLocationAccess: - 
=== Succesors ===
next: a202 
=== Usages ===
v210 
=== Predecessor ===
v200 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v209 lastLocationAccess: - #next: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
a202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
accessStamp: a!# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OopHandle contents:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stamp: a!# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
lastLocationAccess: - 
=== Succesors ===
next: a52 
=== Usages ===
v77 
=== Predecessor ===
j201 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 lastLocationAccess: - #next: a52  <|@  <|@
f <@~|@floating>@ <|@
tid a73 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 33]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a199  <|@  <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
referencedType: [null]
returnStamp: a java.lang.Object[]
signature: [UnresolvedJavaType<[Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Class;>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(Object[], int, Class)>
=== Inputs ===
arguments: a73 i43 a202 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a73 i43 a202  <|@  <|@
tid ?53 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
sourceFile: ArrayList.java
sourceLine: 237
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 - - i43 
=== Succesors ===
=== Usages ===
?101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 - - i43  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
localsSize: 2
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3482
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?53 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a52 <|@
d <@d|@=== Debug Properties ===
bci: 6
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
polymorphic: false
stamp: a java.lang.Object[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v77 
stateDuring: ?101 
=== Succesors ===
next: v105 
=== Usages ===
v57 a78 v107 
=== Predecessor ===
a202 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v77 stateDuring: ?101 #next: v105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 41]
precise: true
stamp: void
=== Inputs ===
address: v207 
value: - 
stateBefore: - 
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
a52 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v207 value: - stateBefore: - #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 41]
op: Compress
stamp: n java.lang.Object[]
=== Inputs ===
value: a52 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayList.elementData
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
value: a78 
stateAfter: - 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - value: a78 stateAfter: - #next: v107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 41]
precise: false
stamp: void
=== Inputs ===
address: v207 
value: a52 
object: a1 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v207 value: a52 object: a1 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 44]
stamp: void
=== Inputs ===
memoryMap: - 
result: a52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a52  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a197  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.ArrayList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v207 ?44 ?53 ?53 ?100 v104 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a197 v70 a199 v79 v102 v104 v105 v107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:232) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
=== Succesors ===
next: i198 
=== Usages ===
v208 v81 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - #next: i198  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i39 i58 v23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
localsSize: 4
locksSize: 0
sourceFile: ArrayList.java
sourceLine: 232
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i198 v206 a145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a197 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-16395|0xffffffffffffbff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:232) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v208 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
v7 v71 i39 i41 
=== Predecessor ===
a197 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v208 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i198 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9913892247766504
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
result NarrowOop[Object[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 17]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# java.lang.Object[]
stampKind: n java.lang.Object
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a197 
y: a80 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a197 y: a80  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:233) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.9999908146124536
stamp: void
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: j110 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j110 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j173 
=== Usages ===
v211 v212 
=== Predecessor ===
v191 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j173  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j110 
index: - 
=== Succesors ===
=== Usages ===
j173 v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j173 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
lastLocationAccess: - 
=== Succesors ===
next: j174 
=== Usages ===
j117 v213 v214 v215 a144 v216 v220 v217 v218 v219 
=== Predecessor ===
j110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 lastLocationAccess: - #next: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j110 
index: - 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
v118 
=== Predecessor ===
j173 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v212 lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[11|0xb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 49]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 49]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i22 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 46]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 49]
stamp: i32 [10 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v23 
trueValue: i20 
falseValue: i2 
=== Succesors ===
=== Usages ===
v180 j113 a145 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v23 trueValue: i20 falseValue: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j113 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
resultBits: 64
stamp: i64 [10 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i58 
=== Succesors ===
=== Usages ===
j114 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64 [40 - 8589934588] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j113 
y: i109 
=== Succesors ===
=== Usages ===
j155 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j113 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid j154 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j155 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64 [63 - 8589934611] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j114 
y: j154 
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j114 y: j154  <|@  <|@
f <@~|@floating>@ <|@
tid j115 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64 [0 - 8589934608] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j155 
y: j115 
=== Succesors ===
=== Usages ===
j117 v133 j158 v217 v218 v219 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j155 y: j115  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
=== Inputs ===
x: j116 
y: j173 
=== Succesors ===
=== Usages ===
v118 v175 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j116 y: j173  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j174 
y: j117 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j174 y: j117  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
j174 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v120 #falseSuccessor: v119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: a145 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a145  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a145 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v108 i58 
=== Succesors ===
next: v206 
=== Usages ===
v206 a171 
=== Predecessor ===
v120 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v108 i58 #next: v206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-47985|0xffffffffffff448f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a145 
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
a145 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a145 #next: v149  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
lastLocationAccess: - 
value: j117 
stateAfter: - 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v211 lastLocationAccess: - value: j117 stateAfter: - #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
result [v10|QWORD + v4|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j116 
index: j173 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j116 index: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
address: v217 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v217 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
result [v10|QWORD + v4|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j116 
index: j173 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j116 index: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
address: v218 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v218 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
result [v10|QWORD + v4|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j116 
index: j173 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j116 index: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
address: v219 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v219 #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [v4|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
lastLocationAccess: - 
value: j122 
stateAfter: - 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v213 lastLocationAccess: - value: j122 stateAfter: - #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
result [v4|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
lastLocationAccess: - 
value: v196 
stateAfter: - 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v220 lastLocationAccess: - value: v196 stateAfter: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v4|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
lastLocationAccess: - 
value: i58 
stateAfter: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v214 lastLocationAccess: - value: i58 stateAfter: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid j157 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64 [-16 - 8589934592] bits:x...x000
=== Inputs ===
x: j116 
y: j157 
=== Succesors ===
=== Usages ===
v125 v129 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j116 y: j157  <|@  <|@
f <@~|@floating>@ <|@
tid j160 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j158 
y: j160 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j158 y: j160  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v127 #falseSuccessor: v126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j97 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j156 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:175) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j132 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v131 
values: j156 j141 
=== Succesors ===
=== Usages ===
v133 v215 j141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v131 values: j156 j141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v130 
=== Succesors ===
next: v139 
=== Usages ===
j132 v138 v142 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v130 #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j132 
y: j116 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j132 y: j116  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v134 #falseSuccessor: v138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v4|QWORD + v15|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: j132 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: j132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
lastLocationAccess: - 
value: j97 
stateAfter: - 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 lastLocationAccess: - value: j97 stateAfter: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid j141 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: i64
=== Inputs ===
x: j132 
y: j159 
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j132 y: j159  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
loopBegin: v131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v131 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v131 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v4|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
lastLocationAccess: - 
length: j158 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v216 lastLocationAccess: - length: j158 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 #next: v143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j173 
=== Succesors ===
next: v147 
=== Usages ===
a171 
=== Predecessor ===
v143 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j173 #next: v147  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
a144 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a171 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v148 
values: a144 a145 
=== Succesors ===
=== Usages ===
a69 v37 v104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v148 values: a144 a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.ArrayList.grow(ArrayList.java:239) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v147 v149 
=== Succesors ===
next: v102 
=== Usages ===
a171 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v147 v149 #next: v102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 56]
precise: true
stamp: void
=== Inputs ===
address: v207 
value: - 
stateBefore: - 
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v207 value: - stateBefore: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid a69 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 56]
op: Compress
stamp: n!# java.lang.Object[]
=== Inputs ===
value: a171 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayList.elementData
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
value: a69 
stateAfter: - 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - value: a69 stateAfter: - #next: v104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 56]
precise: false
stamp: void
=== Inputs ===
address: v207 
value: a171 
object: a1 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v207 value: a171 object: a1 #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:239) [bci: 59]
stamp: void
=== Inputs ===
memoryMap: - 
result: a171 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a171  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v8 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v14 v16 
=== Succesors ===
next: i43 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v14 v16 #next: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i198 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i2 y: i198  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 26]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i198 
y: i40 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i198 y: i40  <|@  <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
referencedType: [null]
returnStamp: i32
signature: [HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ArraysSupport.newLength(int, int, int)>
=== Inputs ===
arguments: i198 i39 i41 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i198 i39 i41  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
localsSize: 4
locksSize: 0
sourceFile: ArrayList.java
sourceLine: 234
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i43 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
polymorphic: false
stamp: i32
targetMethod: Direct#ArraysSupport.newLength
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v71 
stateDuring: ?100 
=== Succesors ===
next: a199 
=== Usages ===
?44 ?53 v77 
=== Predecessor ===
v15 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v71 stateDuring: ?100 #next: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
result v28|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 33]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
a73 v221 
=== Predecessor ===
i43 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - #next: v200  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: istore_3
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
sourceFile: ArrayList.java
sourceLine: 234
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i43 a1 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i43 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
result [v28|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-18955|0xffffffffffffb5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?44 
guard: - 
address: v221 
lastLocationAccess: - 
=== Succesors ===
next: j201 
=== Usages ===
v195 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?44 guard: - address: v221 lastLocationAccess: - #next: j201  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v200 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
result [v30|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: v195 
index: - 
=== Succesors ===
=== Usages ===
j201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j201 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_java_mirror:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
lastLocationAccess: - 
=== Succesors ===
next: a202 
=== Usages ===
v210 
=== Predecessor ===
v200 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v209 lastLocationAccess: - #next: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v32|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
a202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a202 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a!# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OopHandle contents:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stamp: a!# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
lastLocationAccess: - 
=== Succesors ===
next: a52 
=== Usages ===
v77 
=== Predecessor ===
j201 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 lastLocationAccess: - #next: a52  <|@  <|@
f <@~|@floating>@ <|@
tid a73 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 33]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a199  <|@  <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
referencedType: [null]
returnStamp: a java.lang.Object[]
signature: [UnresolvedJavaType<[Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Class;>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(Object[], int, Class)>
=== Inputs ===
arguments: a73 i43 a202 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a73 i43 a202  <|@  <|@
tid ?53 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
sourceFile: ArrayList.java
sourceLine: 237
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 - - i43 
=== Succesors ===
=== Usages ===
?101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 - - i43  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
localsSize: 2
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3482
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?53 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a52 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 6
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
polymorphic: false
stamp: a java.lang.Object[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v77 
stateDuring: ?101 
=== Succesors ===
next: v105 
=== Usages ===
v57 a78 v107 
=== Predecessor ===
a202 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v77 stateDuring: ?101 #next: v105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 41]
precise: true
stamp: void
=== Inputs ===
address: v207 
value: - 
stateBefore: - 
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
a52 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v207 value: - stateBefore: - #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
result v38|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 41]
op: Compress
stamp: n java.lang.Object[]
=== Inputs ===
value: a52 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayList.elementData
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
value: a78 
stateAfter: - 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - value: a78 stateAfter: - #next: v107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 41]
precise: false
stamp: void
=== Inputs ===
address: v207 
value: a52 
object: a1 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v207 value: a52 object: a1 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:237) [bci: 44]
stamp: void
=== Inputs ===
memoryMap: - 
result: a52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  158  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  216  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  342  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  382  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  610  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  616  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  618  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  620  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr  622  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr  624  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  634  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  638  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  644  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  158  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  216  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  342  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  382  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  610  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  616  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  618  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  620  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr  622  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr  624  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  634  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  638  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  644  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v19|q [0, 1[[348, 350[[380, 382[[410, 411[[608, 610[[632, 634[[644, 646[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v14|q [0, 1[[408, 411[[606, 609[[630, 633[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v5|d [0, 28[[378, 380[[604, 609[[628, 633[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[608, 609[[632, 633[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v12|q [0, 26[[376, 380[[602, 609[[626, 633[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[410, 411[[608, 609[[632, 633[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [26, 347[[352, 643[[648, 658[26 MustHaveRegister 30 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister 612 MustHaveRegister 636 MustHaveRegister 640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [28, 100[[352, 385[[414, 598[[648, 658[28 MustHaveRegister 82 ShouldHaveRegister 86 ShouldHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [30, 46[30 MustHaveRegister 32 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [32, 48[[414, 602[[648, 658[32 MustHaveRegister 34 MustHaveRegister 598 ShouldHaveRegister 600 ShouldHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [80, 212[[388, 414[80 MustHaveRegister 96 ShouldHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 186 MustHaveRegister 191 LiveAtLoopEnd 212 ShouldHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v1|d [86, 142[[352, 378[86 MustHaveRegister 88 ShouldHaveRegister 142 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [84, 87[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v5|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v9|q [94, 192[94 MustHaveRegister 96 ShouldHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 144 MustHaveRegister 168 MustHaveRegister 191 LiveAtLoopEnd  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [96, 130[96 MustHaveRegister 98 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [374, 376[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q rax|q [382, 387[382 MustHaveRegister 384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [144, 148[[388, 408[144 MustHaveRegister 146 ShouldHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v16|q [158, 188[168 ShouldHaveRegister 186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v15|q [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v4|q [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v18|q [216, 348[342 MustHaveRegister 346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [340, 341[340 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[v21|q]" v21|q -1 [340, 341[340 MustHaveRegister  "NoDefinitionFound"
  v22|d DWORD "[v22|d]" v22|d v19|q [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [346, 347[346 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[v24|q]" v24|q -1 [346, 347[346 MustHaveRegister  "NoDefinitionFound"
  v25|d DWORD "[v25|d]" v25|d v1|d [598, 604[598 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v3|d [600, 606[600 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d rax|q [610, 633[610 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [612, 624[612 MustHaveRegister 614 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [614, 618[614 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|d [618, 620[618 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [616, 619[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [620, 622[620 MustHaveRegister 622 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [622, 630[622 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v28|d [624, 626[624 MustHaveRegister 626 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q rax|q [634, 644[634 MustHaveRegister 638 MustHaveRegister 642 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [636, 637[636 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[v37|q]" v37|q -1 [636, 637[636 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[v38|d]" v38|d v35|q [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [642, 643[642 MustHaveRegister  "NoDefinitionFound"
  v40|q QWORD "[v40|q]" v40|q -1 [642, 643[642 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v19|q [0, 1[[348, 350[[380, 382[[410, 411[[608, 610[[632, 634[[644, 646[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v14|q [0, 1[[408, 411[[606, 609[[630, 633[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v5|d [0, 28[[378, 380[[604, 609[[628, 633[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[608, 609[[632, 633[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v12|q [0, 26[[376, 380[[602, 609[[626, 633[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[410, 411[[608, 609[[632, 633[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [26, 347[26 MustHaveRegister 30 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[r10|d]" v1|d rdx|- [28, 100[[352, 385[[414, 598[[648, 658[28 MustHaveRegister 82 ShouldHaveRegister 86 ShouldHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [30, 46[30 MustHaveRegister 32 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [32, 48[[414, 602[[648, 658[32 MustHaveRegister 34 MustHaveRegister 598 ShouldHaveRegister 600 ShouldHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [80, 212[[388, 414[80 MustHaveRegister 96 ShouldHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 186 MustHaveRegister 191 LiveAtLoopEnd 212 ShouldHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdx|d]" v5|d v1|d [86, 142[[352, 378[86 MustHaveRegister 88 ShouldHaveRegister 142 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [84, 87[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v5|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v9|q [94, 192[94 MustHaveRegister 96 ShouldHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 144 MustHaveRegister 168 MustHaveRegister 191 LiveAtLoopEnd  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|q [96, 130[96 MustHaveRegister 98 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q -1 [374, 376[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q rax|q [382, 387[382 MustHaveRegister 384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q -1 [144, 148[[388, 408[144 MustHaveRegister 146 ShouldHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q v16|q [158, 188[168 ShouldHaveRegister 186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rdx|q]" v16|q v15|q [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r11|q]" v18|q v4|q [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r11|q]" v19|q v18|q [216, 348[342 MustHaveRegister 346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q -1 [340, 341[340 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[rdx|q]" v21|q -1 [340, 341[340 MustHaveRegister  "NoDefinitionFound"
  v22|d DWORD "[rax|d]" v22|d v19|q [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q -1 [346, 347[346 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[rdx|q]" v24|q -1 [346, 347[346 MustHaveRegister  "NoDefinitionFound"
  v25|d DWORD "[r10|d]" v25|d v1|d [598, 604[598 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d v3|d [600, 606[600 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d rax|q [610, 631[610 MustHaveRegister 628 ShouldHaveRegister  "OneSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [612, 624[612 MustHaveRegister 614 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d -1 [614, 618[614 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q v29|d [618, 620[618 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q -1 [616, 619[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q -1 [620, 622[620 MustHaveRegister 622 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q -1 [622, 630[622 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdx|q]" v34|q v28|d [624, 626[624 MustHaveRegister 626 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q rax|q [634, 644[634 MustHaveRegister 638 MustHaveRegister 642 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[r10|q]" v36|q -1 [636, 637[636 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[r11|q]" v37|q -1 [636, 637[636 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[r10|d]" v38|d v35|q [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r10|q]" v39|q -1 [642, 643[642 MustHaveRegister  "NoDefinitionFound"
  v40|q QWORD "[r11|q]" v40|q -1 [642, 643[642 MustHaveRegister  "NoDefinitionFound"
  v41|q QWORD "[vstack:0|q]" v0|q v0|q [352, 375[ "SpillInDominator"
  v42|q QWORD "[vstack:0|q]" v0|q v0|q [375, 424[ "SpillInDominator"
  v43|q QWORD "[vstack:0|q]" v0|q v0|q [424, 601[ "SpillInDominator"
  v44|q QWORD "[vstack:0|q]" v0|q v0|q [601, 607[ "SpillInDominator"
  v45|q QWORD "[vstack:0|q]" v0|q v0|q [607, 611[ "SpillInDominator"
  v46|q QWORD "[rsi|q]" v0|q v0|q [611, 625[612 MustHaveRegister  "SpillInDominator"
  v47|d DWORD "[vstack:2|d]" v27|d v27|d [631, 633[ "OneSpillStore"
  v48|q QWORD "[vstack:0|q]" v0|q v0|q [625, 631[ "SpillInDominator"
  v49|q QWORD "[vstack:0|q]" v0|q v0|q [631, 635[ "SpillInDominator"
  v50|q QWORD "[rsi|q]" v0|q v0|q [635, 643[[648, 658[636 MustHaveRegister 640 MustHaveRegister 642 MustHaveRegister  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  158  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  216  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  342  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  382  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = STACKMOVE (input: v43|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = STACKMOVE (input: v44|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  610  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  616  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  618  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  620  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr  622  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr  624  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = STACKMOVE (input: v48|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  634  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  638  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  644  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v19|q [0, 1[[348, 350[[380, 382[[410, 411[[608, 610[[632, 634[[644, 646[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v14|q [0, 1[[408, 411[[606, 609[[630, 633[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v5|d [0, 28[[378, 380[[604, 609[[628, 633[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[608, 609[[632, 633[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v12|q [0, 26[[376, 380[[602, 609[[626, 633[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[410, 411[[608, 609[[632, 633[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [26, 347[26 MustHaveRegister 30 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d rdx|- [28, 100[[352, 385[[414, 598[[648, 658[28 MustHaveRegister 82 ShouldHaveRegister 86 ShouldHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [30, 46[30 MustHaveRegister 32 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [32, 48[[414, 602[[648, 658[32 MustHaveRegister 34 MustHaveRegister 598 ShouldHaveRegister 600 ShouldHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [80, 212[[388, 414[80 MustHaveRegister 96 ShouldHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 186 MustHaveRegister 191 LiveAtLoopEnd 212 ShouldHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdx|d]" v5|d v1|d [86, 142[[352, 378[86 MustHaveRegister 88 ShouldHaveRegister 142 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [84, 87[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v5|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v9|q [94, 192[94 MustHaveRegister 96 ShouldHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 144 MustHaveRegister 168 MustHaveRegister 191 LiveAtLoopEnd  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|q [96, 130[96 MustHaveRegister 98 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q -1 [374, 376[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q rax|q [382, 387[382 MustHaveRegister 384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q -1 [144, 148[[388, 408[144 MustHaveRegister 146 ShouldHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q v16|q [158, 188[168 ShouldHaveRegister 186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rdx|q]" v16|q v15|q [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r11|q]" v18|q v4|q [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r11|q]" v19|q v18|q [216, 348[342 MustHaveRegister 346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q -1 [340, 341[340 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[rdx|q]" v21|q -1 [340, 341[340 MustHaveRegister  "NoDefinitionFound"
  v22|d DWORD "[rax|d]" v22|d v19|q [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q -1 [346, 347[346 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[rdx|q]" v24|q -1 [346, 347[346 MustHaveRegister  "NoDefinitionFound"
  v25|d DWORD "[r10|d]" v25|d v1|d [598, 604[598 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d v3|d [600, 606[600 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d rax|q [610, 631[610 MustHaveRegister 628 ShouldHaveRegister  "OneSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [612, 624[612 MustHaveRegister 614 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d -1 [614, 618[614 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q v29|d [618, 620[618 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q -1 [616, 619[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q -1 [620, 622[620 MustHaveRegister 622 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q -1 [622, 630[622 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdx|q]" v34|q v28|d [624, 626[624 MustHaveRegister 626 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q rax|q [634, 644[634 MustHaveRegister 638 MustHaveRegister 642 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[r10|q]" v36|q -1 [636, 637[636 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[r11|q]" v37|q -1 [636, 637[636 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[r10|d]" v38|d v35|q [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r10|q]" v39|q -1 [642, 643[642 MustHaveRegister  "NoDefinitionFound"
  v40|q QWORD "[r11|q]" v40|q -1 [642, 643[642 MustHaveRegister  "NoDefinitionFound"
  v41|q QWORD "[vstack:0|q]" v0|q v0|q [352, 375[ "StoreAtDefinition"
  v42|q QWORD "[vstack:0|q]" v0|q v0|q [375, 424[ "StoreAtDefinition"
  v43|q QWORD "[vstack:0|q]" v0|q v0|q [424, 601[ "StoreAtDefinition"
  v44|q QWORD "[vstack:0|q]" v0|q v0|q [601, 607[ "StoreAtDefinition"
  v45|q QWORD "[vstack:0|q]" v0|q v0|q [607, 611[ "StoreAtDefinition"
  v46|q QWORD "[rsi|q]" v0|q v0|q [611, 625[612 MustHaveRegister  "StoreAtDefinition"
  v47|d DWORD "[vstack:2|d]" v27|d v27|d [631, 633[ "OneSpillStore"
  v48|q QWORD "[vstack:0|q]" v0|q v0|q [625, 631[ "StoreAtDefinition"
  v49|q QWORD "[vstack:0|q]" v0|q v0|q [631, 635[ "StoreAtDefinition"
  v50|q QWORD "[rsi|q]" v0|q v0|q [635, 643[[648, 658[636 MustHaveRegister 640 MustHaveRegister 642 MustHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  158  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v16|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  216  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  342  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  382  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = STACKMOVE (input: v43|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = STACKMOVE (input: v44|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  610  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  616  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  618  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  620  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr  622  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr  624  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = STACKMOVE (input: v48|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  634  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  638  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  644  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v19|q [0, 1[[348, 350[[380, 382[[410, 411[[608, 610[[632, 634[[644, 646[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v14|q [0, 1[[408, 411[[606, 609[[630, 633[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v5|d [0, 28[[378, 380[[604, 609[[628, 633[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[608, 609[[632, 633[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v12|q [0, 26[[376, 380[[602, 609[[626, 633[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[410, 411[[608, 609[[632, 633[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[608, 609[[632, 633[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [26, 347[26 MustHaveRegister 30 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d rdx|- [28, 100[[352, 385[[414, 598[[648, 658[28 MustHaveRegister 82 ShouldHaveRegister 86 ShouldHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [30, 46[30 MustHaveRegister 32 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [32, 48[[414, 602[[648, 658[32 MustHaveRegister 34 MustHaveRegister 598 ShouldHaveRegister 600 ShouldHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [80, 212[[388, 414[80 MustHaveRegister 96 ShouldHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 186 MustHaveRegister 191 LiveAtLoopEnd 212 ShouldHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdx|d]" v5|d v1|d [86, 142[[352, 378[86 MustHaveRegister 88 ShouldHaveRegister 142 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [84, 87[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v5|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v9|q [94, 192[94 MustHaveRegister 96 ShouldHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 144 MustHaveRegister 168 MustHaveRegister 191 LiveAtLoopEnd  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|q [96, 130[96 MustHaveRegister 98 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q -1 [374, 376[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q rax|q [382, 387[382 MustHaveRegister 384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q -1 [144, 148[[388, 408[144 MustHaveRegister 146 ShouldHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q v16|q [158, 188[168 ShouldHaveRegister 186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rdx|q]" v16|q v15|q [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r11|q]" v18|q v4|q [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r11|q]" v19|q v18|q [216, 348[342 MustHaveRegister 346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q -1 [340, 341[340 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[rdx|q]" v21|q -1 [340, 341[340 MustHaveRegister  "NoDefinitionFound"
  v22|d DWORD "[rax|d]" v22|d v19|q [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q -1 [346, 347[346 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[rdx|q]" v24|q -1 [346, 347[346 MustHaveRegister  "NoDefinitionFound"
  v25|d DWORD "[r10|d]" v25|d v1|d [598, 604[598 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d v3|d [600, 606[600 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d rax|q [610, 631[610 MustHaveRegister 628 ShouldHaveRegister  "OneSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [612, 624[612 MustHaveRegister 614 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d -1 [614, 618[614 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q v29|d [618, 620[618 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q -1 [616, 619[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q -1 [620, 622[620 MustHaveRegister 622 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q -1 [622, 630[622 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdx|q]" v34|q v28|d [624, 626[624 MustHaveRegister 626 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q rax|q [634, 644[634 MustHaveRegister 638 MustHaveRegister 642 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[r10|q]" v36|q -1 [636, 637[636 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[r11|q]" v37|q -1 [636, 637[636 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[r10|d]" v38|d v35|q [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r10|q]" v39|q -1 [642, 643[642 MustHaveRegister  "NoDefinitionFound"
  v40|q QWORD "[r11|q]" v40|q -1 [642, 643[642 MustHaveRegister  "NoDefinitionFound"
  v41|q QWORD "[vstack:0|q]" v0|q v0|q [352, 375[ "StoreAtDefinition"
  v42|q QWORD "[vstack:0|q]" v0|q v0|q [375, 424[ "StoreAtDefinition"
  v43|q QWORD "[vstack:0|q]" v0|q v0|q [424, 601[ "StoreAtDefinition"
  v44|q QWORD "[vstack:0|q]" v0|q v0|q [601, 607[ "StoreAtDefinition"
  v45|q QWORD "[vstack:0|q]" v0|q v0|q [607, 611[ "StoreAtDefinition"
  v46|q QWORD "[rsi|q]" v0|q v0|q [611, 625[612 MustHaveRegister  "StoreAtDefinition"
  v47|d DWORD "[vstack:2|d]" v27|d v27|d [631, 633[ "OneSpillStore"
  v48|q QWORD "[vstack:0|q]" v0|q v0|q [625, 631[ "StoreAtDefinition"
  v49|q QWORD "[vstack:0|q]" v0|q v0|q [631, 635[ "StoreAtDefinition"
  v50|q QWORD "[rsi|q]" v0|q v0|q [635, 643[[648, 658[636 MustHaveRegister 640 MustHaveRegister 642 MustHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  158  <|@ instruction [v15|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  216  <|@ instruction [v19|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  342  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  382  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = STACKMOVE (input: v43|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = STACKMOVE (input: v44|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  610  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  616  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  618  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  620  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr  622  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr  624  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = STACKMOVE (input: v48|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  634  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  638  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  644  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v2|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: v1|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction v5|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL x: v7|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction v14|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v14|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v15|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV x: [v4|QWORD + v15|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v18|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  342  <|@ instruction v22|DWORD[_] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v19|QWORD[.]) {temp: v23|QWORD, temp2: v24|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  382  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v13|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v25|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction v26|DWORD = SHR value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rdx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  610  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction v28|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: v27|DWORD 
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  616  <|@ instruction v31|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  618  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  620  <|@ instruction v32|QWORD = MOV input: [v30|QWORD + 112] size: QWORD <|@ <|@
      nr  622  <|@ instruction v33|QWORD[.] = MOV input: [v32|QWORD] size: QWORD <|@ <|@
      nr  624  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - v27|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  634  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v36|QWORD, temp2: v37|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  638  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v35|QWORD[.]) {temp: v39|QWORD, temp2: v40|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  644  <|@ instruction rax|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  342  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: vstack:0|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: vstack:0|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  616  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  618  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  620  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  622  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  624  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - - vstack:2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  646  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  342  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: vstack:0|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: vstack:0|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  616  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  618  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  620  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  622  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  624  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - - vstack:2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  646  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: vstack:0|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: vstack:0|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction vstack:2|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - - vstack:2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [26, 644[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [640, 642[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [26, 644[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:28|d]" vstack:2|d -1 [640, 642[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607104859831842911
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP x: r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636469433698080868
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636537807604759767
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606927079600175469
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607015482226992631
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607104777809636229
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  406  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  410  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  412  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576868539070243725
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:232) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  130  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576811389897351823
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576117395744221248
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4576122645165448872
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 27]
locals: stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  624  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:234) [bci: 30]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30] <|@ <|@
      nr  626  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.grow(ArrayList.java:237) [bci: 37]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  650  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  652  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4531493032844435269
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: ifgt          20
    10: aload_0       
    11: getfield      #1          // elementData:java.lang.Object[]
    14: getstatic     #8          // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:java.lang.Object[]
    17: if_acmpeq     45
    20: iload_2       
    21: iload_1       
    22: iload_2       
    23: isub          
    24: iload_2       
    25: iconst_1      
    26: ishr          
    27: invokestatic  #16         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    30: istore_3      
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // elementData:java.lang.Object[]
    36: iload_3       
    37: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    40: dup_x1        
    41: putfield      #1          // elementData:java.lang.Object[]
    44: areturn       
    45: aload_0       
    46: bipush        10
    48: iload_1       
    49: invokestatic  #17         // java.lang.Math.max:(int, int)int
    52: anewarray     #7          // java.lang.Object
    55: dup_x1        
    56: putfield      #1          // elementData:java.lang.Object[]
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec289041817f20000000000f85c70300009090909090909090909048896c24204889742408448bd28b4614448b1cc50c0000004585db0f851c0200009090909081f8addeadde0f85840300009090909090909090909090909090904d8b9fb80100004183fa0bb80a000000418bd20f4cd08bc248c1e002488d40174883e0f8488bc84903cb493b8fc80100000f8776010000909090909090909090909090909049898fb8010000420f18841800010000420f18841840010000420f1884188001000049c7030100000041c74308addeadde4189530c488d48f04881f9000800000f835501000090909048c7c210000000e91500000066909090909090909049c7041300000000488d520890909090483bc277e4909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b561448c1e2034885d20f841d000000498b47284883f8000f84680200004883e8084989472849034738488910498bc348c1e803894614488bc64933c348c1e8160f8442000000488bc648c1e80948ba00e0368d787f00004803c28038027429f083042400803800741fc60000498b57484885d20f841b0200004883ea084989574849035758488902498bc3488b6c24204883c428493ba7500400000f8702020000c5f877c39090909090909090909048b8addeaddeaddeadde488bf0e8000000000f1f84000000000085004c8bd8488b742408e9dffeffff909090909090909090498d7b104833c0f348aa488b742408e9befeffff9090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090452bd3418bcbd1e9418bf3418bd2666690e8000000000f1f840000000000488b7424088b56148b0cd50800000049ba0000002b787f0000498d0c0a488b4970488b0948c1e203488bf28bd0894424146690e8000000000f1f840000000000488b74240841807f40000f842e000000448b5e1449c1e3034d85db0f841d0000004d8b57284983fa000f84dc0000004983ea084d8957284d0357384d891a4c8bd049c1ea03448956144c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84820000004983eb084d895f484d035f584d8913488b6c24204883c428493ba7500400000f8769000000c5f877c3909090e983feffff48896c2420e800000000e92afcfffff448891424e800000000e999fdfffff448890424e800000000e9e6fdfffff4488d0deafdffff49898f68040000e9befbfffff44c891c24e800000000e925fffffff44c891424e800000000eb82f4488d0d83ffffff49898f68040000e98ffbfffff441c78784040000f5bfffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f44ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b5ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD  <||@
  Comment 73 26 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 78 28 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 81 30 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 84 32 r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 84 [rax:0, rsi:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 34 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD  <||@
  Comment 101 block B1 null  <||@
  Comment 101 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 101 38 NOP  <||@
  Comment 102 40 NOP  <||@
  Comment 103 42 NOP  <||@
  Comment 104 44 NOP  <||@
  Comment 105 46 CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}]  <||@
  Comment 105 {NarrowOop[Object[0]{}]}  <||@
  Comment 117 block B2 null  <||@
  Comment 117 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 50 NOP  <||@
  Comment 118 52 NOP  <||@
  Comment 119 54 NOP  <||@
  Comment 120 56 NOP  <||@
  Comment 121 58 NOP  <||@
  Comment 122 60 NOP  <||@
  Comment 123 62 NOP  <||@
  Comment 124 64 NOP  <||@
  Comment 125 66 NOP  <||@
  Comment 126 68 NOP  <||@
  Comment 127 70 NOP  <||@
  Comment 128 72 NOP  <||@
  Comment 129 74 NOP  <||@
  Comment 130 76 NOP  <||@
  Comment 131 78 NOP  <||@
  Comment 132 80 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 139 82 CMP x: r10|DWORD y: 11 size: DWORD  <||@
  Comment 143 84 rax|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 148 86 rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: <  <||@
  Comment 154 88 rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 156 90 rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD  <||@
  Comment 160 92 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 164 94 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 168 96 rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 174 98 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 187 block B4 null  <||@
  Comment 187 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 187 138 NOP  <||@
  Comment 188 140 NOP  <||@
  Comment 189 142 NOP  <||@
  Comment 190 144 NOP  <||@
  Comment 191 146 NOP  <||@
  Comment 192 148 NOP  <||@
  Comment 193 150 NOP  <||@
  Comment 194 152 NOP  <||@
  Comment 195 154 NOP  <||@
  Comment 196 156 NOP  <||@
  Comment 197 158 NOP  <||@
  Comment 198 160 NOP  <||@
  Comment 199 162 NOP  <||@
  Comment 200 164 NOP  <||@
  Comment 201 166 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 208 168 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0  <||@
  Comment 217 170 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0  <||@
  Comment 226 172 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0  <||@
  Comment 235 174 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 242 176 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 242 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 250 178 MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 254 180 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 258 182 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 271 block B5 null  <||@
  Comment 271 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 271 186 NOP  <||@
  Comment 272 188 NOP  <||@
  Comment 273 190 NOP  <||@
  Comment 274 192 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 281 194 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 286 block B7 loop 0 depth 1 header:131|LoopBegin  <||@
  Comment 286 208 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 210 NOP  <||@
  Comment 289 212 NOP  <||@
  Comment 290 214 NOP  <||@
  Comment 291 216 NOP  <||@
  Comment 292 218 NOP  <||@
  Comment 293 220 NOP  <||@
  Comment 294 222 NOP  <||@
  Comment 295 224 MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 226 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 307 228 JUMP ~outgoingValues: [] destination: B7 -> B6  <||@
  Comment 307 block B6 loop 0 depth 1 header:131|LoopBegin  <||@
  Comment 307 196 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 198 NOP  <||@
  Comment 308 200 NOP  <||@
  Comment 309 202 NOP  <||@
  Comment 310 204 NOP  <||@
  Comment 311 206 CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 316 block B8 null  <||@
  Comment 316 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 232 NOP  <||@
  Comment 317 234 NOP  <||@
  Comment 318 236 NOP  <||@
  Comment 319 238 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 319 block B10 null  <||@
  Comment 319 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 268 NOP  <||@
  Comment 320 270 NOP  <||@
  Comment 321 272 NOP  <||@
  Comment 322 274 NOP  <||@
  Comment 323 276 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 323 278 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 323 block B11 null  <||@
  Comment 323 280 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 282 NOP  <||@
  Comment 324 284 NOP  <||@
  Comment 325 286 NOP  <||@
  Comment 326 288 NOP  <||@
  Comment 327 290 NOP  <||@
  Comment 328 292 NOP  <||@
  Comment 329 294 NOP  <||@
  Comment 330 296 NOP  <||@
  Comment 331 298 NOP  <||@
  Comment 332 300 NOP  <||@
  Comment 333 302 NOP  <||@
  Comment 334 304 NOP  <||@
  Comment 335 306 NOP  <||@
  Comment 336 308 NOP  <||@
  Comment 337 310 NOP  <||@
  Comment 338 312 NOP  <||@
  Comment 339 314 NOP  <||@
  Comment 340 316 NOP  <||@
  Comment 341 318 NOP  <||@
  Comment 342 320 NOP  <||@
  Comment 343 322 NOP  <||@
  Comment 344 324 NOP  <||@
  Comment 345 326 NOP  <||@
  Comment 346 328 NOP  <||@
  Comment 347 330 NOP  <||@
  Comment 348 332 NOP  <||@
  Comment 349 334 NOP  <||@
  Comment 350 336 NOP  <||@
  Comment 351 338 NOP  <||@
  Comment 352 340 NOP  <||@
  Comment 353 342 NOP  <||@
  Comment 354 344 NOP  <||@
  Comment 355 346 NOP  <||@
  Comment 356 348 NOP  <||@
  Comment 357 350 NOP  <||@
  Comment 358 352 NOP  <||@
  Comment 359 354 NOP  <||@
  Comment 360 356 NOP  <||@
  Comment 361 358 NOP  <||@
  Comment 362 360 NOP  <||@
  Comment 363 362 NOP  <||@
  Comment 364 364 NOP  <||@
  Comment 365 366 NOP  <||@
  Comment 366 368 NOP  <||@
  Comment 367 370 NOP  <||@
  Comment 368 372 NOP  <||@
  Comment 369 374 NOP  <||@
  Comment 370 376 NOP  <||@
  Comment 371 378 NOP  <||@
  Comment 372 380 NOP  <||@
  Comment 373 382 NOP  <||@
  Comment 374 384 NOP  <||@
  Comment 375 386 NOP  <||@
  Comment 376 388 NOP  <||@
  Comment 377 390 NOP  <||@
  Comment 378 392 NOP  <||@
  Comment 379 394 NOP  <||@
  Comment 380 396 NOP  <||@
  Comment 381 398 NOP  <||@
  Comment 382 400 NOP  <||@
  Comment 383 402 NOP  <||@
  Comment 384 404 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb  <||@
  Comment 440 406 rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3  <||@
  Comment 447 408 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 450 410 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb  <||@
  Comment 532 412 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 535 414 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 544 POLL_RETURN_FAR  <||@
  Comment 561 block B3 null  <||@
  Comment 561 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 102 NOP  <||@
  Comment 562 104 NOP  <||@
  Comment 563 106 NOP  <||@
  Comment 564 108 NOP  <||@
  Comment 565 110 NOP  <||@
  Comment 566 112 NOP  <||@
  Comment 567 114 NOP  <||@
  Comment 568 116 NOP  <||@
  Comment 569 118 NOP  <||@
  Comment 570 120 NOP  <||@
  Comment 571 122 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 571 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 581 124 rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 584 126 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 584 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 589 [stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 597 128 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 597 [rax:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 597 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 599 130 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 602 132 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 607 134 JUMP ~outgoingValues: [] destination: B3 -> B11  <||@
  Comment 612 block B9 null  <||@
  Comment 612 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 612 242 NOP  <||@
  Comment 613 244 NOP  <||@
  Comment 614 246 NOP  <||@
  Comment 615 248 NOP  <||@
  Comment 616 250 NOP  <||@
  Comment 617 252 NOP  <||@
  Comment 618 254 NOP  <||@
  Comment 619 256 NOP  <||@
  Comment 620 258 NOP  <||@
  Comment 621 260 ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 631 262 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 636 264 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 641 block B13 null  <||@
  Comment 641 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 641 428 NOP  <||@
  Comment 642 430 NOP  <||@
  Comment 643 432 NOP  <||@
  Comment 644 434 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 644 block B14 null  <||@
  Comment 644 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 644 438 NOP  <||@
  Comment 645 440 NOP  <||@
  Comment 646 442 NOP  <||@
  Comment 647 444 NOP  <||@
  Comment 648 446 NOP  <||@
  Comment 649 448 NOP  <||@
  Comment 650 450 NOP  <||@
  Comment 651 452 NOP  <||@
  Comment 652 454 NOP  <||@
  Comment 653 456 NOP  <||@
  Comment 654 458 NOP  <||@
  Comment 655 460 NOP  <||@
  Comment 656 462 NOP  <||@
  Comment 657 464 NOP  <||@
  Comment 658 466 NOP  <||@
  Comment 659 468 NOP  <||@
  Comment 660 470 NOP  <||@
  Comment 661 472 NOP  <||@
  Comment 662 474 NOP  <||@
  Comment 663 476 NOP  <||@
  Comment 664 478 NOP  <||@
  Comment 665 480 NOP  <||@
  Comment 666 482 NOP  <||@
  Comment 667 484 NOP  <||@
  Comment 668 486 NOP  <||@
  Comment 669 488 NOP  <||@
  Comment 670 490 NOP  <||@
  Comment 671 492 NOP  <||@
  Comment 672 494 NOP  <||@
  Comment 673 496 NOP  <||@
  Comment 674 498 NOP  <||@
  Comment 675 500 NOP  <||@
  Comment 676 502 NOP  <||@
  Comment 677 504 NOP  <||@
  Comment 678 506 NOP  <||@
  Comment 679 508 NOP  <||@
  Comment 680 510 NOP  <||@
  Comment 681 512 NOP  <||@
  Comment 682 514 NOP  <||@
  Comment 683 516 NOP  <||@
  Comment 684 518 NOP  <||@
  Comment 685 520 NOP  <||@
  Comment 686 522 NOP  <||@
  Comment 687 524 NOP  <||@
  Comment 688 526 NOP  <||@
  Comment 689 528 NOP  <||@
  Comment 690 530 NOP  <||@
  Comment 691 532 NOP  <||@
  Comment 692 534 NOP  <||@
  Comment 693 536 NOP  <||@
  Comment 694 538 NOP  <||@
  Comment 695 540 NOP  <||@
  Comment 696 542 NOP  <||@
  Comment 697 544 NOP  <||@
  Comment 698 546 NOP  <||@
  Comment 699 548 NOP  <||@
  Comment 700 550 NOP  <||@
  Comment 701 552 NOP  <||@
  Comment 702 554 NOP  <||@
  Comment 703 556 NOP  <||@
  Comment 704 558 NOP  <||@
  Comment 705 560 NOP  <||@
  Comment 706 562 NOP  <||@
  Comment 707 564 NOP  <||@
  Comment 708 566 NOP  <||@
  Comment 709 568 NOP  <||@
  Comment 710 570 NOP  <||@
  Comment 711 572 NOP  <||@
  Comment 712 574 NOP  <||@
  Comment 713 576 NOP  <||@
  Comment 714 578 NOP  <||@
  Comment 715 580 NOP  <||@
  Comment 716 582 NOP  <||@
  Comment 717 584 NOP  <||@
  Comment 718 586 NOP  <||@
  Comment 719 588 NOP  <||@
  Comment 720 590 NOP  <||@
  Comment 721 592 NOP  <||@
  Comment 722 594 NOP  <||@
  Comment 723 596 NOP  <||@
  Comment 724 598 NOP  <||@
  Comment 725 600 NOP  <||@
  Comment 726 602 NOP  <||@
  Comment 727 604 NOP  <||@
  Comment 728 606 NOP  <||@
  Comment 729 608 NOP  <||@
  Comment 730 610 r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 733 612 rcx|DWORD = SHR value: r11|DWORD size: DWORD  <||@
  Comment 738 614 rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 741 616 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 744 618 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27]  <||@
  Comment 747 {HotSpotMethod<ArraysSupport.newLength(int, int, int)>}  <||@
  Comment 747 INVOKESTATIC  <||@
  Comment 752 [stack:8]at java.util.ArrayList.grow(ArrayList.java:234) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 760 620 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 765 622 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 768 624 rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30]  <||@
  Comment 768 [rdx:0, rsi:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:234) [bci: 30, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD     |   |   |    <||@
  Comment 768 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 775 626 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 785 628 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0  <||@
  Comment 789 630 rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD  <||@
  Comment 793 632 rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD  <||@
  Comment 796 634 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3  <||@
  Comment 800 636 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 803 638 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 805 640 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 809 642 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37]  <||@
  Comment 811 {HotSpotMethod<Arrays.copyOf(Object[], int, Class)>}  <||@
  Comment 811 INVOKESTATIC  <||@
  Comment 816 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:40|QWORD[.]  |-  |-  |stack:28|DWORD 
     stack:   |stack:40|QWORD[.]  |   |   |                 <||@
  Comment 824 644 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 829 646 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb  <||@
  Comment 886 648 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3  <||@
  Comment 893 650 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 897 652 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb  <||@
  Comment 991 654 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1000 POLL_RETURN_FAR  <||@
  Comment 1017 block B12 null  <||@
  Comment 1017 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 418 NOP  <||@
  Comment 1018 420 NOP  <||@
  Comment 1019 422 NOP  <||@
  Comment 1020 424 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 1030 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1045 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1060 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1085 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1095 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1110 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1132 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1160 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1165 [rax:0, rsi:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 1195 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1200 [rax:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 1230 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1235 [rdx:0, rsi:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:234) [bci: 30, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD     |   |   |    <||@
  Comment 1243 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1243 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1249 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1249 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5901[java.util.ArrayList.grow(int)]"
  method "HotSpotCompilation-5901[java.util.ArrayList.grow(int)]"
  date 1724269729765
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad81ac0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85a335a0fe66669089842400c0feff4883ec289041817f20030000000f85c70300009090909090909090909048896c24204889742408448bd28b4614448b1cc50c0000004585db0f851c0200009090909081f8a984bbc50f85840300009090909090909090909090909090904d8b9fb80100004183fa0bb80a000000418bd20f4cd08bc248c1e002488d40174883e0f8488bc84903cb493b8fc80100000f8776010000909090909090909090909090909049898fb8010000420f18841800010000420f18841840010000420f1884188001000049c7030100000041c74308581200004189530c488d48f04881f9000800000f835501000090909048c7c210000000e91500000066909090909090909049c7041300000000488d520890909090483bc277e4909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b561448c1e2034885d20f841d000000498b47284883f8000f84680200004883e8084989472849034738488910498bc348c1e803894614488bc64933c348c1e8160f8442000000488bc648c1e80948ba00e0368d787f00004803c28038027429f083042400803800741fc60000498b57484885d20f841b0200004883ea084989574849035758488902498bc3488b6c24204883c428493ba7500400000f8702020000c5f877c39090909090909090909048b85812002b787f0000488bf0e8f3ceb4fe0f1f84000000000085004c8bd8488b742408e9dffeffff909090909090909090498d7b104833c0f348aa488b742408e9befeffff9090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090452bd3418bcbd1e9418bf3418bd2666690e8d03ba0fe0f1f8400a0040003488b7424088b56148b0cd50800000049ba0000002b787f0000498d0c0a488b4970488b0948c1e203488bf28bd0894424146690e8903ba0fe0f1f8400e0040005488b74240841807f40000f842e000000448b5e1449c1e3034d85db0f841d0000004d8b57284983fa000f84dc0000004983ea084d8957284d0357384d891a4c8bd049c1ea03448956144c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84820000004983eb084d895f484d035f584d8913488b6c24204883c428493ba7500400000f8769000000c5f877c3909090e983feffff48896c2420e855939efee92afcfffff448891424e82663b4fee999fdfffff448890424e89784b4fee9e6fdfffff4488d0deafdffff49898f68040000e9fea0a0fef44c891c24e8f462b4fee925fffffff44c891424e86584b4feeb82f4488d0d83ffffff49898f68040000e9cfa0a0fef441c78784040000f5bfffff49c7879004000000000000e82d92a0fe0f1f84000000000041c787840400008f44ffff49c7879004000000000000e80a92a0fe0f1f84000000000041c78784040000f5b5ffff49c7879004000000000000e8e791a0fe0f1f840000000000e86033b4fef4e87a8fa0fef4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6c483f79 slotKind: QWORD  <||@
  Comment 73 26 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 78 28 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 81 30 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 84 32 r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 84 [rax:0, rsi:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 34 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9913892247766504 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: DWORD  <||@
  Comment 101 block B1 null  <||@
  Comment 101 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 101 38 NOP  <||@
  Comment 102 40 NOP  <||@
  Comment 103 42 NOP  <||@
  Comment 104 44 NOP  <||@
  Comment 105 46 CMPCONSTBRANCH x: rax|DWORD[_] trueDestinationProbability: 0.9999908146124536 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Object[0]{}]  <||@
  Comment 105 {NarrowOop[Object[0]{}]}  <||@
  Comment 117 block B2 null  <||@
  Comment 117 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 50 NOP  <||@
  Comment 118 52 NOP  <||@
  Comment 119 54 NOP  <||@
  Comment 120 56 NOP  <||@
  Comment 121 58 NOP  <||@
  Comment 122 60 NOP  <||@
  Comment 123 62 NOP  <||@
  Comment 124 64 NOP  <||@
  Comment 125 66 NOP  <||@
  Comment 126 68 NOP  <||@
  Comment 127 70 NOP  <||@
  Comment 128 72 NOP  <||@
  Comment 129 74 NOP  <||@
  Comment 130 76 NOP  <||@
  Comment 131 78 NOP  <||@
  Comment 132 80 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 139 82 CMP x: r10|DWORD y: 11 size: DWORD  <||@
  Comment 143 84 rax|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 148 86 rdx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rax|DWORD) condition: <  <||@
  Comment 154 88 rax|QWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 156 90 rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD  <||@
  Comment 160 92 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 164 94 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 168 96 rcx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 174 98 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 187 block B4 null  <||@
  Comment 187 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 187 138 NOP  <||@
  Comment 188 140 NOP  <||@
  Comment 189 142 NOP  <||@
  Comment 190 144 NOP  <||@
  Comment 191 146 NOP  <||@
  Comment 192 148 NOP  <||@
  Comment 193 150 NOP  <||@
  Comment 194 152 NOP  <||@
  Comment 195 154 NOP  <||@
  Comment 196 156 NOP  <||@
  Comment 197 158 NOP  <||@
  Comment 198 160 NOP  <||@
  Comment 199 162 NOP  <||@
  Comment 200 164 NOP  <||@
  Comment 201 166 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 208 168 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0  <||@
  Comment 217 170 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0  <||@
  Comment 226 172 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0  <||@
  Comment 235 174 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 242 176 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 242 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 250 178 MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 254 180 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 258 182 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 271 block B5 null  <||@
  Comment 271 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 271 186 NOP  <||@
  Comment 272 188 NOP  <||@
  Comment 273 190 NOP  <||@
  Comment 274 192 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 281 194 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 286 block B7 loop 0 depth 1 header:131|LoopBegin  <||@
  Comment 286 208 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 210 NOP  <||@
  Comment 289 212 NOP  <||@
  Comment 290 214 NOP  <||@
  Comment 291 216 NOP  <||@
  Comment 292 218 NOP  <||@
  Comment 293 220 NOP  <||@
  Comment 294 222 NOP  <||@
  Comment 295 224 MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 226 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 307 228 JUMP ~outgoingValues: [] destination: B7 -> B6  <||@
  Comment 307 block B6 loop 0 depth 1 header:131|LoopBegin  <||@
  Comment 307 196 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 198 NOP  <||@
  Comment 308 200 NOP  <||@
  Comment 309 202 NOP  <||@
  Comment 310 204 NOP  <||@
  Comment 311 206 CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 316 block B8 null  <||@
  Comment 316 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 232 NOP  <||@
  Comment 317 234 NOP  <||@
  Comment 318 236 NOP  <||@
  Comment 319 238 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 319 block B10 null  <||@
  Comment 319 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 268 NOP  <||@
  Comment 320 270 NOP  <||@
  Comment 321 272 NOP  <||@
  Comment 322 274 NOP  <||@
  Comment 323 276 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 323 278 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 323 block B11 null  <||@
  Comment 323 280 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 282 NOP  <||@
  Comment 324 284 NOP  <||@
  Comment 325 286 NOP  <||@
  Comment 326 288 NOP  <||@
  Comment 327 290 NOP  <||@
  Comment 328 292 NOP  <||@
  Comment 329 294 NOP  <||@
  Comment 330 296 NOP  <||@
  Comment 331 298 NOP  <||@
  Comment 332 300 NOP  <||@
  Comment 333 302 NOP  <||@
  Comment 334 304 NOP  <||@
  Comment 335 306 NOP  <||@
  Comment 336 308 NOP  <||@
  Comment 337 310 NOP  <||@
  Comment 338 312 NOP  <||@
  Comment 339 314 NOP  <||@
  Comment 340 316 NOP  <||@
  Comment 341 318 NOP  <||@
  Comment 342 320 NOP  <||@
  Comment 343 322 NOP  <||@
  Comment 344 324 NOP  <||@
  Comment 345 326 NOP  <||@
  Comment 346 328 NOP  <||@
  Comment 347 330 NOP  <||@
  Comment 348 332 NOP  <||@
  Comment 349 334 NOP  <||@
  Comment 350 336 NOP  <||@
  Comment 351 338 NOP  <||@
  Comment 352 340 NOP  <||@
  Comment 353 342 NOP  <||@
  Comment 354 344 NOP  <||@
  Comment 355 346 NOP  <||@
  Comment 356 348 NOP  <||@
  Comment 357 350 NOP  <||@
  Comment 358 352 NOP  <||@
  Comment 359 354 NOP  <||@
  Comment 360 356 NOP  <||@
  Comment 361 358 NOP  <||@
  Comment 362 360 NOP  <||@
  Comment 363 362 NOP  <||@
  Comment 364 364 NOP  <||@
  Comment 365 366 NOP  <||@
  Comment 366 368 NOP  <||@
  Comment 367 370 NOP  <||@
  Comment 368 372 NOP  <||@
  Comment 369 374 NOP  <||@
  Comment 370 376 NOP  <||@
  Comment 371 378 NOP  <||@
  Comment 372 380 NOP  <||@
  Comment 373 382 NOP  <||@
  Comment 374 384 NOP  <||@
  Comment 375 386 NOP  <||@
  Comment 376 388 NOP  <||@
  Comment 377 390 NOP  <||@
  Comment 378 392 NOP  <||@
  Comment 379 394 NOP  <||@
  Comment 380 396 NOP  <||@
  Comment 381 398 NOP  <||@
  Comment 382 400 NOP  <||@
  Comment 383 402 NOP  <||@
  Comment 384 404 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb  <||@
  Comment 440 406 rax|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3  <||@
  Comment 447 408 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 450 410 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rdx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb  <||@
  Comment 532 412 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 535 414 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 544 POLL_RETURN_FAR  <||@
  Comment 561 block B3 null  <||@
  Comment 561 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 102 NOP  <||@
  Comment 562 104 NOP  <||@
  Comment 563 106 NOP  <||@
  Comment 564 108 NOP  <||@
  Comment 565 110 NOP  <||@
  Comment 566 112 NOP  <||@
  Comment 567 114 NOP  <||@
  Comment 568 116 NOP  <||@
  Comment 569 118 NOP  <||@
  Comment 570 120 NOP  <||@
  Comment 571 122 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 571 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 581 124 rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 584 126 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 584 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 589 [stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 597 128 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 597 [rax:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 597 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 599 130 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 602 132 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 607 134 JUMP ~outgoingValues: [] destination: B3 -> B11  <||@
  Comment 612 block B9 null  <||@
  Comment 612 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 612 242 NOP  <||@
  Comment 613 244 NOP  <||@
  Comment 614 246 NOP  <||@
  Comment 615 248 NOP  <||@
  Comment 616 250 NOP  <||@
  Comment 617 252 NOP  <||@
  Comment 618 254 NOP  <||@
  Comment 619 256 NOP  <||@
  Comment 620 258 NOP  <||@
  Comment 621 260 ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 631 262 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 636 264 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 641 block B13 null  <||@
  Comment 641 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 641 428 NOP  <||@
  Comment 642 430 NOP  <||@
  Comment 643 432 NOP  <||@
  Comment 644 434 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 644 block B14 null  <||@
  Comment 644 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 644 438 NOP  <||@
  Comment 645 440 NOP  <||@
  Comment 646 442 NOP  <||@
  Comment 647 444 NOP  <||@
  Comment 648 446 NOP  <||@
  Comment 649 448 NOP  <||@
  Comment 650 450 NOP  <||@
  Comment 651 452 NOP  <||@
  Comment 652 454 NOP  <||@
  Comment 653 456 NOP  <||@
  Comment 654 458 NOP  <||@
  Comment 655 460 NOP  <||@
  Comment 656 462 NOP  <||@
  Comment 657 464 NOP  <||@
  Comment 658 466 NOP  <||@
  Comment 659 468 NOP  <||@
  Comment 660 470 NOP  <||@
  Comment 661 472 NOP  <||@
  Comment 662 474 NOP  <||@
  Comment 663 476 NOP  <||@
  Comment 664 478 NOP  <||@
  Comment 665 480 NOP  <||@
  Comment 666 482 NOP  <||@
  Comment 667 484 NOP  <||@
  Comment 668 486 NOP  <||@
  Comment 669 488 NOP  <||@
  Comment 670 490 NOP  <||@
  Comment 671 492 NOP  <||@
  Comment 672 494 NOP  <||@
  Comment 673 496 NOP  <||@
  Comment 674 498 NOP  <||@
  Comment 675 500 NOP  <||@
  Comment 676 502 NOP  <||@
  Comment 677 504 NOP  <||@
  Comment 678 506 NOP  <||@
  Comment 679 508 NOP  <||@
  Comment 680 510 NOP  <||@
  Comment 681 512 NOP  <||@
  Comment 682 514 NOP  <||@
  Comment 683 516 NOP  <||@
  Comment 684 518 NOP  <||@
  Comment 685 520 NOP  <||@
  Comment 686 522 NOP  <||@
  Comment 687 524 NOP  <||@
  Comment 688 526 NOP  <||@
  Comment 689 528 NOP  <||@
  Comment 690 530 NOP  <||@
  Comment 691 532 NOP  <||@
  Comment 692 534 NOP  <||@
  Comment 693 536 NOP  <||@
  Comment 694 538 NOP  <||@
  Comment 695 540 NOP  <||@
  Comment 696 542 NOP  <||@
  Comment 697 544 NOP  <||@
  Comment 698 546 NOP  <||@
  Comment 699 548 NOP  <||@
  Comment 700 550 NOP  <||@
  Comment 701 552 NOP  <||@
  Comment 702 554 NOP  <||@
  Comment 703 556 NOP  <||@
  Comment 704 558 NOP  <||@
  Comment 705 560 NOP  <||@
  Comment 706 562 NOP  <||@
  Comment 707 564 NOP  <||@
  Comment 708 566 NOP  <||@
  Comment 709 568 NOP  <||@
  Comment 710 570 NOP  <||@
  Comment 711 572 NOP  <||@
  Comment 712 574 NOP  <||@
  Comment 713 576 NOP  <||@
  Comment 714 578 NOP  <||@
  Comment 715 580 NOP  <||@
  Comment 716 582 NOP  <||@
  Comment 717 584 NOP  <||@
  Comment 718 586 NOP  <||@
  Comment 719 588 NOP  <||@
  Comment 720 590 NOP  <||@
  Comment 721 592 NOP  <||@
  Comment 722 594 NOP  <||@
  Comment 723 596 NOP  <||@
  Comment 724 598 NOP  <||@
  Comment 725 600 NOP  <||@
  Comment 726 602 NOP  <||@
  Comment 727 604 NOP  <||@
  Comment 728 606 NOP  <||@
  Comment 729 608 NOP  <||@
  Comment 730 610 r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 733 612 rcx|DWORD = SHR value: r11|DWORD size: DWORD  <||@
  Comment 738 614 rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 741 616 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 744 618 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27]  <||@
  Comment 747 {HotSpotMethod<ArraysSupport.newLength(int, int, int)>}  <||@
  Comment 747 INVOKESTATIC  <||@
  Comment 752 [stack:8]at java.util.ArrayList.grow(ArrayList.java:234) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |-   <||@
  Comment 760 620 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 765 622 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 768 624 rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:30]  <||@
  Comment 768 [rdx:0, rsi:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:234) [bci: 30, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD     |   |   |    <||@
  Comment 768 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 775 626 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 785 628 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 140154094223360 shift: 0  <||@
  Comment 789 630 rcx|QWORD = MOV input: [rcx|QWORD + 112] size: QWORD  <||@
  Comment 793 632 rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD  <||@
  Comment 796 634 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3  <||@
  Comment 800 636 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 803 638 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 805 640 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 809 642 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(Object[], int, Class)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:6, 37]  <||@
  Comment 811 {HotSpotMethod<Arrays.copyOf(Object[], int, Class)>}  <||@
  Comment 811 INVOKESTATIC  <||@
  Comment 816 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.grow(ArrayList.java:237) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:40|QWORD[.]  |-  |-  |stack:28|DWORD 
     stack:   |stack:40|QWORD[.]  |   |   |                 <||@
  Comment 824 644 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 829 646 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb  <||@
  Comment 886 648 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7e8d01e1 encoding: base: 0 shift: 3  <||@
  Comment 893 650 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 897 652 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@27ec71eb  <||@
  Comment 991 654 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1000 POLL_RETURN_FAR  <||@
  Comment 1017 block B12 null  <||@
  Comment 1017 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 418 NOP  <||@
  Comment 1018 420 NOP  <||@
  Comment 1019 422 NOP  <||@
  Comment 1020 424 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 1030 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1045 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1060 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1085 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1095 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1110 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1132 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1160 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1165 [rax:0, rsi:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 1195 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1200 [rax:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 1230 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1235 [rdx:0, rsi:0, stack:8]at java.util.ArrayList.grow(ArrayList.java:234) [bci: 30, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD     |   |   |    <||@
  Comment 1243 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1243 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1249 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1249 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
