begin_compilation
  name " HotSpotOSRCompilation-8654[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)@3]"
  method "HotSpotOSRCompilation-8654[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)@3]"
  date 1724269711253
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a624 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a624  <|@  <|@
f <@~|@floating>@ <|@
tid j620 <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v621 v985 v986 v987 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j620 
index: - 
=== Succesors ===
=== Usages ===
a624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j620 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a624 <|@
d <@d|@=== Debug Properties ===
accessStamp: a java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
lastLocationAccess: - 
=== Succesors ===
next: a627 
=== Usages ===
v989 ?61 ?11 ?258 v978 ?199 v964 ?150 ?71 ?28 ?222 
=== Predecessor ===
v619 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v985 lastLocationAccess: - #next: a627  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: j620 
index: - 
=== Succesors ===
=== Usages ===
a627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j620 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a627 <|@
d <@d|@=== Debug Properties ===
accessStamp: a java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
=== Succesors ===
next: a629 
=== Usages ===
?61 ?150 ?71 v485 v990 ?199 ?11 ?28 v481 v457 v117 v168 ?222 v235 v467 v471 ?258 v453 
=== Predecessor ===
a624 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - #next: a629  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j620 
index: - 
=== Succesors ===
=== Usages ===
a629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j620 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a629 <|@
d <@d|@=== Debug Properties ===
accessStamp: a java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
lastLocationAccess: - 
=== Succesors ===
next: v621 
=== Usages ===
v294 ?61 v963 v988 
=== Predecessor ===
a627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v987 lastLocationAccess: - #next: v621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{OSR_migration_end(long)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}
descriptorName: OSR_migration_end
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j620 
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
a629 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j620 #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a629 
=== Succesors ===
=== Usages ===
v857 v785 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a629  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v783 
falseSuccessor: v784 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v783 #falseSuccessor: v784  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
rawvalue: null
stableDimension: 0
stamp: Klass* NULL
stampKind: Klass*
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v882  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a629 
index: - 
=== Succesors ===
=== Usages ===
v882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
lastLocationAccess: - 
=== Succesors ===
next: v782 
=== Usages ===
v792 
=== Predecessor ===
v784 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v988 lastLocationAccess: - #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v882 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v882  <|@  <|@
f <@*|@fixed>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: Klass*
valueDescription: Klass*
=== Inputs ===
merge: v786 
values: v787 v792 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v786 values: v787 v792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v781 v782 
=== Succesors ===
next: v857 
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v781 v782 #next: v857  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: aload
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
sourceFile: EconomicMapImpl.java
sourceLine: 305
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - - - a629 
=== Succesors ===
=== Usages ===
v741 i884 i886 v889 v883 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - - - a629  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v853 
falseSuccessor: v856 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v853 #falseSuccessor: v856  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
v853 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v793 
y: v630 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v793 y: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v854 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v854 #falseSuccessor: v536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
v854 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v851 v852 
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v851 v852 #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a624 
index: - 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-76092|0xfffffffffffed6c4]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v989 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
v953 
=== Predecessor ===
v850 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v989 lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v883 
y: v952 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v883 y: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v949 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v538 #falseSuccessor: v949  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i884 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a629 
index: - 
=== Succesors ===
=== Usages ===
i884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i884 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-76555|0xfffffffffffed4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v963 
lastLocationAccess: - 
=== Succesors ===
next: a885 
=== Usages ===
i67 ?71 ?150 i101 i101 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v963 lastLocationAccess: - #next: a885  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a624 
index: - 
=== Succesors ===
=== Usages ===
a885 a890 a898 a907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a885 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i886 
=== Usages ===
a307 v965 
=== Predecessor ===
i884 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 lastLocationAccess: - #next: i886  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a885 
=== Succesors ===
=== Usages ===
i886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i886 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-79115|0xfffffffffffecaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v965 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v313 
=== Predecessor ===
a885 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v965 lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 i67 i220 i160 i267 i209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i884 
y: i23 
=== Succesors ===
=== Usages ===
j486 i160 v313 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i884 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i886 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i67 y: i886  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v550 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
i886 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v550 #falseSuccessor: v552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a887 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a887  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a885 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a885  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i67 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i67  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a307 
index: j486 
=== Succesors ===
=== Usages ===
a887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a307 index: j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a887 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
a323 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a887 
=== Succesors ===
=== Usages ===
v485 v117 v481 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a887  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a323 
y: a627 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a323 y: a627  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.15719294999340205
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
a887 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v119 #falseSuccessor: v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a888 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a888  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a624 
index: - 
=== Succesors ===
=== Usages ===
a906 a896 a888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
=== Succesors ===
next: v126 
=== Usages ===
a473 v482 v500 v501 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a888 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a888  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a627 
index: - 
=== Succesors ===
=== Usages ===
v889 v897 v902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 v72 v223 ?28 ?222 ?71 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a494 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
rawvalue: Equivalence$3@441713316
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$3
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$3@441713316]
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 v498 v500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a496 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
rawvalue: Equivalence$1@811395695
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$1
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$1@811395695]
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 v499 v501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9097640391284887
stamp: void
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
a888 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v125 #falseSuccessor: v124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a888 
y: a496 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a888 y: a496  <|@  <|@
tid ?150 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - i884 
=== Succesors ===
=== Usages ===
?699 ?700 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - i884  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.743297100699551
stamp: void
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v138 #falseSuccessor: v129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-121355|0xfffffffffffe25f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v990 
lastLocationAccess: - 
=== Succesors ===
next: v478 
=== Usages ===
v808 
=== Predecessor ===
v138 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v990 lastLocationAccess: - #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v889 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v889  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v808 
index: - 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v808 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
lastLocationAccess: - 
=== Succesors ===
next: j480 
=== Usages ===
v984 v481 
=== Predecessor ===
v889 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v983 lastLocationAccess: - #next: j480  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v478 
index: - 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v478 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
lastLocationAccess: - 
=== Succesors ===
next: i141 
=== Usages ===
v481 
=== Predecessor ===
v478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v984 lastLocationAccess: - #next: i141  <|@  <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j480 
metaspaceMethod: v478 
arguments: a627 a323 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j480 metaspaceMethod: v478 arguments: a627 a323  <|@  <|@
tid ?700 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?150 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v481 
stateDuring: ?700 
=== Succesors ===
next: v154 
=== Usages ===
i153 
=== Predecessor ===
j480 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v481 stateDuring: ?700 #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
i141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a888 
y: a494 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a888 y: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.0011327550265468342
stamp: void
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v133 #falseSuccessor: v137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i145 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i145  <|@  <|@
f <@~|@floating>@ <|@
tid a473 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a888 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a888  <|@  <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a473 a627 a323 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a473 a627 a323  <|@  <|@
tid ?699 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?150 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v485 
stateDuring: ?699 
=== Succesors ===
next: v155 
=== Usages ===
i153 
=== Predecessor ===
v137 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v485 stateDuring: ?699 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
i145 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v151 
values: i141 i145 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v151 values: i141 i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v154 v155 
=== Succesors ===
next: v75 
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v155 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i153 
y: i29 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i153 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.9887265628655122
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v929 
falseSuccessor: v925 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v929 #falseSuccessor: v925  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v930  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v930 v156 v157 
=== Succesors ===
next: a890 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v930 v156 v157 #next: a890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a890 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i891 
=== Usages ===
a325 v967 
=== Predecessor ===
v928 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 lastLocationAccess: - #next: i891  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i29 a624 a627 - i884 
=== Succesors ===
=== Usages ===
v759 i891 v897 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i29 a624 a627 - i884  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a890 
=== Succesors ===
=== Usages ===
i891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i891 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-83723|0xfffffffffffeb8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v967 
lastLocationAccess: - 
=== Succesors ===
next: v565 
=== Usages ===
v331 v349 
=== Predecessor ===
a890 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v967 lastLocationAccess: - #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i67 
y: i23 
=== Succesors ===
=== Usages ===
j487 v331 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i67 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i891 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i160 y: i891  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v331 
=== Succesors ===
trueSuccessor: v562 
falseSuccessor: v564 
=== Usages ===
=== Predecessor ===
i891 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v331 #trueSuccessor: v562 #falseSuccessor: v564  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a892 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a892  <|@  <|@
f <@~|@floating>@ <|@
tid a325 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
v970 v968 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a890  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i160  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a325 
index: j487 
=== Succesors ===
=== Usages ===
a892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a325 index: j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a892 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
lastLocationAccess: - 
=== Succesors ===
next: v813 
=== Usages ===
v991 v340 v969 
=== Predecessor ===
v562 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v968 lastLocationAccess: - #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 52]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a892 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a892  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v811 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
a892 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v811 #falseSuccessor: v812  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v811 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v893  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a892 
=== Succesors ===
=== Usages ===
v893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
v955 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v991 lastLocationAccess: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v955 v956 v957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v893 
y: v954 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v893 y: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.996048372267913
stamp: void
=== Inputs ===
condition: v955 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v933 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v955 #trueSuccessor: v81 #falseSuccessor: v933  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: i894 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a892 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
i220 ?222 ?258 i101 i101 
=== Predecessor ===
v81 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i894 
y: i23 
=== Succesors ===
=== Usages ===
j488 i267 v349 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i894 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i220 
y: i891 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i220 y: i891  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
i894 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v570 #falseSuccessor: v572  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a895 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a895  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i220 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i220  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a325 
index: j488 
=== Succesors ===
=== Usages ===
a895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a325 index: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a895 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
lastLocationAccess: - 
=== Succesors ===
next: v238 
=== Usages ===
a357 
=== Predecessor ===
v570 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v970 lastLocationAccess: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid a357 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a895 
=== Succesors ===
=== Usages ===
v235 v467 v471 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a895  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a357 
y: a627 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a357 y: a627  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.15719294999340205
stamp: void
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
a895 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v237 #falseSuccessor: v236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v960  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v237 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a896 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a896 <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
=== Succesors ===
next: v243 
=== Usages ===
a459 v468 v498 v499 
=== Predecessor ===
v236 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a896 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a896  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9097640391284887
stamp: void
=== Inputs ===
condition: v468 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
a896 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v468 #trueSuccessor: v242 #falseSuccessor: v241  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a896 
y: a496 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a896 y: a496  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - i894 
=== Succesors ===
=== Usages ===
?701 ?702 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - i894  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.743297100699551
stamp: void
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v250 #falseSuccessor: v245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-117771|0xfffffffffffe33f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v990 
lastLocationAccess: - 
=== Succesors ===
next: v464 
=== Usages ===
v822 
=== Predecessor ===
v250 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v990 lastLocationAccess: - #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v897 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v822 
index: - 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
lastLocationAccess: - 
=== Succesors ===
next: j466 
=== Usages ===
v982 v467 
=== Predecessor ===
v897 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v981 lastLocationAccess: - #next: j466  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v464 
index: - 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
lastLocationAccess: - 
=== Succesors ===
next: i253 
=== Usages ===
v467 
=== Predecessor ===
v464 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v982 lastLocationAccess: - #next: i253  <|@  <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j466 
metaspaceMethod: v464 
arguments: a627 a357 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j466 metaspaceMethod: v464 arguments: a627 a357  <|@  <|@
tid ?702 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?258 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i253 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v467 
stateDuring: ?702 
=== Succesors ===
next: v262 
=== Usages ===
i261 
=== Predecessor ===
j466 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v467 stateDuring: ?702 #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a896 
y: a494 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a896 y: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.0011327550265468342
stamp: void
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v246 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v246 #falseSuccessor: v249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i256 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i256  <|@  <|@
f <@~|@floating>@ <|@
tid a459 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a896 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a896  <|@  <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a459 a627 a357 
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a459 a627 a357  <|@  <|@
tid ?701 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?258 
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i256 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v471 
stateDuring: ?701 
=== Succesors ===
next: v263 
=== Usages ===
i261 
=== Predecessor ===
v249 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v471 stateDuring: ?701 #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i256 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v259 
values: i253 i256 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v259 values: i253 i256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v262 v263 
=== Succesors ===
next: v226 
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v262 v263 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i29 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i261 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.9887265628655122
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v941 
falseSuccessor: v937 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v941 #falseSuccessor: v937  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v941 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v942 v264 v265 
=== Succesors ===
next: a898 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v942 v264 v265 #next: a898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a898 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i899 
=== Usages ===
a359 v971 
=== Predecessor ===
v940 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 lastLocationAccess: - #next: i899  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i29 a624 a627 - i894 
=== Succesors ===
=== Usages ===
v996 i899 v902 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i29 a624 a627 - i894  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a898 
=== Succesors ===
=== Usages ===
i899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i899 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-92427|0xfffffffffffe96f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?222 
guard: - 
address: v971 
lastLocationAccess: - 
=== Succesors ===
next: v585 
=== Usages ===
v375 
=== Predecessor ===
a898 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?222 guard: - address: v971 lastLocationAccess: - #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i220 
y: i23 
=== Succesors ===
=== Usages ===
j489 v375 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i220 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 49]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i267 
y: i899 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i267 y: i899  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v582 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
i899 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v582 #falseSuccessor: v584  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a900 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a900  <|@  <|@
f <@~|@floating>@ <|@
tid a359 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a898 
=== Succesors ===
=== Usages ===
v972 a286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a898  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i267 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i267  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a359 
index: j489 
=== Succesors ===
=== Usages ===
a900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a359 index: j489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a900 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
lastLocationAccess: - 
=== Succesors ===
next: v827 
=== Usages ===
a373 v385 v992 
=== Predecessor ===
v582 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v972 lastLocationAccess: - #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 52]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a900 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a900  <|@  <|@
f <@*|@fixed>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v825 
falseSuccessor: v826 
=== Usages ===
=== Predecessor ===
a900 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v825 #falseSuccessor: v826  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a900 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
v956 
=== Predecessor ===
v826 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v992 lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v901 
y: v954 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v901 y: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.996048372267913
stamp: void
=== Inputs ===
condition: v956 
=== Succesors ===
trueSuccessor: v229 
falseSuccessor: v945 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v956 #trueSuccessor: v229 #falseSuccessor: v945  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-113675|0xfffffffffffe43f5]
deoptSpeculation: long[1944|0x798]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?222 
guard: - 
address: v990 
lastLocationAccess: - 
=== Succesors ===
next: v6 
=== Usages ===
v836 
=== Predecessor ===
v229 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?222 guard: - address: v990 lastLocationAccess: - #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid a373 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a900 
=== Succesors ===
=== Usages ===
a283 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a900  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v902 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a# org.graalvm.collections.EconomicMapImpl$CollisionLink
valueDescription: a java.lang.Object
=== Inputs ===
merge: v7 
values: a373 a422 
=== Succesors ===
=== Usages ===
?11 v973 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: a373 a422  <|@  <|@
f <@~|@floating>@ <|@
tid a286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a java.lang.Object[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v7 
values: a359 a408 
=== Succesors ===
=== Usages ===
v975 v974 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: a359 a408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
osrLoop: true
peelings: 2
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: i903 
=== Usages ===
a283 v42 v52 v32 a286 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: i903  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: aload
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 305
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - - - a283 
=== Succesors ===
=== Usages ===
v994 i903 i904 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - - - a283  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a283 
index: - 
=== Succesors ===
=== Usages ===
i903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a283 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-99595|0xfffffffffffe7af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v973 
lastLocationAccess: - 
=== Succesors ===
next: i904 
=== Usages ===
i101 ?199 i24 ?28 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v973 lastLocationAccess: - #next: i904  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
i904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i904 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-100875|0xfffffffffffe75f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v974 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
v398 
=== Predecessor ===
i903 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v974 lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i903 
y: i23 
=== Succesors ===
=== Usages ===
j491 i209 v398 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i903 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i24 
y: i904 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i24 y: i904  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v398 
=== Succesors ===
trueSuccessor: v602 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
i904 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v398 #trueSuccessor: v602 #falseSuccessor: v604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a905 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a905  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i24 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a286 
index: j491 
=== Succesors ===
=== Usages ===
a905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: j491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a905 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
a406 
=== Predecessor ===
v602 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v975 lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a406 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a905 
=== Succesors ===
=== Usages ===
v457 v168 v453 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a905  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a406 
y: a627 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a406 y: a627  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.15719294999340205
stamp: void
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
a905 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v170 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
v170 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a906 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a906 <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
=== Succesors ===
next: v177 
=== Usages ===
a442 v454 v495 v497 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a906 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a906  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9097640391284887
stamp: void
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
a906 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v176 #falseSuccessor: v175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v176 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a906 
y: a496 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a906 y: a496  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - i903 
=== Succesors ===
=== Usages ===
?703 ?704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - i903  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.743297100699551
stamp: void
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v187 #falseSuccessor: v179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v902 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v836 
index: - 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v836 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
lastLocationAccess: - 
=== Succesors ===
next: j452 
=== Usages ===
v980 v453 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v979 lastLocationAccess: - #next: j452  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v449 
index: - 
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v449 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
lastLocationAccess: - 
=== Succesors ===
next: i190 
=== Usages ===
v453 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v980 lastLocationAccess: - #next: i190  <|@  <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j452 
metaspaceMethod: v449 
arguments: a627 a406 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j452 metaspaceMethod: v449 arguments: a627 a406  <|@  <|@
tid ?703 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?199 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v453 
stateDuring: ?703 
=== Succesors ===
next: v203 
=== Usages ===
i202 
=== Predecessor ===
j452 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v453 stateDuring: ?703 #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
i190 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a906 
y: a494 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a906 y: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.0011327550265468342
stamp: void
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v183 #falseSuccessor: v186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i194 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i194  <|@  <|@
f <@~|@floating>@ <|@
tid a442 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a906 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a906  <|@  <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a442 a627 a406 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a442 a627 a406  <|@  <|@
tid ?704 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?199 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v457 
stateDuring: ?704 
=== Succesors ===
next: v204 
=== Usages ===
i202 
=== Predecessor ===
v186 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v457 stateDuring: ?704 #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
i194 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v200 
values: i190 i194 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v200 values: i190 i194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v203 v204 
=== Succesors ===
next: v36 
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v203 v204 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i202 
y: i29 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i202 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.9887265628655122
stamp: void
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v917 
falseSuccessor: v913 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v917 #falseSuccessor: v913  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v917 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v918 v205 v206 
=== Succesors ===
next: a907 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v918 v205 v206 #next: a907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a907 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i908 
=== Usages ===
a408 v976 
=== Predecessor ===
v916 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 lastLocationAccess: - #next: i908  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i29 a624 a627 - i903 
=== Succesors ===
=== Usages ===
v995 v618 i908 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i29 a624 a627 - i903  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a907 
=== Succesors ===
=== Usages ===
i908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i908 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-104971|0xfffffffffffe65f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v976 
lastLocationAccess: - 
=== Succesors ===
next: v613 
=== Usages ===
v424 
=== Predecessor ===
a907 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v976 lastLocationAccess: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i24 
y: i23 
=== Succesors ===
=== Usages ===
j492 v424 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i24 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 49]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i908 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i209 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v424 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
i908 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v424 #trueSuccessor: v610 #falseSuccessor: v612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a909 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a909  <|@  <|@
f <@~|@floating>@ <|@
tid a408 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a907 
=== Succesors ===
=== Usages ===
v977 a286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a907  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i209 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i209  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a408 
index: j492 
=== Succesors ===
=== Usages ===
a909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a408 index: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a909 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
lastLocationAccess: - 
=== Succesors ===
next: v841 
=== Usages ===
a422 v434 v993 
=== Predecessor ===
v610 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 lastLocationAccess: - #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 52]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a909 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a909  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v434 
=== Succesors ===
trueSuccessor: v839 
falseSuccessor: v840 
=== Usages ===
=== Predecessor ===
a909 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v434 #trueSuccessor: v839 #falseSuccessor: v840  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a909 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
lastLocationAccess: - 
=== Succesors ===
next: v45 
=== Usages ===
v957 
=== Predecessor ===
v840 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v993 lastLocationAccess: - #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v910 
y: v954 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v910 y: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.996048372267913
stamp: void
=== Inputs ===
condition: v957 
=== Succesors ===
trueSuccessor: v44 
falseSuccessor: v921 
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v957 #trueSuccessor: v44 #falseSuccessor: v921  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?28 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?28 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid a422 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a909 
=== Succesors ===
=== Usages ===
a283 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a909  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v922 v837 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v922 v837 #next: v42  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 415
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
v913 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v914 v201 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v914 v201 #next: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 399
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v945 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v996 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v996  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 366
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?222 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v937 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
rawvalue: -89627
stableDimension: 0
stamp: i32 [-89627]
stampKind: i32
value: int[-89627|0xfffffffffffea1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v933 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v93 v285 v959 v961 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v93 v285 v959 v961 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 61]
stamp: void
=== Inputs ===
memoryMap: - 
result: i54 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid i761 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
rawvalue: -85019
stableDimension: 0
stamp: i32 [-85019]
stampKind: i32
value: int[-85019|0xfffffffffffeb3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [-89627 - -85019] bits:1...10101x00x111100101
valueDescription: i32
=== Inputs ===
merge: v754 
values: i761 i765 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v754 values: i761 i765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v760 v764 
=== Succesors ===
next: v759 
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v760 v764 #next: v759  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i757 
speculation: j718 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i757 speculation: j718  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v925 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v96 
values: i903 i884 i894 i884 i894 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v96 values: i903 i884 i894 i884 i894  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v97 v98 v284 v958 v960 
=== Succesors ===
next: v53 
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v97 v98 v284 v958 v960 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 31]
stamp: void
=== Inputs ===
memoryMap: - 
result: i101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid i751 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: -80411
stableDimension: 0
stamp: i32 [-80411]
stampKind: i32
value: int[-80411|0xfffffffffffec5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid j747 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: -76092
stableDimension: 0
stamp: i32 [-76092]
stampKind: i32
value: int[-76092|0xfffffffffffed6c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v949 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: -75836
stableDimension: 0
stamp: i32 [-75836]
stampKind: i32
value: int[-75836|0xfffffffffffed7c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i32 [-80411 - -75836] bits:1...10110x01xx11x0010x
valueDescription: i32
=== Inputs ===
merge: v736 
values: i743 i746 i751 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v736 values: i743 i746 i751  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i64 [0 - 660] bits:0...0x0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v736 
values: j744 j747 j718 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v736 values: j744 j747 j718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v742 v745 v750 
=== Succesors ===
next: v741 
=== Usages ===
i739 j740 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v742 v745 v750 #next: v741  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
stateBefore: ?61 
actionAndReason: i739 
speculation: j740 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?61 actionAndReason: i739 speculation: j740  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a624 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a624  <|@  <|@
f <@~|@floating>@ <|@
tid j620 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v621 v985 v986 v987 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v0|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j620 
index: - 
=== Succesors ===
=== Usages ===
a624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j620 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a624 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
lastLocationAccess: - 
=== Succesors ===
next: a627 
=== Usages ===
v989 ?61 ?11 ?258 v978 ?199 v964 ?150 ?71 ?28 ?222 
=== Predecessor ===
v619 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v985 lastLocationAccess: - #next: a627  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v0|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: j620 
index: - 
=== Succesors ===
=== Usages ===
a627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j620 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a627 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
=== Succesors ===
next: a629 
=== Usages ===
?61 ?150 ?71 v485 v990 ?199 ?11 ?28 v481 v457 v117 v168 ?222 v235 v467 v471 ?258 v453 
=== Predecessor ===
a624 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - #next: a629  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v0|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j620 
index: - 
=== Succesors ===
=== Usages ===
a629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j620 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a629 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
lastLocationAccess: - 
=== Succesors ===
next: v621 
=== Usages ===
v294 ?61 v963 v988 
=== Predecessor ===
a627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v987 lastLocationAccess: - #next: v621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{OSR_migration_end(long)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}
descriptorName: OSR_migration_end
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j620 
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
a629 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j620 #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a629 
=== Succesors ===
=== Usages ===
v857 v785 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a629  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v783 
falseSuccessor: v784 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v783 #falseSuccessor: v784  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
rawvalue: null
stableDimension: 0
stamp: Klass* NULL
stampKind: Klass*
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v882  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a629 
index: - 
=== Succesors ===
=== Usages ===
v882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v882 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
lastLocationAccess: - 
=== Succesors ===
next: v782 
=== Usages ===
v792 
=== Predecessor ===
v784 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v988 lastLocationAccess: - #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v882 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v882  <|@  <|@
f <@*|@fixed>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid v793 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: Klass*
valueDescription: Klass*
=== Inputs ===
merge: v786 
values: v787 v792 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v786 values: v787 v792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v781 v782 
=== Succesors ===
next: v857 
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v781 v782 #next: v857  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: aload
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
sourceFile: EconomicMapImpl.java
sourceLine: 305
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - - - a629 
=== Succesors ===
=== Usages ===
v741 i884 i886 v889 v883 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - - - a629  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v853 
falseSuccessor: v856 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v853 #falseSuccessor: v856  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
v853 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v793 
y: v630 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v793 y: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v854 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v854 #falseSuccessor: v536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
v854 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v851 v852 
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v851 v852 #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a624 
index: - 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-76092|0xfffffffffffed6c4]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v989 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
v953 
=== Predecessor ===
v850 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v989 lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v883 
y: v952 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v883 y: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v949 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v538 #falseSuccessor: v949  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i884 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a629 
index: - 
=== Succesors ===
=== Usages ===
i884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i884 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-76555|0xfffffffffffed4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v963 
lastLocationAccess: - 
=== Succesors ===
next: a885 
=== Usages ===
i67 ?71 ?150 i101 i101 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v963 lastLocationAccess: - #next: a885  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a624 
index: - 
=== Succesors ===
=== Usages ===
a885 a890 a898 a907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a885 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i886 
=== Usages ===
a307 v965 
=== Predecessor ===
i884 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 lastLocationAccess: - #next: i886  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v10|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a885 
=== Succesors ===
=== Usages ===
i886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i886 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-79115|0xfffffffffffecaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v965 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v313 
=== Predecessor ===
a885 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v965 lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 i67 i220 i160 i267 i209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i884 
y: i23 
=== Succesors ===
=== Usages ===
j486 i160 v313 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i884 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i886 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i67 y: i886  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v550 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
i886 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v550 #falseSuccessor: v552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a887 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a887  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a885 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a885  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i67 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i67  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [v12|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a307 
index: j486 
=== Succesors ===
=== Usages ===
a887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a307 index: j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a887 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
a323 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a887 
=== Succesors ===
=== Usages ===
v485 v117 v481 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a887  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a323 
y: a627 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a323 y: a627  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.15719294999340205
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
a887 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v119 #falseSuccessor: v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a888 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a888  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a624 
index: - 
=== Succesors ===
=== Usages ===
a906 a896 a888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
result v15|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
=== Succesors ===
next: v126 
=== Usages ===
a473 v482 v500 v501 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a888 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a888  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a627 
index: - 
=== Succesors ===
=== Usages ===
v889 v897 v902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 v72 v223 ?28 ?222 ?71 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a494 <|@
result NarrowOop[Equivalence$3@441713316] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
rawvalue: Equivalence$3@441713316
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$3
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$3@441713316]
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 v498 v500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a496 <|@
result NarrowOop[Equivalence$1@811395695] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
rawvalue: Equivalence$1@811395695
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$1
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$1@811395695]
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 v499 v501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9097640391284887
stamp: void
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
a888 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v125 #falseSuccessor: v124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a888 
y: a496 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a888 y: a496  <|@  <|@
tid ?150 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - i884 
=== Succesors ===
=== Usages ===
?699 ?700 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - i884  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.743297100699551
stamp: void
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v138 #falseSuccessor: v129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-121355|0xfffffffffffe25f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v990 
lastLocationAccess: - 
=== Succesors ===
next: v478 
=== Usages ===
v808 
=== Predecessor ===
v138 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v990 lastLocationAccess: - #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v889 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v889  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v17|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v808 
index: - 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v808 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
lastLocationAccess: - 
=== Succesors ===
next: j480 
=== Usages ===
v984 v481 
=== Predecessor ===
v889 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v983 lastLocationAccess: - #next: j480  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v19|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v478 
index: - 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v478 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j480 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
lastLocationAccess: - 
=== Succesors ===
next: i141 
=== Usages ===
v481 
=== Predecessor ===
v478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v984 lastLocationAccess: - #next: i141  <|@  <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j480 
metaspaceMethod: v478 
arguments: a627 a323 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j480 metaspaceMethod: v478 arguments: a627 a323  <|@  <|@
tid ?700 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?150 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i141 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v481 
stateDuring: ?700 
=== Succesors ===
next: v154 
=== Usages ===
i153 
=== Predecessor ===
j480 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v481 stateDuring: ?700 #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
i141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a888 
y: a494 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a888 y: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.0011327550265468342
stamp: void
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v133 #falseSuccessor: v137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i145 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i145  <|@  <|@
f <@~|@floating>@ <|@
tid a473 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a888 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a888  <|@  <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a473 a627 a323 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a473 a627 a323  <|@  <|@
tid ?699 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?150 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i145 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v485 
stateDuring: ?699 
=== Succesors ===
next: v155 
=== Usages ===
i153 
=== Predecessor ===
v137 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v485 stateDuring: ?699 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
i145 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i153 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v151 
values: i141 i145 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v151 values: i141 i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v154 v155 
=== Succesors ===
next: v75 
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v155 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i153 
y: i29 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i153 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.9887265628655122
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v929 
falseSuccessor: v925 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v929 #falseSuccessor: v925  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v930  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v930 v156 v157 
=== Succesors ===
next: a890 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v930 v156 v157 #next: a890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a890 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i891 
=== Usages ===
a325 v967 
=== Predecessor ===
v928 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 lastLocationAccess: - #next: i891  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i29 a624 a627 - i884 
=== Succesors ===
=== Usages ===
v759 i891 v897 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i29 a624 a627 - i884  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [v25|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a890 
=== Succesors ===
=== Usages ===
i891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i891 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-83723|0xfffffffffffeb8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v967 
lastLocationAccess: - 
=== Succesors ===
next: v565 
=== Usages ===
v331 v349 
=== Predecessor ===
a890 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v967 lastLocationAccess: - #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i67 
y: i23 
=== Succesors ===
=== Usages ===
j487 v331 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i67 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i891 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i160 y: i891  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v331 
=== Succesors ===
trueSuccessor: v562 
falseSuccessor: v564 
=== Usages ===
=== Predecessor ===
i891 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v331 #trueSuccessor: v562 #falseSuccessor: v564  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a892 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a892  <|@  <|@
f <@~|@floating>@ <|@
tid a325 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
v970 v968 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a890  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i160  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [v28|QWORD[.] + v27|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a325 
index: j487 
=== Succesors ===
=== Usages ===
a892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a325 index: j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a892 <|@
result v29|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
lastLocationAccess: - 
=== Succesors ===
next: v813 
=== Usages ===
v991 v340 v969 
=== Predecessor ===
v562 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v968 lastLocationAccess: - #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 52]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a892 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a892  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v811 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
a892 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v811 #falseSuccessor: v812  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v811 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v893  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [v29|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a892 
=== Succesors ===
=== Usages ===
v893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
v955 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v991 lastLocationAccess: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v955 v956 v957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v893 
y: v954 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v893 y: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.996048372267913
stamp: void
=== Inputs ===
condition: v955 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v933 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v955 #trueSuccessor: v81 #falseSuccessor: v933  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: i894 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result [v29|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a892 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
i220 ?222 ?258 i101 i101 
=== Predecessor ===
v81 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i894 
y: i23 
=== Succesors ===
=== Usages ===
j488 i267 v349 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i894 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i220 
y: i891 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i220 y: i891  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
i894 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v570 #falseSuccessor: v572  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a895 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a895  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i220 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i220  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
result [v28|QWORD[.] + v31|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a325 
index: j488 
=== Succesors ===
=== Usages ===
a895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a325 index: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a895 <|@
result v32|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
lastLocationAccess: - 
=== Succesors ===
next: v238 
=== Usages ===
a357 
=== Predecessor ===
v570 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v970 lastLocationAccess: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid a357 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a895 
=== Succesors ===
=== Usages ===
v235 v467 v471 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a895  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a357 
y: a627 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a357 y: a627  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.15719294999340205
stamp: void
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
a895 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v237 #falseSuccessor: v236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v960  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v237 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a896 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a896 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
=== Succesors ===
next: v243 
=== Usages ===
a459 v468 v498 v499 
=== Predecessor ===
v236 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a896 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a896  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9097640391284887
stamp: void
=== Inputs ===
condition: v468 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
a896 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v468 #trueSuccessor: v242 #falseSuccessor: v241  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a896 
y: a496 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a896 y: a496  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - i894 
=== Succesors ===
=== Usages ===
?701 ?702 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - i894  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.743297100699551
stamp: void
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v250 #falseSuccessor: v245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-117771|0xfffffffffffe33f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v990 
lastLocationAccess: - 
=== Succesors ===
next: v464 
=== Usages ===
v822 
=== Predecessor ===
v250 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v990 lastLocationAccess: - #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v897 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [v36|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v822 
index: - 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
lastLocationAccess: - 
=== Succesors ===
next: j466 
=== Usages ===
v982 v467 
=== Predecessor ===
v897 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v981 lastLocationAccess: - #next: j466  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [v38|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v464 
index: - 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j466 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
lastLocationAccess: - 
=== Succesors ===
next: i253 
=== Usages ===
v467 
=== Predecessor ===
v464 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v982 lastLocationAccess: - #next: i253  <|@  <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j466 
metaspaceMethod: v464 
arguments: a627 a357 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j466 metaspaceMethod: v464 arguments: a627 a357  <|@  <|@
tid ?702 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?258 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i253 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v467 
stateDuring: ?702 
=== Succesors ===
next: v262 
=== Usages ===
i261 
=== Predecessor ===
j466 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v467 stateDuring: ?702 #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a896 
y: a494 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a896 y: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.0011327550265468342
stamp: void
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v246 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v246 #falseSuccessor: v249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i256 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i256  <|@  <|@
f <@~|@floating>@ <|@
tid a459 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a896 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a896  <|@  <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a459 a627 a357 
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a459 a627 a357  <|@  <|@
tid ?701 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?258 
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i256 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v471 
stateDuring: ?701 
=== Succesors ===
next: v263 
=== Usages ===
i261 
=== Predecessor ===
v249 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v471 stateDuring: ?701 #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i256 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i261 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v259 
values: i253 i256 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v259 values: i253 i256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v262 v263 
=== Succesors ===
next: v226 
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v262 v263 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i29 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i261 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.9887265628655122
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v941 
falseSuccessor: v937 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v941 #falseSuccessor: v937  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v941 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v942 v264 v265 
=== Succesors ===
next: a898 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v942 v264 v265 #next: a898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a898 <|@
result v44|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i899 
=== Usages ===
a359 v971 
=== Predecessor ===
v940 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 lastLocationAccess: - #next: i899  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i29 a624 a627 - i894 
=== Succesors ===
=== Usages ===
v996 i899 v902 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i29 a624 a627 - i894  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result [v44|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a898 
=== Succesors ===
=== Usages ===
i899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i899 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-92427|0xfffffffffffe96f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?222 
guard: - 
address: v971 
lastLocationAccess: - 
=== Succesors ===
next: v585 
=== Usages ===
v375 
=== Predecessor ===
a898 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?222 guard: - address: v971 lastLocationAccess: - #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i220 
y: i23 
=== Succesors ===
=== Usages ===
j489 v375 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i220 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 49]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i267 
y: i899 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i267 y: i899  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v582 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
i899 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v582 #falseSuccessor: v584  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a900 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a900  <|@  <|@
f <@~|@floating>@ <|@
tid a359 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a898 
=== Succesors ===
=== Usages ===
v972 a286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a898  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i267 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i267  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result [v46|QWORD[.] + v45|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a359 
index: j489 
=== Succesors ===
=== Usages ===
a900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a359 index: j489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a900 <|@
result v47|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
lastLocationAccess: - 
=== Succesors ===
next: v827 
=== Usages ===
a373 v385 v992 
=== Predecessor ===
v582 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v972 lastLocationAccess: - #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 52]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a900 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a900  <|@  <|@
f <@*|@fixed>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v825 
falseSuccessor: v826 
=== Usages ===
=== Predecessor ===
a900 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v825 #falseSuccessor: v826  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v47|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a900 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
v956 
=== Predecessor ===
v826 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v992 lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v901 
y: v954 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v901 y: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.996048372267913
stamp: void
=== Inputs ===
condition: v956 
=== Succesors ===
trueSuccessor: v229 
falseSuccessor: v945 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v956 #trueSuccessor: v229 #falseSuccessor: v945  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v902 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-113675|0xfffffffffffe43f5]
deoptSpeculation: long[1944|0x798]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?222 
guard: - 
address: v990 
lastLocationAccess: - 
=== Succesors ===
next: v6 
=== Usages ===
v836 
=== Predecessor ===
v229 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?222 guard: - address: v990 lastLocationAccess: - #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid a373 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a900 
=== Succesors ===
=== Usages ===
a283 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a900  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v902 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a283 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a# org.graalvm.collections.EconomicMapImpl$CollisionLink
valueDescription: a java.lang.Object
=== Inputs ===
merge: v7 
values: a373 a422 
=== Succesors ===
=== Usages ===
?11 v973 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: a373 a422  <|@  <|@
f <@~|@floating>@ <|@
tid a286 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: a java.lang.Object[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v7 
values: a359 a408 
=== Succesors ===
=== Usages ===
v975 v974 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: a359 a408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
osrLoop: true
peelings: 2
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: i903 
=== Usages ===
a283 v42 v52 v32 a286 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: i903  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: aload
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 305
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - - - a283 
=== Succesors ===
=== Usages ===
v994 i903 i904 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - - - a283  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result [v50|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a283 
index: - 
=== Succesors ===
=== Usages ===
i903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a283 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-99595|0xfffffffffffe7af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v973 
lastLocationAccess: - 
=== Succesors ===
next: i904 
=== Usages ===
i101 ?199 i24 ?28 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v973 lastLocationAccess: - #next: i904  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
result [v51|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
i904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i904 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-100875|0xfffffffffffe75f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v974 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
v398 
=== Predecessor ===
i903 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v974 lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i903 
y: i23 
=== Succesors ===
=== Usages ===
j491 i209 v398 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i903 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i24 
y: i904 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i24 y: i904  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v398 
=== Succesors ===
trueSuccessor: v602 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
i904 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v398 #trueSuccessor: v602 #falseSuccessor: v604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a905 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a905  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i24 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result [v51|QWORD[.] + v53|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a286 
index: j491 
=== Succesors ===
=== Usages ===
a905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: j491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a905 <|@
result v54|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
a406 
=== Predecessor ===
v602 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v975 lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a406 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a905 
=== Succesors ===
=== Usages ===
v457 v168 v453 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a905  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a406 
y: a627 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a406 y: a627  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.15719294999340205
stamp: void
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
a905 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v170 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
v170 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a906 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a906 <|@
result v56|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
=== Succesors ===
next: v177 
=== Usages ===
a442 v454 v495 v497 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a906 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a906  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9097640391284887
stamp: void
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
a906 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v176 #falseSuccessor: v175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v176 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a906 
y: a496 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a906 y: a496  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a624 a627 - i903 
=== Succesors ===
=== Usages ===
?703 ?704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a624 a627 - i903  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.743297100699551
stamp: void
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v187 #falseSuccessor: v179  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v902 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v57|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v836 
index: - 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v836 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
lastLocationAccess: - 
=== Succesors ===
next: j452 
=== Usages ===
v980 v453 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v979 lastLocationAccess: - #next: j452  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [v59|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v449 
index: - 
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v449 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j452 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
lastLocationAccess: - 
=== Succesors ===
next: i190 
=== Usages ===
v453 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v980 lastLocationAccess: - #next: i190  <|@  <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j452 
metaspaceMethod: v449 
arguments: a627 a406 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j452 metaspaceMethod: v449 arguments: a627 a406  <|@  <|@
tid ?703 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?199 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i190 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v453 
stateDuring: ?703 
=== Succesors ===
next: v203 
=== Usages ===
i202 
=== Predecessor ===
j452 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v453 stateDuring: ?703 #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
i190 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a906 
y: a494 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a906 y: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.0011327550265468342
stamp: void
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v183 #falseSuccessor: v186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i194 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i194  <|@  <|@
f <@~|@floating>@ <|@
tid a442 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a906 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a906  <|@  <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a442 a627 a406 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a442 a627 a406  <|@  <|@
tid ?704 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?199 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i194 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v457 
stateDuring: ?704 
=== Succesors ===
next: v204 
=== Usages ===
i202 
=== Predecessor ===
v186 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v457 stateDuring: ?704 #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
i194 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i202 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v200 
values: i190 i194 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v200 values: i190 i194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v203 v204 
=== Succesors ===
next: v36 
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v203 v204 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i202 
y: i29 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i202 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.9887265628655122
stamp: void
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v917 
falseSuccessor: v913 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v917 #falseSuccessor: v913  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v917 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v918 v205 v206 
=== Succesors ===
next: a907 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v918 v205 v206 #next: a907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a907 <|@
result v65|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i908 
=== Usages ===
a408 v976 
=== Predecessor ===
v916 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 lastLocationAccess: - #next: i908  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
sourceFile: EconomicMapImpl.java
sourceLine: 308
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i29 a624 a627 - i903 
=== Succesors ===
=== Usages ===
v995 v618 i908 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i29 a624 a627 - i903  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result [v65|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a907 
=== Succesors ===
=== Usages ===
i908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i908 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-104971|0xfffffffffffe65f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v976 
lastLocationAccess: - 
=== Succesors ===
next: v613 
=== Usages ===
v424 
=== Predecessor ===
a907 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v976 lastLocationAccess: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i24 
y: i23 
=== Succesors ===
=== Usages ===
j492 v424 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i24 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 49]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i908 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i209 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v424 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
i908 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v424 #trueSuccessor: v610 #falseSuccessor: v612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a909 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a909  <|@  <|@
f <@~|@floating>@ <|@
tid a408 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a907 
=== Succesors ===
=== Usages ===
v977 a286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a907  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i209 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i209  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [v67|QWORD[.] + v66|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a408 
index: j492 
=== Succesors ===
=== Usages ===
a909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a408 index: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a909 <|@
result v68|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
lastLocationAccess: - 
=== Succesors ===
next: v841 
=== Usages ===
a422 v434 v993 
=== Predecessor ===
v610 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 lastLocationAccess: - #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 52]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a909 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a909  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v434 
=== Succesors ===
trueSuccessor: v839 
falseSuccessor: v840 
=== Usages ===
=== Predecessor ===
a909 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v434 #trueSuccessor: v839 #falseSuccessor: v840  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v68|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a909 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
lastLocationAccess: - 
=== Succesors ===
next: v45 
=== Usages ===
v957 
=== Predecessor ===
v840 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v993 lastLocationAccess: - #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v910 
y: v954 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v910 y: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.996048372267913
stamp: void
=== Inputs ===
condition: v957 
=== Succesors ===
trueSuccessor: v44 
falseSuccessor: v921 
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v957 #trueSuccessor: v44 #falseSuccessor: v921  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:313) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?28 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?28 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid a422 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a909 
=== Succesors ===
=== Usages ===
a283 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a909  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:312) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v922 v837 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v922 v837 #next: v42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 415
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
v913 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v914 v201 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v914 v201 #next: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 399
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v945 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v996 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v996  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 366
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?222 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v937 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
result int[-89627|0xfffffffffffea1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
rawvalue: -89627
stableDimension: 0
stamp: i32 [-89627]
stampKind: i32
value: int[-89627|0xfffffffffffea1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v933 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v93 v285 v959 v961 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v93 v285 v959 v961 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:315) [bci: 61]
stamp: void
=== Inputs ===
memoryMap: - 
result: i54 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid i761 <|@
result int[-85019|0xfffffffffffeb3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
rawvalue: -85019
stableDimension: 0
stamp: i32 [-85019]
stampKind: i32
value: int[-85019|0xfffffffffffeb3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i757 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: i32 [-89627 - -85019] bits:1...10101x00x111100101
valueDescription: i32
=== Inputs ===
merge: v754 
values: i761 i765 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v754 values: i761 i765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v760 v764 
=== Succesors ===
next: v759 
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v760 v764 #next: v759  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:311) [bci: 34]
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i757 
speculation: j718 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i757 speculation: j718  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v925 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i101 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v96 
values: i903 i884 i894 i884 i894 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v96 values: i903 i884 i894 i884 i894  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v97 v98 v284 v958 v960 
=== Succesors ===
next: v53 
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v97 v98 v284 v958 v960 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309) [bci: 31]
stamp: void
=== Inputs ===
memoryMap: - 
result: i101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:307) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid i751 <|@
result int[-80411|0xfffffffffffec5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: -80411
stableDimension: 0
stamp: i32 [-80411]
stampKind: i32
value: int[-80411|0xfffffffffffec5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid j747 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
result int[-76092|0xfffffffffffed6c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: -76092
stableDimension: 0
stamp: i32 [-76092]
stampKind: i32
value: int[-76092|0xfffffffffffed6c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v949 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
result int[-75836|0xfffffffffffed7c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
rawvalue: -75836
stableDimension: 0
stamp: i32 [-75836]
stampKind: i32
value: int[-75836|0xfffffffffffed7c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i739 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i32 [-80411 - -75836] bits:1...10110x01xx11x0010x
valueDescription: i32
=== Inputs ===
merge: v736 
values: i743 i746 i751 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v736 values: i743 i746 i751  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: i64 [0 - 660] bits:0...0x0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v736 
values: j744 j747 j718 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v736 values: j744 j747 j718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v742 v745 v750 
=== Succesors ===
next: v741 
=== Usages ===
i739 j740 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v742 v745 v750 #next: v741  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:306) [bci: 9]
stamp: void
=== Inputs ===
stateBefore: ?61 
actionAndReason: i739 
speculation: j740 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?61 actionAndReason: i739 speculation: j740  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  158  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  160  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  238  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  360  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  414  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  418  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  434  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  502  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr  558  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  610  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  612  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr  614  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  626  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  680  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr  684  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr  796  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  878  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  880  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  882  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr  884  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  894  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  896  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  982  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  984  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  986  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr  988  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr 1000  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1054  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr 1058  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1130  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr 1134  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1320  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1360  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1374  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  158  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  160  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  238  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  360  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  414  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  418  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  434  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  502  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr  558  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  610  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  612  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr  614  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  626  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  680  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr  684  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr  796  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  878  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  880  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  882  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr  884  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  894  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  896  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  982  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  984  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  986  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr  988  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr 1000  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1054  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr 1058  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1130  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr 1134  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1320  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1360  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1374  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v60|q [0, 1[[622, 626[[678, 680[[814, 816[[892, 896[[928, 930[[996, 1000[[1052, 1054[[1128, 1130[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v55|q [0, 1[[624, 625[[676, 679[[894, 895[[998, 999[[1050, 1053[[1126, 1129[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v55|q [0, 1[[618, 625[[674, 679[[888, 895[[992, 999[[1048, 1053[[1124, 1129[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v59|q [0, 1[[620, 625[[678, 679[[890, 895[[994, 999[[1052, 1053[[1128, 1129[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 32[[40, 42[[616, 625[[672, 679[[886, 895[[990, 999[[1046, 1053[[1122, 1129[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [32, 40[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [34, 716[[828, 900[[932, 1156[[1216, 1277[[1278, 1309[[1310, 1341[[1342, 1363[[1364, 1395[34 MustHaveRegister 138 MustHaveRegister 158 MustHaveRegister 204 MustHaveRegister 234 MustHaveRegister 330 MustHaveRegister 358 MustHaveRegister 472 MustHaveRegister 500 MustHaveRegister 561 LiveAtLoopEnd  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [36, 716[[828, 900[[932, 1156[[1216, 1277[[1278, 1309[[1310, 1341[[1342, 1363[[1364, 1395[36 MustHaveRegister 190 MustHaveRegister 316 MustHaveRegister 412 MustHaveRegister 458 MustHaveRegister 561 LiveAtLoopEnd 616 ShouldHaveRegister 674 ShouldHaveRegister 876 MustHaveRegister 886 ShouldHaveRegister 980 MustHaveRegister 990 ShouldHaveRegister 1048 ShouldHaveRegister 1124 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [38, 208[[828, 877[[1236, 1256[[1310, 1341[38 MustHaveRegister 44 MustHaveRegister 62 MustHaveRegister 90 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [62, 66[62 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|d [66, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [64, 67[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v5|q [80, 106[106 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [104, 106[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [156, 334[[776, 785[[828, 900[[932, 981[[1004, 1080[[1196, 1205[[1216, 1226[[1278, 1288[[1364, 1395[156 MustHaveRegister 160 ShouldHaveRegister 784 ShouldHaveRegister 1204 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [158, 184[158 MustHaveRegister 162 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v9|d [160, 238[[828, 900[[1004, 1080[[1216, 1226[160 MustHaveRegister 162 MustHaveRegister 186 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v10|d [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|d [188, 208[[828, 888[[1004, 1050[188 MustHaveRegister 190 ShouldHaveRegister 888 ShouldHaveRegister 1050 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [204, 208[[828, 840[[1004, 1044[204 MustHaveRegister 206 MustHaveRegister 838 ShouldHaveRegister 1014 ShouldHaveRegister 1044 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|d [880, 882[880 MustHaveRegister 882 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [878, 881[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [882, 890[882 MustHaveRegister 884 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [884, 892[884 MustHaveRegister 892 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d rax|d [896, 899[896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v15|d [1044, 1046[1044 MustHaveRegister 1046 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d rax|d [1054, 1057[1054 MustHaveRegister 1056 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v21|d [1058, 1068[1068 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [234, 258[234 MustHaveRegister 236 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [236, 294[236 MustHaveRegister 240 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v11|d [238, 260[238 MustHaveRegister 240 ShouldHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v25|d [258, 312[258 MustHaveRegister 260 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [260, 290[260 MustHaveRegister 262 MustHaveRegister 274 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [290, 413[[786, 795[[932, 1004[[1080, 1156[[1206, 1215[[1226, 1236[[1256, 1277[290 MustHaveRegister 292 ShouldHaveRegister 794 ShouldHaveRegister 1214 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v30|d [292, 360[[932, 1004[[1080, 1156[[1226, 1236[292 MustHaveRegister 294 ShouldHaveRegister 312 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|d [314, 334[[932, 992[[1080, 1126[314 MustHaveRegister 316 ShouldHaveRegister 992 ShouldHaveRegister 1126 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [330, 334[[932, 944[[1080, 1120[330 MustHaveRegister 332 MustHaveRegister 942 ShouldHaveRegister 1090 ShouldHaveRegister 1120 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [980, 984[980 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v35|d [984, 986[984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [982, 985[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [986, 994[986 MustHaveRegister 988 MustHaveRegister 994 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [988, 996[988 MustHaveRegister 996 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d rax|d [1000, 1003[1000 MustHaveRegister 1002 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v34|d [1120, 1122[1120 MustHaveRegister 1122 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d rax|d [1130, 1133[1130 MustHaveRegister 1132 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v40|d [1134, 1144[1144 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [358, 380[358 MustHaveRegister 362 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d v31|d [360, 382[360 MustHaveRegister 362 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v44|d [380, 417[380 MustHaveRegister 382 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [382, 414[382 MustHaveRegister 384 MustHaveRegister 396 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [412, 716[412 MustHaveRegister 561 LiveAtLoopEnd 610 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v47|d [414, 417[414 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v70|q [418, 438[[1288, 1309[432 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v67|q [418, 454[436 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v72|d [432, 557[[562, 745[[1186, 1196[[1342, 1363[432 MustHaveRegister 434 ShouldHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v52|d [434, 502[[562, 716[434 MustHaveRegister 436 MustHaveRegister 454 MustHaveRegister 502 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v54|d [456, 476[[562, 618[[630, 676[456 MustHaveRegister 458 ShouldHaveRegister 618 ShouldHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [472, 476[[562, 574[[630, 670[472 MustHaveRegister 474 MustHaveRegister 572 ShouldHaveRegister 640 ShouldHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v48|d [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [608, 611[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [612, 620[612 MustHaveRegister 614 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [614, 622[614 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d rax|d [626, 629[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v56|d [670, 672[670 MustHaveRegister 672 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d rax|d [680, 683[680 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d v61|d [684, 694[694 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [500, 522[500 MustHaveRegister 504 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d v53|d [502, 524[502 MustHaveRegister 504 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v65|d [522, 561[522 MustHaveRegister 524 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [524, 558[524 MustHaveRegister 526 MustHaveRegister 538 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [556, 557[556 MustHaveRegister  "NoDefinitionFound"
  v70|q QWORD "[v70|q]" v70|q v68|d [558, 561[558 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [1374, 1390[1390 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d v52|d [796, 814[814 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d -1 [1320, 1336[1336 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [1320, 1338[1338 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v60|q [0, 1[[622, 626[[678, 680[[814, 816[[892, 896[[928, 930[[996, 1000[[1052, 1054[[1128, 1130[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v55|q [0, 1[[624, 625[[676, 679[[894, 895[[998, 999[[1050, 1053[[1126, 1129[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v55|q [0, 1[[618, 625[[674, 679[[888, 895[[992, 999[[1048, 1053[[1124, 1129[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v59|q [0, 1[[620, 625[[678, 679[[890, 895[[994, 999[[1052, 1053[[1128, 1129[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 32[[40, 42[[616, 625[[672, 679[[886, 895[[990, 999[[1046, 1053[[1122, 1129[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [32, 40[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q -1 [34, 574[34 MustHaveRegister 138 MustHaveRegister 158 MustHaveRegister 204 MustHaveRegister 234 MustHaveRegister 330 MustHaveRegister 358 MustHaveRegister 472 MustHaveRegister 500 MustHaveRegister 561 LiveAtLoopEnd  "SpillInDominator"
  v2|q QWORD "[r11|q]" v2|q -1 [36, 623[36 MustHaveRegister 190 MustHaveRegister 316 MustHaveRegister 412 MustHaveRegister 458 MustHaveRegister 561 LiveAtLoopEnd 616 ShouldHaveRegister  "SpillInDominator"
  v3|q QWORD "[r8|q]" v3|q -1 [38, 208[[828, 877[[1236, 1256[[1310, 1341[38 MustHaveRegister 44 MustHaveRegister 62 MustHaveRegister 90 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [62, 66[62 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q v4|d [66, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [64, 67[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q v5|q [80, 106[106 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdx|q]" v8|q -1 [104, 106[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [156, 334[[776, 785[[828, 840[156 MustHaveRegister 160 ShouldHaveRegister 784 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [158, 184[158 MustHaveRegister 162 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rcx|d]" v11|d v9|d [160, 238[[828, 840[160 MustHaveRegister 162 MustHaveRegister 186 MustHaveRegister 238 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[rsi|q]" v12|q v10|d [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rsi|d]" v13|d -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbx|q]" v14|q v13|d [188, 208[[828, 888[[1004, 1050[188 MustHaveRegister 190 ShouldHaveRegister 888 ShouldHaveRegister 1050 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [204, 208[[828, 840[[1004, 1044[204 MustHaveRegister 206 MustHaveRegister 838 ShouldHaveRegister 1014 ShouldHaveRegister 1044 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v16|d [880, 882[880 MustHaveRegister 882 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [878, 881[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [882, 890[882 MustHaveRegister 884 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q -1 [884, 892[884 MustHaveRegister 892 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d rax|d [896, 899[896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q v15|d [1044, 1046[1044 MustHaveRegister 1046 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d rax|d [1054, 1057[1054 MustHaveRegister 1056 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d v21|d [1058, 1068[1068 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [234, 258[234 MustHaveRegister 236 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rdx|d]" v26|d -1 [236, 294[236 MustHaveRegister 240 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rcx|d]" v27|d v11|d [238, 260[238 MustHaveRegister 240 ShouldHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v25|d [258, 312[258 MustHaveRegister 260 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbx|d]" v29|d -1 [260, 290[260 MustHaveRegister 262 MustHaveRegister 274 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d -1 [290, 413[[786, 795[[932, 944[290 MustHaveRegister 292 ShouldHaveRegister 794 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[rcx|d]" v31|d v30|d [292, 360[[932, 944[292 MustHaveRegister 294 ShouldHaveRegister 312 MustHaveRegister 360 ShouldHaveRegister  "OneSpillStore"
  v32|d DWORD "[rsi|d]" v32|d -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbx|q]" v33|q v32|d [314, 334[[932, 992[[1080, 1126[314 MustHaveRegister 316 ShouldHaveRegister 992 ShouldHaveRegister 1126 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d -1 [330, 334[[932, 944[[1080, 1120[330 MustHaveRegister 332 MustHaveRegister 942 ShouldHaveRegister 1090 ShouldHaveRegister 1120 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rsi|d]" v35|d -1 [980, 984[980 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v35|d [984, 986[984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdx|q]" v37|q -1 [982, 985[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q -1 [986, 994[986 MustHaveRegister 988 MustHaveRegister 994 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[r10|q]" v39|q -1 [988, 996[988 MustHaveRegister 996 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d rax|d [1000, 1003[1000 MustHaveRegister 1002 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q v34|d [1120, 1122[1120 MustHaveRegister 1122 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d rax|d [1130, 1133[1130 MustHaveRegister 1132 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d v40|d [1134, 1144[1144 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rsi|d]" v44|d -1 [358, 380[358 MustHaveRegister 362 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rcx|d]" v45|d v31|d [360, 382[360 MustHaveRegister 362 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v44|d [380, 417[380 MustHaveRegister 382 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rdx|d]" v47|d -1 [382, 414[382 MustHaveRegister 384 MustHaveRegister 396 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r9|d]" v48|d -1 [412, 623[412 MustHaveRegister 561 LiveAtLoopEnd 610 MustHaveRegister  "SpillInDominator"
  v49|q QWORD "[rdx|q]" v49|q v47|d [414, 417[414 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[r8|q]" v50|q v70|q [418, 438[[1288, 1309[432 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v67|q [418, 454[436 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rcx|d]" v52|d v72|d [432, 557[[562, 574[432 MustHaveRegister 434 ShouldHaveRegister  "OneSpillStore"
  v53|d DWORD "[rdi|d]" v53|d v52|d [434, 502[[562, 574[434 MustHaveRegister 436 MustHaveRegister 454 MustHaveRegister 502 ShouldHaveRegister  "OneSpillStore"
  v54|d DWORD "[rsi|d]" v54|d -1 [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r8|q]" v55|q v54|d [456, 476[[562, 618[[630, 676[456 MustHaveRegister 458 ShouldHaveRegister 618 ShouldHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbx|d]" v56|d -1 [472, 476[[562, 574[[630, 670[472 MustHaveRegister 474 MustHaveRegister 572 ShouldHaveRegister 640 ShouldHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q v48|d [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [608, 611[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbx|q]" v59|q -1 [612, 620[612 MustHaveRegister 614 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [614, 622[614 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rax|d]" v61|d rax|d [626, 629[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rbx|q]" v62|q v56|d [670, 672[670 MustHaveRegister 672 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d rax|d [680, 683[680 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rax|d]" v64|d v61|d [684, 694[694 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rsi|d]" v65|d -1 [500, 522[500 MustHaveRegister 504 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rdi|d]" v66|d v53|d [502, 524[502 MustHaveRegister 504 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q v65|d [522, 561[522 MustHaveRegister 524 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rdx|d]" v68|d -1 [524, 558[524 MustHaveRegister 526 MustHaveRegister 538 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rbx|q]" v69|q -1 [556, 557[556 MustHaveRegister  "NoDefinitionFound"
  v70|q QWORD "[rdx|q]" v70|q v68|d [558, 561[558 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[r10|d]" v71|d -1 [1374, 1390[1390 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[rcx|d]" v72|d v52|d [796, 814[814 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r10|d]" v73|d -1 [1320, 1336[1336 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r11|q]" v74|q -1 [1320, 1338[1338 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[vstack:2|q]" v1|q v1|q [574, 623[ "SpillInDominator"
  v76|q QWORD "[vstack:0|q]" v2|q v2|q [623, 716[[828, 840[674 ShouldHaveRegister  "SpillInDominator"
  v77|d DWORD "[vstack:7|d]" v9|d v9|d [840, 893[ "OneSpillStore"
  v78|d DWORD "[vstack:8|d]" v11|d v11|d [840, 893[ "OneSpillStore"
  v79|d DWORD "[vstack:9|d]" v30|d v30|d [944, 997[ "OneSpillStore"
  v80|d DWORD "[vstack:10|d]" v31|d v31|d [944, 997[ "OneSpillStore"
  v81|d DWORD "[vstack:4|d]" v48|d v48|d [623, 716[ "SpillInDominator"
  v82|d DWORD "[vstack:1|d]" v52|d v52|d [574, 623[ "OneSpillStore"
  v83|d DWORD "[vstack:3|d]" v53|d v53|d [574, 623[ "OneSpillStore"
  v84|d DWORD "[vstack:1|d]" v52|d v52|d [623, 745[[1186, 1196[744 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[vstack:3|d]" v53|d v53|d [623, 716[ "OneSpillStore"
  v86|q QWORD "[vstack:2|q]" v1|q v1|q [623, 716[[828, 900[[932, 1156[[1216, 1277[[1278, 1309[[1310, 1341[[1342, 1363[[1364, 1374[ "SpillInDominator"
  v87|q QWORD "[r11|q]" v2|q v2|q [840, 893[876 MustHaveRegister 886 ShouldHaveRegister  "SpillInDominator"
  v88|d DWORD "[rcx|d]" v52|d v52|d [1342, 1363[ "OneSpillStore"
  v89|q QWORD "[r8|q]" v1|q v1|q [1374, 1395[ "SpillInDominator"
  v90|q QWORD "[vstack:0|q]" v2|q v2|q [893, 900[[932, 944[ "SpillInDominator"
  v91|d DWORD "[vstack:7|d]" v9|d v9|d [893, 900[[932, 981[[1004, 1080[[1196, 1205[[1216, 1226[[1278, 1288[[1364, 1374[1204 ShouldHaveRegister  "OneSpillStore"
  v92|d DWORD "[vstack:8|d]" v11|d v11|d [893, 900[[1004, 1080[[1216, 1226[ "OneSpillStore"
  v93|q QWORD "[r11|q]" v2|q v2|q [944, 997[980 MustHaveRegister 990 ShouldHaveRegister  "SpillInDominator"
  v94|d DWORD "[r9|d]" v9|d v9|d [1374, 1395[ "OneSpillStore"
  v95|q QWORD "[vstack:0|q]" v2|q v2|q [997, 1156[[1216, 1277[[1278, 1309[[1310, 1341[[1342, 1363[[1364, 1374[1048 ShouldHaveRegister 1124 ShouldHaveRegister  "SpillInDominator"
  v96|d DWORD "[vstack:9|d]" v30|d v30|d [997, 1004[[1080, 1156[[1206, 1215[[1226, 1236[1214 ShouldHaveRegister  "OneSpillStore"
  v97|d DWORD "[vstack:10|d]" v31|d v31|d [997, 1004[[1080, 1156[[1226, 1236[ "OneSpillStore"
  v98|q QWORD "[r11|q]" v2|q v2|q [1374, 1395[ "SpillInDominator"
  v99|d DWORD "[r8|d]" v30|d v30|d [1256, 1277[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  158  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  160  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  238  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  360  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  414  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  418  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  434  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  502  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr  558  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  610  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  612  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr  614  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = STACKMOVE (input: v83|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v75|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  626  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  680  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr  684  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr  796  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  878  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  880  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  882  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr  884  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = STACKMOVE (input: v78|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = STACKMOVE (input: v77|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  896  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  982  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  984  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  986  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr  988  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = STACKMOVE (input: v80|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = STACKMOVE (input: v79|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr 1000  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1054  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr 1058  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1130  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr 1134  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1320  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1360  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1374  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v60|q [0, 1[[622, 626[[678, 680[[814, 816[[892, 896[[928, 930[[996, 1000[[1052, 1054[[1128, 1130[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v55|q [0, 1[[624, 625[[676, 679[[894, 895[[998, 999[[1050, 1053[[1126, 1129[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v55|q [0, 1[[618, 625[[674, 679[[888, 895[[992, 999[[1048, 1053[[1124, 1129[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v59|q [0, 1[[620, 625[[678, 679[[890, 895[[994, 999[[1052, 1053[[1128, 1129[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 32[[40, 42[[616, 625[[672, 679[[886, 895[[990, 999[[1046, 1053[[1122, 1129[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [32, 40[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q -1 [34, 574[34 MustHaveRegister 138 MustHaveRegister 158 MustHaveRegister 204 MustHaveRegister 234 MustHaveRegister 330 MustHaveRegister 358 MustHaveRegister 472 MustHaveRegister 500 MustHaveRegister 561 LiveAtLoopEnd  "StoreAtDefinition"
  v2|q QWORD "[r11|q]" v2|q -1 [36, 623[36 MustHaveRegister 190 MustHaveRegister 316 MustHaveRegister 412 MustHaveRegister 458 MustHaveRegister 561 LiveAtLoopEnd 616 ShouldHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[r8|q]" v3|q -1 [38, 208[[828, 877[[1236, 1256[[1310, 1341[38 MustHaveRegister 44 MustHaveRegister 62 MustHaveRegister 90 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [62, 66[62 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q v4|d [66, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [64, 67[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q v5|q [80, 106[106 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdx|q]" v8|q -1 [104, 106[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [156, 334[[776, 785[[828, 840[156 MustHaveRegister 160 ShouldHaveRegister 784 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [158, 184[158 MustHaveRegister 162 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rcx|d]" v11|d v9|d [160, 238[[828, 840[160 MustHaveRegister 162 MustHaveRegister 186 MustHaveRegister 238 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[rsi|q]" v12|q v10|d [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rsi|d]" v13|d -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbx|q]" v14|q v13|d [188, 208[[828, 888[[1004, 1050[188 MustHaveRegister 190 ShouldHaveRegister 888 ShouldHaveRegister 1050 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [204, 208[[828, 840[[1004, 1044[204 MustHaveRegister 206 MustHaveRegister 838 ShouldHaveRegister 1014 ShouldHaveRegister 1044 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v16|d [880, 882[880 MustHaveRegister 882 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [878, 881[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [882, 890[882 MustHaveRegister 884 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q -1 [884, 892[884 MustHaveRegister 892 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d rax|d [896, 899[896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q v15|d [1044, 1046[1044 MustHaveRegister 1046 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d rax|d [1054, 1057[1054 MustHaveRegister 1056 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d v21|d [1058, 1068[1068 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [234, 258[234 MustHaveRegister 236 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rdx|d]" v26|d -1 [236, 294[236 MustHaveRegister 240 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rcx|d]" v27|d v11|d [238, 260[238 MustHaveRegister 240 ShouldHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v25|d [258, 312[258 MustHaveRegister 260 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbx|d]" v29|d -1 [260, 290[260 MustHaveRegister 262 MustHaveRegister 274 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d -1 [290, 413[[786, 795[[932, 944[290 MustHaveRegister 292 ShouldHaveRegister 794 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[rcx|d]" v31|d v30|d [292, 360[[932, 944[292 MustHaveRegister 294 ShouldHaveRegister 312 MustHaveRegister 360 ShouldHaveRegister  "OneSpillStore"
  v32|d DWORD "[rsi|d]" v32|d -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbx|q]" v33|q v32|d [314, 334[[932, 992[[1080, 1126[314 MustHaveRegister 316 ShouldHaveRegister 992 ShouldHaveRegister 1126 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d -1 [330, 334[[932, 944[[1080, 1120[330 MustHaveRegister 332 MustHaveRegister 942 ShouldHaveRegister 1090 ShouldHaveRegister 1120 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rsi|d]" v35|d -1 [980, 984[980 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v35|d [984, 986[984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdx|q]" v37|q -1 [982, 985[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q -1 [986, 994[986 MustHaveRegister 988 MustHaveRegister 994 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[r10|q]" v39|q -1 [988, 996[988 MustHaveRegister 996 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d rax|d [1000, 1003[1000 MustHaveRegister 1002 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q v34|d [1120, 1122[1120 MustHaveRegister 1122 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d rax|d [1130, 1133[1130 MustHaveRegister 1132 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d v40|d [1134, 1144[1144 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rsi|d]" v44|d -1 [358, 380[358 MustHaveRegister 362 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rcx|d]" v45|d v31|d [360, 382[360 MustHaveRegister 362 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v44|d [380, 417[380 MustHaveRegister 382 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rdx|d]" v47|d -1 [382, 414[382 MustHaveRegister 384 MustHaveRegister 396 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r9|d]" v48|d -1 [412, 623[412 MustHaveRegister 561 LiveAtLoopEnd 610 MustHaveRegister  "StoreAtDefinition"
  v49|q QWORD "[rdx|q]" v49|q v47|d [414, 417[414 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[r8|q]" v50|q v70|q [418, 438[[1288, 1309[432 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v67|q [418, 454[436 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rcx|d]" v52|d v72|d [432, 557[[562, 574[432 MustHaveRegister 434 ShouldHaveRegister  "OneSpillStore"
  v53|d DWORD "[rdi|d]" v53|d v52|d [434, 502[[562, 574[434 MustHaveRegister 436 MustHaveRegister 454 MustHaveRegister 502 ShouldHaveRegister  "OneSpillStore"
  v54|d DWORD "[rsi|d]" v54|d -1 [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r8|q]" v55|q v54|d [456, 476[[562, 618[[630, 676[456 MustHaveRegister 458 ShouldHaveRegister 618 ShouldHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbx|d]" v56|d -1 [472, 476[[562, 574[[630, 670[472 MustHaveRegister 474 MustHaveRegister 572 ShouldHaveRegister 640 ShouldHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q v48|d [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [608, 611[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbx|q]" v59|q -1 [612, 620[612 MustHaveRegister 614 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [614, 622[614 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rax|d]" v61|d rax|d [626, 629[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rbx|q]" v62|q v56|d [670, 672[670 MustHaveRegister 672 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d rax|d [680, 683[680 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rax|d]" v64|d v61|d [684, 694[694 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rsi|d]" v65|d -1 [500, 522[500 MustHaveRegister 504 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rdi|d]" v66|d v53|d [502, 524[502 MustHaveRegister 504 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q v65|d [522, 561[522 MustHaveRegister 524 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rdx|d]" v68|d -1 [524, 558[524 MustHaveRegister 526 MustHaveRegister 538 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rbx|q]" v69|q -1 [556, 557[556 MustHaveRegister  "NoDefinitionFound"
  v70|q QWORD "[rdx|q]" v70|q v68|d [558, 561[558 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[r10|d]" v71|d -1 [1374, 1390[1390 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[rcx|d]" v72|d v52|d [796, 814[814 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r10|d]" v73|d -1 [1320, 1336[1336 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r11|q]" v74|q -1 [1320, 1338[1338 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[vstack:2|q]" v1|q v1|q [574, 623[ "StoreAtDefinition"
  v76|q QWORD "[vstack:0|q]" v2|q v2|q [623, 716[[828, 840[674 ShouldHaveRegister  "StoreAtDefinition"
  v77|d DWORD "[vstack:7|d]" v9|d v9|d [840, 893[ "OneSpillStore"
  v78|d DWORD "[vstack:8|d]" v11|d v11|d [840, 893[ "OneSpillStore"
  v79|d DWORD "[vstack:9|d]" v30|d v30|d [944, 997[ "OneSpillStore"
  v80|d DWORD "[vstack:10|d]" v31|d v31|d [944, 997[ "OneSpillStore"
  v81|d DWORD "[vstack:4|d]" v48|d v48|d [623, 716[ "StoreAtDefinition"
  v82|d DWORD "[vstack:1|d]" v52|d v52|d [574, 623[ "OneSpillStore"
  v83|d DWORD "[vstack:3|d]" v53|d v53|d [574, 623[ "OneSpillStore"
  v84|d DWORD "[vstack:1|d]" v52|d v52|d [623, 745[[1186, 1196[744 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[vstack:3|d]" v53|d v53|d [623, 716[ "OneSpillStore"
  v86|q QWORD "[vstack:2|q]" v1|q v1|q [623, 716[[828, 900[[932, 1156[[1216, 1277[[1278, 1309[[1310, 1341[[1342, 1363[[1364, 1374[ "StoreAtDefinition"
  v87|q QWORD "[r11|q]" v2|q v2|q [840, 893[876 MustHaveRegister 886 ShouldHaveRegister  "StoreAtDefinition"
  v88|d DWORD "[rcx|d]" v52|d v52|d [1342, 1363[ "OneSpillStore"
  v89|q QWORD "[r8|q]" v1|q v1|q [1374, 1395[ "StoreAtDefinition"
  v90|q QWORD "[vstack:0|q]" v2|q v2|q [893, 900[[932, 944[ "StoreAtDefinition"
  v91|d DWORD "[vstack:7|d]" v9|d v9|d [893, 900[[932, 981[[1004, 1080[[1196, 1205[[1216, 1226[[1278, 1288[[1364, 1374[1204 ShouldHaveRegister  "OneSpillStore"
  v92|d DWORD "[vstack:8|d]" v11|d v11|d [893, 900[[1004, 1080[[1216, 1226[ "OneSpillStore"
  v93|q QWORD "[r11|q]" v2|q v2|q [944, 997[980 MustHaveRegister 990 ShouldHaveRegister  "StoreAtDefinition"
  v94|d DWORD "[r9|d]" v9|d v9|d [1374, 1395[ "OneSpillStore"
  v95|q QWORD "[vstack:0|q]" v2|q v2|q [997, 1156[[1216, 1277[[1278, 1309[[1310, 1341[[1342, 1363[[1364, 1374[1048 ShouldHaveRegister 1124 ShouldHaveRegister  "StoreAtDefinition"
  v96|d DWORD "[vstack:9|d]" v30|d v30|d [997, 1004[[1080, 1156[[1206, 1215[[1226, 1236[1214 ShouldHaveRegister  "OneSpillStore"
  v97|d DWORD "[vstack:10|d]" v31|d v31|d [997, 1004[[1080, 1156[[1226, 1236[ "OneSpillStore"
  v98|q QWORD "[r11|q]" v2|q v2|q [1374, 1395[ "StoreAtDefinition"
  v99|d DWORD "[r8|d]" v30|d v30|d [1256, 1277[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  158  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  160  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  238  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  360  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  414  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.], v46|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  418  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  434  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  502  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr  558  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.], v67|QWORD[.]] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  610  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  612  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr  614  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = STACKMOVE (input: v83|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v75|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  626  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  680  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [v63|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr  684  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [v52|DWORD] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr  796  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  878  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  880  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  882  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr  884  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = STACKMOVE (input: v78|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = STACKMOVE (input: v77|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  896  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  982  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  984  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  986  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr  988  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = STACKMOVE (input: v80|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = STACKMOVE (input: v79|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr 1000  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1054  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr 1058  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1130  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [v42|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr 1134  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [int[-75836|0xfffffffffffed7c4], long[660|0x294]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [int[-80411|0xfffffffffffec5e5], long[0|0x0]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [int[-85019|0xfffffffffffeb3e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [int[-76092|0xfffffffffffed6c4], long[20|0x14]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1320  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1360  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [int[-89627|0xfffffffffffea1e5]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1374  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v60|q [0, 1[[622, 626[[678, 680[[814, 816[[892, 896[[928, 930[[996, 1000[[1052, 1054[[1128, 1130[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v55|q [0, 1[[624, 625[[676, 679[[894, 895[[998, 999[[1050, 1053[[1126, 1129[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v55|q [0, 1[[618, 625[[674, 679[[888, 895[[992, 999[[1048, 1053[[1124, 1129[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v59|q [0, 1[[620, 625[[678, 679[[890, 895[[994, 999[[1052, 1053[[1128, 1129[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 32[[40, 42[[616, 625[[672, 679[[886, 895[[990, 999[[1046, 1053[[1122, 1129[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[624, 625[[678, 679[[894, 895[[998, 999[[1052, 1053[[1128, 1129[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [32, 40[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q -1 [34, 574[34 MustHaveRegister 138 MustHaveRegister 158 MustHaveRegister 204 MustHaveRegister 234 MustHaveRegister 330 MustHaveRegister 358 MustHaveRegister 472 MustHaveRegister 500 MustHaveRegister 561 LiveAtLoopEnd  "StoreAtDefinition"
  v2|q QWORD "[r11|q]" v2|q -1 [36, 623[36 MustHaveRegister 190 MustHaveRegister 316 MustHaveRegister 412 MustHaveRegister 458 MustHaveRegister 561 LiveAtLoopEnd 616 ShouldHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[r8|q]" v3|q -1 [38, 208[[828, 877[[1236, 1256[[1310, 1341[38 MustHaveRegister 44 MustHaveRegister 62 MustHaveRegister 90 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [62, 66[62 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q v4|d [66, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [64, 67[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q v5|q [80, 106[106 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdx|q]" v8|q -1 [104, 106[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [156, 334[[776, 785[[828, 840[156 MustHaveRegister 160 ShouldHaveRegister 784 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [158, 184[158 MustHaveRegister 162 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rcx|d]" v11|d v9|d [160, 238[[828, 840[160 MustHaveRegister 162 MustHaveRegister 186 MustHaveRegister 238 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[rsi|q]" v12|q v10|d [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rsi|d]" v13|d -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbx|q]" v14|q v13|d [188, 208[[828, 888[[1004, 1050[188 MustHaveRegister 190 ShouldHaveRegister 888 ShouldHaveRegister 1050 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [204, 208[[828, 840[[1004, 1044[204 MustHaveRegister 206 MustHaveRegister 838 ShouldHaveRegister 1014 ShouldHaveRegister 1044 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v16|d [880, 882[880 MustHaveRegister 882 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [878, 881[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [882, 890[882 MustHaveRegister 884 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q -1 [884, 892[884 MustHaveRegister 892 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d rax|d [896, 899[896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q v15|d [1044, 1046[1044 MustHaveRegister 1046 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d rax|d [1054, 1057[1054 MustHaveRegister 1056 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d v21|d [1058, 1068[1068 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [234, 258[234 MustHaveRegister 236 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rdx|d]" v26|d -1 [236, 294[236 MustHaveRegister 240 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rcx|d]" v27|d v11|d [238, 260[238 MustHaveRegister 240 ShouldHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v25|d [258, 312[258 MustHaveRegister 260 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbx|d]" v29|d -1 [260, 290[260 MustHaveRegister 262 MustHaveRegister 274 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d -1 [290, 413[[786, 795[[932, 944[290 MustHaveRegister 292 ShouldHaveRegister 794 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[rcx|d]" v31|d v30|d [292, 360[[932, 944[292 MustHaveRegister 294 ShouldHaveRegister 312 MustHaveRegister 360 ShouldHaveRegister  "OneSpillStore"
  v32|d DWORD "[rsi|d]" v32|d -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbx|q]" v33|q v32|d [314, 334[[932, 992[[1080, 1126[314 MustHaveRegister 316 ShouldHaveRegister 992 ShouldHaveRegister 1126 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d -1 [330, 334[[932, 944[[1080, 1120[330 MustHaveRegister 332 MustHaveRegister 942 ShouldHaveRegister 1090 ShouldHaveRegister 1120 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rsi|d]" v35|d -1 [980, 984[980 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v35|d [984, 986[984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdx|q]" v37|q -1 [982, 985[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q -1 [986, 994[986 MustHaveRegister 988 MustHaveRegister 994 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[r10|q]" v39|q -1 [988, 996[988 MustHaveRegister 996 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d rax|d [1000, 1003[1000 MustHaveRegister 1002 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q v34|d [1120, 1122[1120 MustHaveRegister 1122 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d rax|d [1130, 1133[1130 MustHaveRegister 1132 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d v40|d [1134, 1144[1144 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rsi|d]" v44|d -1 [358, 380[358 MustHaveRegister 362 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rcx|d]" v45|d v31|d [360, 382[360 MustHaveRegister 362 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v44|d [380, 417[380 MustHaveRegister 382 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rdx|d]" v47|d -1 [382, 414[382 MustHaveRegister 384 MustHaveRegister 396 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r9|d]" v48|d -1 [412, 623[412 MustHaveRegister 561 LiveAtLoopEnd 610 MustHaveRegister  "StoreAtDefinition"
  v49|q QWORD "[rdx|q]" v49|q v47|d [414, 417[414 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[r8|q]" v50|q v70|q [418, 438[[1288, 1309[432 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v67|q [418, 454[436 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rcx|d]" v52|d v72|d [432, 557[[562, 574[432 MustHaveRegister 434 ShouldHaveRegister  "OneSpillStore"
  v53|d DWORD "[rdi|d]" v53|d v52|d [434, 502[[562, 574[434 MustHaveRegister 436 MustHaveRegister 454 MustHaveRegister 502 ShouldHaveRegister  "OneSpillStore"
  v54|d DWORD "[rsi|d]" v54|d -1 [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r8|q]" v55|q v54|d [456, 476[[562, 618[[630, 676[456 MustHaveRegister 458 ShouldHaveRegister 618 ShouldHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbx|d]" v56|d -1 [472, 476[[562, 574[[630, 670[472 MustHaveRegister 474 MustHaveRegister 572 ShouldHaveRegister 640 ShouldHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q v48|d [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [608, 611[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbx|q]" v59|q -1 [612, 620[612 MustHaveRegister 614 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [614, 622[614 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rax|d]" v61|d rax|d [626, 629[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rbx|q]" v62|q v56|d [670, 672[670 MustHaveRegister 672 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d rax|d [680, 683[680 MustHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rax|d]" v64|d v61|d [684, 694[694 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rsi|d]" v65|d -1 [500, 522[500 MustHaveRegister 504 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rdi|d]" v66|d v53|d [502, 524[502 MustHaveRegister 504 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q v65|d [522, 561[522 MustHaveRegister 524 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rdx|d]" v68|d -1 [524, 558[524 MustHaveRegister 526 MustHaveRegister 538 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rbx|q]" v69|q -1 [556, 557[556 MustHaveRegister  "NoDefinitionFound"
  v70|q QWORD "[rdx|q]" v70|q v68|d [558, 561[558 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[r10|d]" v71|d -1 [1374, 1390[1390 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[rcx|d]" v72|d v52|d [796, 814[814 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r10|d]" v73|d -1 [1320, 1336[1336 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r11|q]" v74|q -1 [1320, 1338[1338 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[vstack:2|q]" v1|q v1|q [574, 623[ "StoreAtDefinition"
  v76|q QWORD "[vstack:0|q]" v2|q v2|q [623, 716[[828, 840[674 ShouldHaveRegister  "StoreAtDefinition"
  v77|d DWORD "[vstack:7|d]" v9|d v9|d [840, 893[ "OneSpillStore"
  v78|d DWORD "[vstack:8|d]" v11|d v11|d [840, 893[ "OneSpillStore"
  v79|d DWORD "[vstack:9|d]" v30|d v30|d [944, 997[ "OneSpillStore"
  v80|d DWORD "[vstack:10|d]" v31|d v31|d [944, 997[ "OneSpillStore"
  v81|d DWORD "[vstack:4|d]" v48|d v48|d [623, 716[ "StoreAtDefinition"
  v82|d DWORD "[vstack:1|d]" v52|d v52|d [574, 623[ "OneSpillStore"
  v83|d DWORD "[vstack:3|d]" v53|d v53|d [574, 623[ "OneSpillStore"
  v84|d DWORD "[vstack:1|d]" v52|d v52|d [623, 745[[1186, 1196[744 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[vstack:3|d]" v53|d v53|d [623, 716[ "OneSpillStore"
  v86|q QWORD "[vstack:2|q]" v1|q v1|q [623, 716[[828, 900[[932, 1156[[1216, 1277[[1278, 1309[[1310, 1341[[1342, 1363[[1364, 1374[ "StoreAtDefinition"
  v87|q QWORD "[r11|q]" v2|q v2|q [840, 893[876 MustHaveRegister 886 ShouldHaveRegister  "StoreAtDefinition"
  v88|d DWORD "[rcx|d]" v52|d v52|d [1342, 1363[ "OneSpillStore"
  v89|q QWORD "[r8|q]" v1|q v1|q [1374, 1395[ "StoreAtDefinition"
  v90|q QWORD "[vstack:0|q]" v2|q v2|q [893, 900[[932, 944[ "StoreAtDefinition"
  v91|d DWORD "[vstack:7|d]" v9|d v9|d [893, 900[[932, 981[[1004, 1080[[1196, 1205[[1216, 1226[[1278, 1288[[1364, 1374[1204 ShouldHaveRegister  "OneSpillStore"
  v92|d DWORD "[vstack:8|d]" v11|d v11|d [893, 900[[1004, 1080[[1216, 1226[ "OneSpillStore"
  v93|q QWORD "[r11|q]" v2|q v2|q [944, 997[980 MustHaveRegister 990 ShouldHaveRegister  "StoreAtDefinition"
  v94|d DWORD "[r9|d]" v9|d v9|d [1374, 1395[ "OneSpillStore"
  v95|q QWORD "[vstack:0|q]" v2|q v2|q [997, 1156[[1216, 1277[[1278, 1309[[1310, 1341[[1342, 1363[[1364, 1374[1048 ShouldHaveRegister 1124 ShouldHaveRegister  "StoreAtDefinition"
  v96|d DWORD "[vstack:9|d]" v30|d v30|d [997, 1004[[1080, 1156[[1206, 1215[[1226, 1236[1214 ShouldHaveRegister  "OneSpillStore"
  v97|d DWORD "[vstack:10|d]" v31|d v31|d [997, 1004[[1080, 1156[[1226, 1236[ "OneSpillStore"
  v98|q QWORD "[r11|q]" v2|q v2|q [1374, 1395[ "StoreAtDefinition"
  v99|d DWORD "[r8|d]" v30|d v30|d [1256, 1277[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v7|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  158  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  160  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  238  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  360  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  414  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  418  <|@ instruction [v50|QWORD[.], v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  434  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  502  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr  558  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  610  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  612  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr  614  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = STACKMOVE (input: v83|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v75|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  626  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  680  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr  684  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr  796  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  878  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  880  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  882  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr  884  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = STACKMOVE (input: v78|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = STACKMOVE (input: v77|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  896  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  982  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  984  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  986  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr  988  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = STACKMOVE (input: v80|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = STACKMOVE (input: v79|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr 1000  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1054  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr 1058  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1130  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr 1134  <|@ instruction [v43|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: v97|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: v97|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] // MoveResolver resolve mapping <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] // MoveResolver resolve mapping <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1320  <|@ instruction [v73|DWORD, v74|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1360  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1374  <|@ instruction [v71|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOV input: [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOV input: [v0|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOV input: [v0|QWORD + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v4|DWORD = MOV input: [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  158  <|@ instruction v10|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  160  <|@ instruction v11|DWORD = SHL value: v9|DWORD size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction v13|DWORD[_] = MOV input: [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v15|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV input: [v25|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  238  <|@ instruction v27|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction v29|DWORD[_] = MOV input: [v28|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: [v29|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v30|DWORD = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ instruction v31|DWORD = SHL value: v30|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v32|DWORD[_] = MOV input: [v28|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v33|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction v44|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  360  <|@ instruction v45|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v45|DWORD, y: [v44|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction v47|DWORD[_] = MOV input: [v46|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction v48|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  414  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  434  <|@ instruction v53|DWORD = SHL value: v52|DWORD size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v53|DWORD, y: [v51|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v54|DWORD[_] = MOV input: [v51|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction v56|DWORD[_] = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  502  <|@ instruction v66|DWORD = INC value: v53|DWORD size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v65|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction v68|DWORD[_] = MOV input: [v67|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: [v68|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: v69|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr  558  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  610  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  612  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 464] size: QWORD <|@ <|@
      nr  614  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = STACKMOVE (input: v83|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  626  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  680  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v64|DWORD, y: v64|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v84|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: v72|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction v16|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  878  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  880  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  882  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 464] size: QWORD <|@ <|@
      nr  884  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 64] size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = STACKMOVE (input: v78|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = STACKMOVE (input: v77|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  894  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  896  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  982  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  984  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  986  <|@ instruction v38|QWORD = MOV input: [v36|QWORD + 464] size: QWORD <|@ <|@
      nr  988  <|@ instruction v39|QWORD = MOV input: [v38|QWORD + 64] size: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rax|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = STACKMOVE (input: v80|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = STACKMOVE (input: v79|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr 1000  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: v15|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rcx|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1054  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v34|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rcx|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1130  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction TESTBRANCH (x: v43|DWORD, y: v43|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: v97|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: v97|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] // MoveResolver resolve mapping <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v30|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] // MoveResolver resolve mapping <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v73|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v74|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: v1|QWORD[.] v2|QWORD[.] - - - v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1360  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: v1|QWORD[.] v2|QWORD[.] - v9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  158  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  360  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  434  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  502  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr  558  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  612  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: vstack:2|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  878  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  880  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  882  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  884  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  894  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: vstack:2|QWORD[.] r11|QWORD[.] - vstack:7|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  982  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  984  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  986  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] // MoveResolver resolve mapping <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] // MoveResolver resolve mapping <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1360  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  158  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  360  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  434  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  502  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr  558  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  612  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: vstack:2|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  878  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  880  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  882  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  884  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  894  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: vstack:2|QWORD[.] r11|QWORD[.] - vstack:7|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  982  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  984  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  986  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] // MoveResolver resolve mapping <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] // MoveResolver resolve mapping <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1360  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1362  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1168  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction vstack:3|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction vstack:3|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction rdi|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r9|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction vstack:8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: vstack:2|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction vstack:10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: vstack:2|QWORD[.] r11|QWORD[.] - vstack:7|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction vstack:8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction vstack:10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - vstack:9|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1386  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1334  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1336  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [38, 1512[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [874, 1242[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [34, 1512[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [924, 1072[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [822, 1171[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [248, 1424[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [246, 402[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [578, 1318[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[vstack:10|d]" vstack:10|d -1 [576, 732[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:64|q]" vstack:0|q -1 [38, 1512[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:40|d]" vstack:1|d -1 [874, 1242[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:56|q]" vstack:2|q -1 [34, 1512[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:44|d]" vstack:3|d -1 [924, 1072[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:28|d]" vstack:4|d -1 [822, 1171[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:32|d]" vstack:7|d -1 [248, 1424[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:28|d]" vstack:8|d -1 [246, 402[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:36|d]" vstack:9|d -1 [578, 1318[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[stack:28|d]" vstack:10|d -1 [576, 732[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1168  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1386  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1334  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1168  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1386  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1334  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1386  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rbx:0, r8:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [r8:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [r8:0, r11:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@reference-map: [r8:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   42  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B78" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605766550577986299
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4605081539527956000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" "B16" 
    successors "B21" "B72" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605758830394516840
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B70" 
    xhandlers
    flags 
    probability 4605000469309592798
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B69" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4604973498463345705
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603904856945336440
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603387837609096676
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B28" "B32" 
    successors "B37" "B67" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603899030055196708
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B66" 
    xhandlers
    flags 
    probability 4603326649004204679
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603306292472694888
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  868  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  870  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611495722276472724
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  898  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610700120552987991
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" "B49" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611486755718526471
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1124  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610605962063938515
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610574636946253071
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r10|QWORD[.] r11|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27] <|@ <|@
      nr 1166  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" 
    successors "B42" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612413095918675106
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3] <|@ <|@
      nr  846  <|@ instruction rdi|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: r10|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595532834078413285
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593898967925557565
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  964  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  966  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595530983308315933
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595459250844745914
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586696285647217311
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586688882566827903
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:40|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4542705579080843488
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600249424451864255
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B43" 
    successors "B63" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600285290683649265
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B63" "B74" "B68" "B10" "B26" 
    successors 
    xhandlers
    flags 
    probability 4603980111741797653
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596214369527239070
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596464970468722625
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" "B66" "B22" "B38" 
    successors 
    xhandlers
    flags 
    probability 4600076234034345431
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594831493178659860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593213552807239049
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVE input: Object[null] <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B71" 
    xhandlers
    flags 
    probability 4590731309342557266
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590144509063407316
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588307488674749247
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rbx:0, r8:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] r11|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3] <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  294  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B74" 
    xhandlers
    flags 
    probability 4590142915555084836
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590081154087329164
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589243469071101161
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4588433130415630658
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586309604613916400
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r11|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  622  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B68" 
    xhandlers
    flags 
    probability 4588430724981104764
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588337494738869055
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4581284239731483857
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4581277865698193940
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:32|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579647724987910473
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4579638103249806898
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - stack:36|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4574669252281156696
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B71" 
    xhandlers
    flags 
    probability 4569050959165568251
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B71" 
    xhandlers
    flags 
    probability 4567357694592818927
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 4566737300194793689
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B75" 
    xhandlers
    flags 
    probability 4561044691144297428
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B75" 
    xhandlers
    flags 
    probability 4559105958774656814
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4537148235223594254
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535547555043749319
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [r8:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4] <|@ <|@
      nr 1490  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [r8:0, r11:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: r8|QWORD[.] r11|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD <|@ <|@
      nr 1274  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1276  <|@ st <@st|@reference-map: [r8:0, stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3]
locals: stack:56|QWORD[.] stack:64|QWORD[.] - - - r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4] <|@ <|@
      nr 1476  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1308  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:64|QWORD[.] - r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5] <|@ <|@
      nr 1340  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #37         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokevirtual #34         // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokevirtual #27         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokevirtual #35         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokevirtual #35         // getRawValue:(int)java.lang.Object
    52: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f852c0700009090909090909090909090909048896c24304c8b56384c895424084c8b5e304c891c244c8b4610e8000000004d85c00f84a703000090909090909090418b700848ba0000002b787f0000488d3432909090904d85c00f840a030000909090909048baaddeaddeaddeadde483bd60f85c40500009090909090909041817a08addeadde0f855206000090909090909090458b480c418b7218418bc9d1e13b0cf50c0000000f835c05000090909090909090909048c1e6038b748e108bde48c1e3034c3bdb0f84030300009090909090418b7a2085ff0f851603000090909090909090909090418b72188b14f50c000000ffc13bd10f86500500009090909090909048c1e6038b5c8e1085db0f84db02000090909090813cdd08000000addeadde0f858e040000909090909090448b04dd0c000000418bc8d1e13bd10f86d9050000909090909090908b748e108bde48c1e3034c3bdb0f847a0200009090909090418b7a2085ff0f8514030000909090909090909090418b7218ffc13b0cf50c0000000f83680500009090909090909048c1e6038b548e1085d20f84d902000090909090813cd508000000addeadde0f8508040000909090909090458b4b0844894c242448c1e203e9a30000006666660f1f840000000000666666900f1f84000000000066666690909090909090908b74be10448bc649c1e0034d3bd80f846c0100009090909090418b5a2085db0f857b000000909090909090909090418b7218ffc73b3cf50c0000000f83580400009090909090909048c1e6038b54be1085d20f845a01000090909090813cd508000000addeadde0f855103000090909090909090498b9f58040000850348c1e2034c8bc2909090909090418b480c8bf9d1e73b7e0c0f825effffffe9230400009090909081fbaddeadde0f856b000000897c2414894c24189090909090909090909090909090909048be0000002b787f00004a8d140e488b9ad0010000488b4340498bf3498bd0ffd00f1f8400000000009090909085c00f85d90200009090908b7c24148b4c2418448b4c24244c8b1c244c8b542408e90dffffff897c2414894c24189090909081fbaddeadde0f84340000009090909090909090909090909048c1e303488bf3488b1424498bc848b8ffffffffffffffffe8000000000f1f840000000000eb8a9090904c8b1c244c8b542408e9b0feffff909090e909fdffff894c24189090909090909090908b4c241890909090909090908bc1488b6c24304883c438493ba7500400000f879e030000c39090909090909090909090909090909090b8ffffffff488b6c24304883c438493ba7500400000f8785030000c3909090418bc9ebaa909090418bc8eba290909048c7c600000000e963fcffff909090ebb89090909081ffaddeadde0f850b010000894c242444894c24204c8b1c249090909090909090909090909090909090418b730848ba0000002b787f0000488d3432488b86d00100004c8b5040498bf3488bd3488bd8498bc2ffd00f1f8400000000009090909085c00f856e0100009090908b4c2424448b4c24204c8b1c244c8b542408e966fcffff909090e929ffffff44894c24209090909081ffaddeadde0f85c7000000894c2424448944241c4c8b1c249090909090909090909090909090909090418b730848ba0000002b787f0000488d3432488b86d00100004c8b5040498bf3488bd3488bd8498bc2ffd00f1f8400000000009090909085c00f85e60000009090908b4c2424448b44241c4c8b1c244c8b542408e963fcffff894c242444894c24209090909081ffaddeadde0f84bf0000009090909090909090909090909048c1e703488bf7488b1424488bcb48b8ffffffffffffffffe8000000000f1f840000000000e9f6feffff894c2424448944241c9090909081ffaddeadde0f84800000009090909090909090909090909048c1e703488bf7488b1424488bcb48b8ffffffffffffffffe8000000000f1f840000000000e93affffff909090e9effdffff909090e9edfdffff909090e9e5fdffff909090e9a9fdffff9090908b4c2420e9a7fdffff9090908b4c241ce99bfdffff9090904c8b1c244c8b542408e9e9faffff9090904c8b1c244c8b542408e969fbffff90909049c7c30000000041bae5c5feff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c39402000041bac4d7feffebcc44894c242090909041bae5b3feff4c8b1c244c8b442408909090909090904589978404000049c7879004000000000000e8000000000f1f8400000000009090909090909041c78784040000e560feff49c7879004000000000000e8000000000f1f8400000000009090909090909041c78784040000e570feff49c7879004000000000000e8000000000f1f84000000000090909049c7c31400000041bac4d6feffe926ffffff9090909090909041c78784040000e591feff49c7879004000000000000e8000000000f1f84000000000044894c242090909041bae5a1feffe92bffffff48896c2430e800000000e9c5f8fffff4488d0d4efcffff49898f68040000e977f8fffff4488d0d67fcffff49898f68040000e963f8fffff441c78784040000c4d6feff49c7879004000014000000e8000000000f1f84000000000041c78784040000f5d4feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5cafeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b8feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f596feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f543feff49c7879004000098070000e8000000000f1f84000000000041c78784040000f565feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f57afeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f575feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f525feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f533feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 OSR_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD  <||@
  Comment 76 32 r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD  <||@
  Comment 80 34 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 85 36 r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD  <||@
  Comment 89 38 stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 93 40 r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 97 42 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 97 {Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 102 44 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 111 block B2 null  <||@
  Comment 111 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 111 60 NOP  <||@
  Comment 112 62 NOP  <||@
  Comment 113 64 NOP  <||@
  Comment 114 66 NOP  <||@
  Comment 115 68 NOP  <||@
  Comment 116 70 NOP  <||@
  Comment 117 72 NOP  <||@
  Comment 118 74 rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 122 76 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 132 78 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0  <||@
  Comment 136 80 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 136 block B3 null  <||@
  Comment 136 82 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 136 84 NOP  <||@
  Comment 137 86 NOP  <||@
  Comment 138 88 NOP  <||@
  Comment 139 90 NOP  <||@
  Comment 140 92 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD  <||@
  Comment 149 block B5 null  <||@
  Comment 149 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 149 106 NOP  <||@
  Comment 150 108 NOP  <||@
  Comment 151 110 NOP  <||@
  Comment 152 112 NOP  <||@
  Comment 153 114 NOP  <||@
  Comment 154 116 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 154 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 164 118 CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD  <||@
  Comment 173 block B6 null  <||@
  Comment 173 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 122 NOP  <||@
  Comment 174 124 NOP  <||@
  Comment 175 126 NOP  <||@
  Comment 176 128 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 176 block B7 null  <||@
  Comment 176 130 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 176 132 NOP  <||@
  Comment 177 134 NOP  <||@
  Comment 178 136 NOP  <||@
  Comment 179 138 NOP  <||@
  Comment 180 140 CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3]  <||@
  Comment 180 [r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 180 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 180 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 194 block B8 null  <||@
  Comment 194 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 194 144 NOP  <||@
  Comment 195 146 NOP  <||@
  Comment 196 148 NOP  <||@
  Comment 197 150 NOP  <||@
  Comment 198 152 NOP  <||@
  Comment 199 154 NOP  <||@
  Comment 200 156 NOP  <||@
  Comment 201 158 r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3]  <||@
  Comment 201 [r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 201 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 205 160 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 209 162 rcx|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 214 164 CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3]  <||@
  Comment 214 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 214 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 227 block B9 null  <||@
  Comment 227 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 227 168 NOP  <||@
  Comment 228 170 NOP  <||@
  Comment 229 172 NOP  <||@
  Comment 230 174 NOP  <||@
  Comment 231 176 NOP  <||@
  Comment 232 178 NOP  <||@
  Comment 233 180 NOP  <||@
  Comment 234 182 NOP  <||@
  Comment 235 184 NOP  <||@
  Comment 236 186 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 240 188 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 244 190 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 250 192 CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 259 block B11 null  <||@
  Comment 259 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 208 NOP  <||@
  Comment 260 210 NOP  <||@
  Comment 261 212 NOP  <||@
  Comment 262 214 NOP  <||@
  Comment 263 216 NOP  <||@
  Comment 264 218 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 268 220 TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 276 block B12 null  <||@
  Comment 276 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 276 224 NOP  <||@
  Comment 277 226 NOP  <||@
  Comment 278 228 NOP  <||@
  Comment 279 230 JUMP ~outgoingValues: [] destination: B12 -> B20  <||@
  Comment 279 block B20 null  <||@
  Comment 279 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 279 414 NOP  <||@
  Comment 280 416 NOP  <||@
  Comment 281 418 NOP  <||@
  Comment 282 420 NOP  <||@
  Comment 283 422 NOP  <||@
  Comment 284 424 NOP  <||@
  Comment 285 426 NOP  <||@
  Comment 286 428 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 290 430 rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27]  <||@
  Comment 290 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r9|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 297 432 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 299 434 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD  <||@
  Comment 307 block B21 null  <||@
  Comment 307 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 307 438 NOP  <||@
  Comment 308 440 NOP  <||@
  Comment 309 442 NOP  <||@
  Comment 310 444 NOP  <||@
  Comment 311 446 NOP  <||@
  Comment 312 448 NOP  <||@
  Comment 313 450 NOP  <||@
  Comment 314 452 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 318 454 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 322 456 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 330 block B23 null  <||@
  Comment 330 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 330 470 NOP  <||@
  Comment 331 472 NOP  <||@
  Comment 332 474 NOP  <||@
  Comment 333 476 NOP  <||@
  Comment 334 478 CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 334 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 351 block B24 null  <||@
  Comment 351 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 482 NOP  <||@
  Comment 352 484 NOP  <||@
  Comment 353 486 NOP  <||@
  Comment 354 488 NOP  <||@
  Comment 355 490 NOP  <||@
  Comment 356 492 NOP  <||@
  Comment 357 494 r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 365 496 rcx|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 370 498 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD  <||@
  Comment 378 block B25 null  <||@
  Comment 378 500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 378 502 NOP  <||@
  Comment 379 504 NOP  <||@
  Comment 380 506 NOP  <||@
  Comment 381 508 NOP  <||@
  Comment 382 510 NOP  <||@
  Comment 383 512 NOP  <||@
  Comment 384 514 NOP  <||@
  Comment 385 516 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 389 518 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 395 520 CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD  <||@
  Comment 404 block B27 null  <||@
  Comment 404 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 404 536 NOP  <||@
  Comment 405 538 NOP  <||@
  Comment 406 540 NOP  <||@
  Comment 407 542 NOP  <||@
  Comment 408 544 NOP  <||@
  Comment 409 546 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 413 548 TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 421 block B28 null  <||@
  Comment 421 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 421 552 NOP  <||@
  Comment 422 554 NOP  <||@
  Comment 423 556 NOP  <||@
  Comment 424 558 JUMP ~outgoingValues: [] destination: B28 -> B36  <||@
  Comment 424 block B36 null  <||@
  Comment 424 742 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 744 NOP  <||@
  Comment 425 746 NOP  <||@
  Comment 426 748 NOP  <||@
  Comment 427 750 NOP  <||@
  Comment 428 752 NOP  <||@
  Comment 429 754 NOP  <||@
  Comment 430 756 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 434 758 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 436 760 CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27]  <||@
  Comment 436 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 436 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 449 block B37 null  <||@
  Comment 449 762 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 449 764 NOP  <||@
  Comment 450 766 NOP  <||@
  Comment 451 768 NOP  <||@
  Comment 452 770 NOP  <||@
  Comment 453 772 NOP  <||@
  Comment 454 774 NOP  <||@
  Comment 455 776 NOP  <||@
  Comment 456 778 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 460 780 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 464 782 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 472 block B39 null  <||@
  Comment 472 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 796 NOP  <||@
  Comment 473 798 NOP  <||@
  Comment 474 800 NOP  <||@
  Comment 475 802 NOP  <||@
  Comment 476 804 CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 476 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 493 block B40 null  <||@
  Comment 493 806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 493 808 NOP  <||@
  Comment 494 810 NOP  <||@
  Comment 495 812 NOP  <||@
  Comment 496 814 NOP  <||@
  Comment 497 816 NOP  <||@
  Comment 498 818 NOP  <||@
  Comment 499 820 r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27]  <||@
  Comment 499 [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 499 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 503 822 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 508 824 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 512 828 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 517 block B42 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 517 850 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 852 NOP  <||@
  Comment 545 854 NOP  <||@
  Comment 546 856 NOP  <||@
  Comment 547 858 NOP  <||@
  Comment 548 860 NOP  <||@
  Comment 549 862 NOP  <||@
  Comment 550 864 NOP  <||@
  Comment 551 866 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 555 868 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 562 870 CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 571 block B44 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 571 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 571 886 NOP  <||@
  Comment 572 888 NOP  <||@
  Comment 573 890 NOP  <||@
  Comment 574 892 NOP  <||@
  Comment 575 894 NOP  <||@
  Comment 576 896 rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 580 898 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 588 block B45 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 588 900 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 588 902 NOP  <||@
  Comment 589 904 NOP  <||@
  Comment 590 906 NOP  <||@
  Comment 591 908 JUMP ~outgoingValues: [] destination: B45 -> B53  <||@
  Comment 591 block B53 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 591 1084 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 591 1086 NOP  <||@
  Comment 592 1088 NOP  <||@
  Comment 593 1090 NOP  <||@
  Comment 594 1092 NOP  <||@
  Comment 595 1094 NOP  <||@
  Comment 596 1096 NOP  <||@
  Comment 597 1098 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 601 1100 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 603 1102 CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27]  <||@
  Comment 603 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3          |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |rcx|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |           |   |   |   |    <||@
  Comment 603 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 616 block B54 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 616 1104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 616 1106 NOP  <||@
  Comment 617 1108 NOP  <||@
  Comment 618 1110 NOP  <||@
  Comment 619 1112 NOP  <||@
  Comment 620 1114 NOP  <||@
  Comment 621 1116 NOP  <||@
  Comment 622 1118 NOP  <||@
  Comment 623 1120 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 627 1122 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 631 1124 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD  <||@
  Comment 639 block B56 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 639 1136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 639 1138 NOP  <||@
  Comment 640 1140 NOP  <||@
  Comment 641 1142 NOP  <||@
  Comment 642 1144 NOP  <||@
  Comment 643 1146 CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 643 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 660 block B57 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 660 1148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 660 1150 NOP  <||@
  Comment 661 1152 NOP  <||@
  Comment 662 1154 NOP  <||@
  Comment 663 1156 NOP  <||@
  Comment 664 1158 NOP  <||@
  Comment 665 1160 NOP  <||@
  Comment 666 1162 NOP  <||@
  Comment 667 1164 SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27]  <||@
  Comment 674 [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3          |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |rcx|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |           |   |   |   |    <||@
  Comment 674 {infopoint: SAFEPOINT}  <||@
  Comment 674 POLL_FAR  <||@
  Comment 676 1166 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 680 1170 JUMP ~outgoingValues: [] destination: B57 -> B41  <||@
  Comment 680 block B41 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 680 830 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 680 826 r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 683 832 NOP  <||@
  Comment 684 834 NOP  <||@
  Comment 685 836 NOP  <||@
  Comment 686 838 NOP  <||@
  Comment 687 840 NOP  <||@
  Comment 688 842 NOP  <||@
  Comment 689 844 rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3]  <||@
  Comment 689 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 689 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 693 846 rdi|DWORD = SHL value: rcx|DWORD size: DWORD  <||@
  Comment 697 848 CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3]  <||@
  Comment 697 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 697 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 711 block B46 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 711 910 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 711 912 NOP  <||@
  Comment 712 914 NOP  <||@
  Comment 713 916 NOP  <||@
  Comment 714 918 NOP  <||@
  Comment 715 920 CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 715 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 727 block B47 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 727 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 727 924 stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 731 926 stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 735 928 NOP  <||@
  Comment 736 930 NOP  <||@
  Comment 737 932 NOP  <||@
  Comment 738 934 NOP  <||@
  Comment 739 936 NOP  <||@
  Comment 740 938 NOP  <||@
  Comment 741 940 NOP  <||@
  Comment 742 942 NOP  <||@
  Comment 743 944 NOP  <||@
  Comment 744 946 NOP  <||@
  Comment 745 948 NOP  <||@
  Comment 746 950 NOP  <||@
  Comment 747 952 NOP  <||@
  Comment 748 954 NOP  <||@
  Comment 749 956 NOP  <||@
  Comment 750 958 NOP  <||@
  Comment 751 960 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 761 962 rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0  <||@
  Comment 765 964 rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD  <||@
  Comment 772 966 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 776 968 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 779 970 rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 782 972 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24]  <||@
  Comment 782 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 782 INLINE_INVOKE  <||@
  Comment 784 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |-  |-   <||@
  Comment 792 974 JUMP ~outgoingValues: [] destination: B47 -> B51  <||@
  Comment 792 block B51 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 792 1052 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 792 1054 NOP  <||@
  Comment 793 1056 NOP  <||@
  Comment 794 1058 NOP  <||@
  Comment 795 1060 NOP  <||@
  Comment 796 1062 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD  <||@
  Comment 804 block B52 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 804 1064 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 804 1066 NOP  <||@
  Comment 805 1068 NOP  <||@
  Comment 806 1070 NOP  <||@
  Comment 807 1072 rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 811 1074 rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 815 1076 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 820 1078 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 824 1080 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 829 1082 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 834 block B48 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 834 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 834 978 stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 838 980 stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 842 982 NOP  <||@
  Comment 843 984 NOP  <||@
  Comment 844 986 NOP  <||@
  Comment 845 988 NOP  <||@
  Comment 846 990 CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 846 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 858 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 858 1012 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 858 1014 NOP  <||@
  Comment 859 1016 NOP  <||@
  Comment 860 1018 NOP  <||@
  Comment 861 1020 NOP  <||@
  Comment 862 1022 NOP  <||@
  Comment 863 1024 NOP  <||@
  Comment 864 1026 NOP  <||@
  Comment 865 1028 NOP  <||@
  Comment 866 1030 NOP  <||@
  Comment 867 1032 NOP  <||@
  Comment 868 1034 NOP  <||@
  Comment 869 1036 NOP  <||@
  Comment 870 1038 NOP  <||@
  Comment 871 1040 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 875 1042 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 878 1044 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 882 1046 rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 885 1048 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24]  <||@
  Comment 885 INVOKEVIRTUAL  <||@
  Comment 895 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 900 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |-  |-   <||@
  Comment 908 1050 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 910 block B49 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 910 992 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 910 994 NOP  <||@
  Comment 911 996 NOP  <||@
  Comment 912 998 NOP  <||@
  Comment 913 1006 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 917 1008 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 922 1010 JUMP ~outgoingValues: [] destination: B49 -> B53  <||@
  Comment 927 block B4 null  <||@
  Comment 927 94 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 927 96 NOP  <||@
  Comment 928 98 NOP  <||@
  Comment 929 100 NOP  <||@
  Comment 930 102 JUMP ~outgoingValues: [] destination: B4 -> B7  <||@
  Comment 935 block B43 null  <||@
  Comment 935 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 935 874 stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 939 876 NOP  <||@
  Comment 940 878 NOP  <||@
  Comment 941 880 NOP  <||@
  Comment 942 882 JUMP ~outgoingValues: [] destination: B43 -> B62  <||@
  Comment 942 block B62 null  <||@
  Comment 942 1224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 942 1226 NOP  <||@
  Comment 943 1228 NOP  <||@
  Comment 944 1230 NOP  <||@
  Comment 945 1232 JUMP ~outgoingValues: [] destination: B62 -> B63  <||@
  Comment 945 block B63 null  <||@
  Comment 945 1234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 945 1236 NOP  <||@
  Comment 946 1238 NOP  <||@
  Comment 947 1240 NOP  <||@
  Comment 948 1242 rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 952 1244 JUMP ~outgoingValues: [] destination: B63 -> B75  <||@
  Comment 952 block B75 null  <||@
  Comment 952 1428 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 952 1430 NOP  <||@
  Comment 953 1432 NOP  <||@
  Comment 954 1434 NOP  <||@
  Comment 955 1436 NOP  <||@
  Comment 956 1438 NOP  <||@
  Comment 957 1440 NOP  <||@
  Comment 958 1442 NOP  <||@
  Comment 959 1444 NOP  <||@
  Comment 960 1446 rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 962 1448 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 971 POLL_RETURN_FAR  <||@
  Comment 985 block B55 null  <||@
  Comment 985 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 985 1128 NOP  <||@
  Comment 986 1130 NOP  <||@
  Comment 987 1132 NOP  <||@
  Comment 988 1134 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 988 block B59 null  <||@
  Comment 988 1182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 988 1184 NOP  <||@
  Comment 989 1186 NOP  <||@
  Comment 990 1188 NOP  <||@
  Comment 991 1190 JUMP ~outgoingValues: [] destination: B59 -> B64  <||@
  Comment 991 block B64 null  <||@
  Comment 991 1246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 991 1248 NOP  <||@
  Comment 992 1250 NOP  <||@
  Comment 993 1252 NOP  <||@
  Comment 994 1254 JUMP ~outgoingValues: [] destination: B64 -> B71  <||@
  Comment 994 block B71 null  <||@
  Comment 994 1352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 994 1354 NOP  <||@
  Comment 995 1356 NOP  <||@
  Comment 996 1358 NOP  <||@
  Comment 997 1360 NOP  <||@
  Comment 998 1362 NOP  <||@
  Comment 999 1364 NOP  <||@
  Comment 1000 1366 NOP  <||@
  Comment 1001 1368 NOP  <||@
  Comment 1002 1370 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1007 1372 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1016 POLL_RETURN_FAR  <||@
  Comment 1030 block B10 null  <||@
  Comment 1030 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 196 NOP  <||@
  Comment 1031 198 NOP  <||@
  Comment 1032 200 NOP  <||@
  Comment 1033 202 rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1036 204 JUMP ~outgoingValues: [] destination: B10 -> B75  <||@
  Comment 1038 block B26 null  <||@
  Comment 1038 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 524 NOP  <||@
  Comment 1039 526 NOP  <||@
  Comment 1040 528 NOP  <||@
  Comment 1041 530 rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1044 532 JUMP ~outgoingValues: [] destination: B26 -> B75  <||@
  Comment 1046 block B1 null  <||@
  Comment 1046 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1046 48 NOP  <||@
  Comment 1047 50 NOP  <||@
  Comment 1048 52 NOP  <||@
  Comment 1049 54 rsi|QWORD = MOVE input: Object[null]  <||@
  Comment 1056 56 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 1061 block B22 null  <||@
  Comment 1061 458 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1061 460 NOP  <||@
  Comment 1062 462 NOP  <||@
  Comment 1063 464 NOP  <||@
  Comment 1064 466 JUMP ~outgoingValues: [] destination: B22 -> B71  <||@
  Comment 1066 block B13 null  <||@
  Comment 1066 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1066 234 NOP  <||@
  Comment 1067 236 NOP  <||@
  Comment 1068 238 NOP  <||@
  Comment 1069 240 NOP  <||@
  Comment 1070 242 CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 1070 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 1082 block B14 null  <||@
  Comment 1082 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1082 246 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1086 248 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1091 250 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1095 252 NOP  <||@
  Comment 1096 254 NOP  <||@
  Comment 1097 256 NOP  <||@
  Comment 1098 258 NOP  <||@
  Comment 1099 260 NOP  <||@
  Comment 1100 262 NOP  <||@
  Comment 1101 264 NOP  <||@
  Comment 1102 266 NOP  <||@
  Comment 1103 268 NOP  <||@
  Comment 1104 270 NOP  <||@
  Comment 1105 272 NOP  <||@
  Comment 1106 274 NOP  <||@
  Comment 1107 276 NOP  <||@
  Comment 1108 278 NOP  <||@
  Comment 1109 280 NOP  <||@
  Comment 1110 282 NOP  <||@
  Comment 1111 284 NOP  <||@
  Comment 1112 286 rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3]  <||@
  Comment 1112 [rbx:0, r8:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5            |6  |7 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 1112 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1116 288 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1126 290 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1130 292 rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD  <||@
  Comment 1137 294 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 1141 296 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1144 298 rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1147 300 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1150 302 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1153 304 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24]  <||@
  Comment 1153 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1153 INLINE_INVOKE  <||@
  Comment 1155 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |-  |-   <||@
  Comment 1163 306 JUMP ~outgoingValues: [] destination: B14 -> B18  <||@
  Comment 1163 block B18 null  <||@
  Comment 1163 382 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1163 384 NOP  <||@
  Comment 1164 386 NOP  <||@
  Comment 1165 388 NOP  <||@
  Comment 1166 390 NOP  <||@
  Comment 1167 392 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD  <||@
  Comment 1175 block B19 null  <||@
  Comment 1175 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1175 396 NOP  <||@
  Comment 1176 398 NOP  <||@
  Comment 1177 400 NOP  <||@
  Comment 1178 402 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1182 404 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1187 406 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 408 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 410 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 1201 block B38 null  <||@
  Comment 1201 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 786 NOP  <||@
  Comment 1202 788 NOP  <||@
  Comment 1203 790 NOP  <||@
  Comment 1204 792 JUMP ~outgoingValues: [] destination: B38 -> B71  <||@
  Comment 1209 block B29 null  <||@
  Comment 1209 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1209 562 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1214 564 NOP  <||@
  Comment 1215 566 NOP  <||@
  Comment 1216 568 NOP  <||@
  Comment 1217 570 NOP  <||@
  Comment 1218 572 CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 1218 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 1230 block B30 null  <||@
  Comment 1230 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1230 576 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1234 578 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1239 580 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1243 582 NOP  <||@
  Comment 1244 584 NOP  <||@
  Comment 1245 586 NOP  <||@
  Comment 1246 588 NOP  <||@
  Comment 1247 590 NOP  <||@
  Comment 1248 592 NOP  <||@
  Comment 1249 594 NOP  <||@
  Comment 1250 596 NOP  <||@
  Comment 1251 598 NOP  <||@
  Comment 1252 600 NOP  <||@
  Comment 1253 602 NOP  <||@
  Comment 1254 604 NOP  <||@
  Comment 1255 606 NOP  <||@
  Comment 1256 608 NOP  <||@
  Comment 1257 610 NOP  <||@
  Comment 1258 612 NOP  <||@
  Comment 1259 614 NOP  <||@
  Comment 1260 616 rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27]  <||@
  Comment 1260 [rbx:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]         |              |   |                |   |   |   |    <||@
  Comment 1260 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1264 618 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1274 620 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1278 622 rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD  <||@
  Comment 1285 624 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 1289 626 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1292 628 rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1295 630 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1298 632 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1301 634 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24]  <||@
  Comment 1301 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1301 INLINE_INVOKE  <||@
  Comment 1303 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |-  |-   <||@
  Comment 1311 636 JUMP ~outgoingValues: [] destination: B30 -> B34  <||@
  Comment 1311 block B34 null  <||@
  Comment 1311 712 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1311 714 NOP  <||@
  Comment 1312 716 NOP  <||@
  Comment 1313 718 NOP  <||@
  Comment 1314 720 NOP  <||@
  Comment 1315 722 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD  <||@
  Comment 1323 block B35 null  <||@
  Comment 1323 724 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1323 726 NOP  <||@
  Comment 1324 728 NOP  <||@
  Comment 1325 730 NOP  <||@
  Comment 1326 732 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1330 734 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1335 736 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1339 738 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1344 740 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1349 block B15 null  <||@
  Comment 1349 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1349 310 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1353 312 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1358 314 NOP  <||@
  Comment 1359 316 NOP  <||@
  Comment 1360 318 NOP  <||@
  Comment 1361 320 NOP  <||@
  Comment 1362 322 CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1362 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1374 block B17 null  <||@
  Comment 1374 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1374 344 NOP  <||@
  Comment 1375 346 NOP  <||@
  Comment 1376 348 NOP  <||@
  Comment 1377 350 NOP  <||@
  Comment 1378 352 NOP  <||@
  Comment 1379 354 NOP  <||@
  Comment 1380 356 NOP  <||@
  Comment 1381 358 NOP  <||@
  Comment 1382 360 NOP  <||@
  Comment 1383 362 NOP  <||@
  Comment 1384 364 NOP  <||@
  Comment 1385 366 NOP  <||@
  Comment 1386 368 NOP  <||@
  Comment 1387 370 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 1391 372 rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1394 374 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1398 376 rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 378 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24]  <||@
  Comment 1401 INVOKEVIRTUAL  <||@
  Comment 1411 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 1416 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |-  |-   <||@
  Comment 1424 380 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 1429 block B31 null  <||@
  Comment 1429 638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1429 640 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1433 642 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1438 644 NOP  <||@
  Comment 1439 646 NOP  <||@
  Comment 1440 648 NOP  <||@
  Comment 1441 650 NOP  <||@
  Comment 1442 652 CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1442 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1454 block B33 null  <||@
  Comment 1454 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1454 674 NOP  <||@
  Comment 1455 676 NOP  <||@
  Comment 1456 678 NOP  <||@
  Comment 1457 680 NOP  <||@
  Comment 1458 682 NOP  <||@
  Comment 1459 684 NOP  <||@
  Comment 1460 686 NOP  <||@
  Comment 1461 688 NOP  <||@
  Comment 1462 690 NOP  <||@
  Comment 1463 692 NOP  <||@
  Comment 1464 694 NOP  <||@
  Comment 1465 696 NOP  <||@
  Comment 1466 698 NOP  <||@
  Comment 1467 700 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 1471 702 rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1474 704 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1478 706 rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 708 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24]  <||@
  Comment 1481 INVOKEVIRTUAL  <||@
  Comment 1491 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 1496 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |-  |-   <||@
  Comment 1504 710 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1509 block B58 null  <||@
  Comment 1509 1172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1509 1174 NOP  <||@
  Comment 1510 1176 NOP  <||@
  Comment 1511 1178 NOP  <||@
  Comment 1512 1180 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 1517 block B70 null  <||@
  Comment 1517 1342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1517 1344 NOP  <||@
  Comment 1518 1346 NOP  <||@
  Comment 1519 1348 NOP  <||@
  Comment 1520 1350 JUMP ~outgoingValues: [] destination: B70 -> B71  <||@
  Comment 1525 block B66 null  <||@
  Comment 1525 1278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1525 1280 NOP  <||@
  Comment 1526 1282 NOP  <||@
  Comment 1527 1284 NOP  <||@
  Comment 1528 1286 JUMP ~outgoingValues: [] destination: B66 -> B71  <||@
  Comment 1533 block B61 null  <||@
  Comment 1533 1214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1533 1216 NOP  <||@
  Comment 1534 1218 NOP  <||@
  Comment 1535 1220 NOP  <||@
  Comment 1536 1222 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1541 block B74 null  <||@
  Comment 1541 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 1418 NOP  <||@
  Comment 1542 1420 NOP  <||@
  Comment 1543 1422 NOP  <||@
  Comment 1544 1424 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1548 1426 JUMP ~outgoingValues: [] destination: B74 -> B75  <||@
  Comment 1553 block B68 null  <||@
  Comment 1553 1310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1553 1312 NOP  <||@
  Comment 1554 1314 NOP  <||@
  Comment 1555 1316 NOP  <||@
  Comment 1556 1318 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1560 1320 JUMP ~outgoingValues: [] destination: B68 -> B75  <||@
  Comment 1565 block B16 null  <||@
  Comment 1565 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1565 326 NOP  <||@
  Comment 1566 328 NOP  <||@
  Comment 1567 330 NOP  <||@
  Comment 1568 336 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1572 338 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1577 340 JUMP ~outgoingValues: [] destination: B16 -> B20  <||@
  Comment 1582 block B32 null  <||@
  Comment 1582 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1582 656 NOP  <||@
  Comment 1583 658 NOP  <||@
  Comment 1584 660 NOP  <||@
  Comment 1585 666 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1589 668 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1594 670 JUMP ~outgoingValues: [] destination: B32 -> B36  <||@
  Comment 1599 block B76 null  <||@
  Comment 1599 1450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1599 1452 NOP  <||@
  Comment 1600 1454 NOP  <||@
  Comment 1601 1456 NOP  <||@
  Comment 1602 1458 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1609 1460 r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5]  <||@
  Comment 1615 1462 JUMP ~outgoingValues: [] destination: B76 -> B79  <||@
  Comment 1615 block B79 null  <||@
  Comment 1615 1492 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1615 1494 NOP  <||@
  Comment 1616 1496 NOP  <||@
  Comment 1617 1498 NOP  <||@
  Comment 1618 1500 NOP  <||@
  Comment 1619 1502 NOP  <||@
  Comment 1620 1504 NOP  <||@
  Comment 1621 1506 NOP  <||@
  Comment 1622 1508 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1629 1510 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1636 1512 DEOPT info [bci:3]  <||@
  Comment 1636 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1641 [r8:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5            |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 1649 block B78 null  <||@
  Comment 1649 1478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1649 1480 NOP  <||@
  Comment 1650 1482 NOP  <||@
  Comment 1651 1484 NOP  <||@
  Comment 1652 1486 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1659 1488 r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4]  <||@
  Comment 1665 1490 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 1667 block B72 null  <||@
  Comment 1667 1374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1667 1376 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1672 1378 NOP  <||@
  Comment 1673 1380 NOP  <||@
  Comment 1674 1382 NOP  <||@
  Comment 1675 1384 r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5]  <||@
  Comment 1681 1392 JUMP ~outgoingValues: [] destination: B72 -> B73  <||@
  Comment 1681 block B73 null  <||@
  Comment 1681 1394 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1681 1388 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1685 1390 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 1396 NOP  <||@
  Comment 1691 1398 NOP  <||@
  Comment 1692 1400 NOP  <||@
  Comment 1693 1402 NOP  <||@
  Comment 1694 1404 NOP  <||@
  Comment 1695 1406 NOP  <||@
  Comment 1696 1408 NOP  <||@
  Comment 1697 1410 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1704 1412 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1715 1414 DEOPT info [bci:27]  <||@
  Comment 1715 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1720 [r8:0, r11:0]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0            |1             |2  |3         |4  |5  |6  |7 
     locals:  |r8|QWORD[.]  |r11|QWORD[.]  |-  |r9|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]   |              |   |          |   |   |   |    <||@
  Comment 1728 block B60 null  <||@
  Comment 1728 1192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1728 1194 NOP  <||@
  Comment 1729 1196 NOP  <||@
  Comment 1730 1198 NOP  <||@
  Comment 1731 1200 NOP  <||@
  Comment 1732 1202 NOP  <||@
  Comment 1733 1204 NOP  <||@
  Comment 1734 1206 NOP  <||@
  Comment 1735 1208 MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD  <||@
  Comment 1746 1210 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1757 1212 DEOPT info [bci:27]  <||@
  Comment 1757 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1762 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3          |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |rcx|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]         |                   |   |           |   |   |   |    <||@
  Comment 1770 block B65 null  <||@
  Comment 1770 1256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1770 1258 NOP  <||@
  Comment 1771 1260 NOP  <||@
  Comment 1772 1262 NOP  <||@
  Comment 1773 1264 NOP  <||@
  Comment 1774 1266 NOP  <||@
  Comment 1775 1268 NOP  <||@
  Comment 1776 1270 NOP  <||@
  Comment 1777 1272 MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD  <||@
  Comment 1788 1274 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1799 1276 DEOPT info [bci:3]  <||@
  Comment 1799 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1804 [r8:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5            |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 1812 block B77 null  <||@
  Comment 1812 1464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1812 1466 NOP  <||@
  Comment 1813 1468 NOP  <||@
  Comment 1814 1470 NOP  <||@
  Comment 1815 1472 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1822 1474 r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4]  <||@
  Comment 1828 1476 JUMP ~outgoingValues: [] destination: B77 -> B79  <||@
  Comment 1833 block B67 null  <||@
  Comment 1833 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1833 1290 NOP  <||@
  Comment 1834 1292 NOP  <||@
  Comment 1835 1294 NOP  <||@
  Comment 1836 1296 NOP  <||@
  Comment 1837 1298 NOP  <||@
  Comment 1838 1300 NOP  <||@
  Comment 1839 1302 NOP  <||@
  Comment 1840 1304 MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD  <||@
  Comment 1851 1306 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1862 1308 DEOPT info [bci:27]  <||@
  Comment 1862 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1867 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3         |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]         |                   |   |          |   |   |   |    <||@
  Comment 1875 block B69 null  <||@
  Comment 1875 1322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1875 1324 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1880 1326 NOP  <||@
  Comment 1881 1328 NOP  <||@
  Comment 1882 1330 NOP  <||@
  Comment 1883 1332 r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5]  <||@
  Comment 1889 1340 JUMP ~outgoingValues: [] destination: B69 -> B73  <||@
  Comment 1899 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1924 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1944 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1972 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1977 [r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2007 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2012 [r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2047 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2077 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2082 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r9|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 2112 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2117 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 2147 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2152 [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 2182 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2187 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3          |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |rcx|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |           |   |   |   |    <||@
  Comment 2217 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2222 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2252 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2257 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2287 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2292 [rbx:0, r8:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5            |6  |7 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2322 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2327 [rbx:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]         |              |   |                |   |   |   |    <||@
  Comment 2335 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2335 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2341 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotOSRCompilation-8654[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)@3]"
  method "HotSpotOSRCompilation-8654[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)@3]"
  date 1724269712430
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aace1e0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85836ecbfe66669089842400c0feff4883ec389041817f20000000000f852c0700009090909090909090909090909048896c24304c8b56384c895424084c8b5e304c891c244c8b4610e8ba06e0fe4d85c00f84a703000090909090909090418b700848ba0000002b787f0000488d3432909090904d85c00f840a030000909090909048ba18ac002c787f0000483bd60f85c40500009090909090909041817a08e8a500010f855206000090909090909090458b480c418b7218418bc9d1e13b0cf50c0000000f835c05000090909090909090909048c1e6038b748e108bde48c1e3034c3bdb0f84030300009090909090418b7a2085ff0f851603000090909090909090909090418b72188b14f50c000000ffc13bd10f86500500009090909090909048c1e6038b5c8e1085db0f84db02000090909090813cdd0800000018ac00010f858e040000909090909090448b04dd0c000000418bc8d1e13bd10f86d9050000909090909090908b748e108bde48c1e3034c3bdb0f847a0200009090909090418b7a2085ff0f8514030000909090909090909090418b7218ffc13b0cf50c0000000f83680500009090909090909048c1e6038b548e1085d20f84d902000090909090813cd50800000018ac00010f8508040000909090909090458b4b0844894c242448c1e203e9a30000006666660f1f840000000000666666900f1f84000000000066666690909090909090908b74be10448bc649c1e0034d3bd80f846c0100009090909090418b5a2085db0f857b000000909090909090909090418b7218ffc73b3cf50c0000000f83580400009090909090909048c1e6038b54be1085d20f845a01000090909090813cd50800000018ac00010f855103000090909090909090498b9f58040000850348c1e2034c8bc2909090909090418b480c8bf9d1e73b7e0c0f825effffffe9230400009090909081fb86e8bac50f856b000000897c2414894c24189090909090909090909090909090909048be0000002b787f00004a8d140e488b9ad0010000488b4340498bf3498bd0ffd00f1f8400000000009090909085c00f85d90200009090908b7c24148b4c2418448b4c24244c8b1c244c8b542408e90dffffff897c2414894c24189090909081fb17c2bcc50f84340000009090909090909090909090909048c1e303488bf3488b1424498bc848b8ffffffffffffffffe81c71cbfe0f1f84005405000beb8a9090904c8b1c244c8b542408e9b0feffff909090e909fdffff894c24189090909090909090908b4c241890909090909090908bc1488b6c24304883c438493ba7500400000f879e030000c39090909090909090909090909090909090b8ffffffff488b6c24304883c438493ba7500400000f8785030000c3909090418bc9ebaa909090418bc8eba290909048c7c600000000e963fcffff909090ebb89090909081ff86e8bac50f850b010000894c242444894c24204c8b1c249090909090909090909090909090909090418b730848ba0000002b787f0000488d3432488b86d00100004c8b5040498bf3488bd3488bd8498bc2ffd00f1f8400000000009090909085c00f856e0100009090908b4c2424448b4c24204c8b1c244c8b542408e966fcffff909090e929ffffff44894c24209090909081ff86e8bac50f85c7000000894c2424448944241c4c8b1c249090909090909090909090909090909090418b730848ba0000002b787f0000488d3432488b86d00100004c8b5040498bf3488bd3488bd8498bc2ffd00f1f8400000000009090909085c00f85e60000009090908b4c2424448b44241c4c8b1c244c8b542408e963fcffff894c242444894c24209090909081ff17c2bcc50f84bf0000009090909090909090909090909048c1e703488bf7488b1424488bcb48b8ffffffffffffffffe8186fcbfe0f1f840058070010e9f6feffff894c2424448944241c9090909081ff17c2bcc50f84800000009090909090909090909090909048c1e703488bf7488b1424488bcb48b8ffffffffffffffffe8c86ecbfe0f1f8400a8070011e93affffff909090e9effdffff909090e9edfdffff909090e9e5fdffff909090e9a9fdffff9090908b4c2420e9a7fdffff9090908b4c241ce99bfdffff9090904c8b1c244c8b542408e9e9faffff9090904c8b1c244c8b542408e969fbffff90909049c7c30000000041bae5c5feff90909090909090458997840400004d899f90040000e831c9cbfe0f1f84000000000090909049c7c39402000041bac4d7feffebcc44894c242090909041bae5b3feff4c8b1c244c8b442408909090909090904589978404000049c7879004000000000000e8e2c8cbfe0f1f8400000000009090909090909041c78784040000e560feff49c7879004000000000000e8b8c8cbfe0f1f8400000000009090909090909041c78784040000e570feff49c7879004000000000000e88ec8cbfe0f1f84000000000090909049c7c31400000041bac4d6feffe926ffffff9090909090909041c78784040000e591feff49c7879004000000000000e84fc8cbfe0f1f84000000000044894c242090909041bae5a1feffe92bffffff48896c2430e8d0c8c9fee9c5f8fffff4488d0d4efcffff49898f68040000e997d6cbfef4488d0d67fcffff49898f68040000e983d6cbfef441c78784040000c4d6feff49c7879004000014000000e8e1c7cbfe0f1f84000000000041c78784040000f5d4feff49c7879004000000000000e8bec7cbfe0f1f84000000000041c78784040000f5cafeff49c7879004000000000000e89bc7cbfe0f1f84000000000041c78784040000f5b8feff49c7879004000000000000e878c7cbfe0f1f84000000000041c78784040000f596feff49c7879004000000000000e855c7cbfe0f1f84000000000041c78784040000f543feff49c7879004000098070000e832c7cbfe0f1f84000000000041c78784040000f565feff49c7879004000000000000e80fc7cbfe0f1f84000000000041c78784040000f57afeff49c7879004000000000000e8ecc6cbfe0f1f84000000000041c78784040000f575feff49c7879004000000000000e8c9c6cbfe0f1f84000000000041c78784040000f525feff49c7879004000000000000e8a6c6cbfe0f1f84000000000041c78784040000f533feff49c7879004000000000000e883c6cbfe0f1f840000000000e8fc67dffef4e816c4cbfef4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 OSR_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@30b491e slotKind: QWORD  <||@
  Comment 76 32 r10|QWORD[.] = MOV input: [rsi|QWORD + 56] size: QWORD  <||@
  Comment 80 34 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 85 36 r11|QWORD[.] = MOV input: [rsi|QWORD + 48] size: QWORD  <||@
  Comment 89 38 stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 93 40 r8|QWORD[.] = MOV input: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 97 42 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [] callTarget: Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 97 {Stub<OSR_migration_end(long)void>@0x7f78998ce900:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 102 44 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 111 block B2 null  <||@
  Comment 111 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 111 60 NOP  <||@
  Comment 112 62 NOP  <||@
  Comment 113 64 NOP  <||@
  Comment 114 66 NOP  <||@
  Comment 115 68 NOP  <||@
  Comment 116 70 NOP  <||@
  Comment 117 72 NOP  <||@
  Comment 118 74 rsi|DWORD = MOV input: [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 122 76 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 132 78 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0  <||@
  Comment 136 80 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 136 block B3 null  <||@
  Comment 136 82 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 136 84 NOP  <||@
  Comment 137 86 NOP  <||@
  Comment 138 88 NOP  <||@
  Comment 139 90 NOP  <||@
  Comment 140 92 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD  <||@
  Comment 149 block B5 null  <||@
  Comment 149 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 149 106 NOP  <||@
  Comment 150 108 NOP  <||@
  Comment 151 110 NOP  <||@
  Comment 152 112 NOP  <||@
  Comment 153 114 NOP  <||@
  Comment 154 116 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 154 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 164 118 CMPBRANCH (x: rdx|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B78 size: QWORD  <||@
  Comment 173 block B6 null  <||@
  Comment 173 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 122 NOP  <||@
  Comment 174 124 NOP  <||@
  Comment 175 126 NOP  <||@
  Comment 176 128 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 176 block B7 null  <||@
  Comment 176 130 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 176 132 NOP  <||@
  Comment 177 134 NOP  <||@
  Comment 178 136 NOP  <||@
  Comment 179 138 NOP  <||@
  Comment 180 140 CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:3]  <||@
  Comment 180 [r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 180 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 180 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 194 block B8 null  <||@
  Comment 194 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 194 144 NOP  <||@
  Comment 195 146 NOP  <||@
  Comment 196 148 NOP  <||@
  Comment 197 150 NOP  <||@
  Comment 198 152 NOP  <||@
  Comment 199 154 NOP  <||@
  Comment 200 156 NOP  <||@
  Comment 201 158 r9|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3]  <||@
  Comment 201 [r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 201 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 205 160 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 209 162 rcx|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 214 164 CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B76 size: DWORD state [bci:3]  <||@
  Comment 214 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 214 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 227 block B9 null  <||@
  Comment 227 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 227 168 NOP  <||@
  Comment 228 170 NOP  <||@
  Comment 229 172 NOP  <||@
  Comment 230 174 NOP  <||@
  Comment 231 176 NOP  <||@
  Comment 232 178 NOP  <||@
  Comment 233 180 NOP  <||@
  Comment 234 182 NOP  <||@
  Comment 235 184 NOP  <||@
  Comment 236 186 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 240 188 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 244 190 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 250 192 CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 259 block B11 null  <||@
  Comment 259 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 208 NOP  <||@
  Comment 260 210 NOP  <||@
  Comment 261 212 NOP  <||@
  Comment 262 214 NOP  <||@
  Comment 263 216 NOP  <||@
  Comment 264 218 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 268 220 TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 276 block B12 null  <||@
  Comment 276 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 276 224 NOP  <||@
  Comment 277 226 NOP  <||@
  Comment 278 228 NOP  <||@
  Comment 279 230 JUMP ~outgoingValues: [] destination: B12 -> B20  <||@
  Comment 279 block B20 null  <||@
  Comment 279 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 279 414 NOP  <||@
  Comment 280 416 NOP  <||@
  Comment 281 418 NOP  <||@
  Comment 282 420 NOP  <||@
  Comment 283 422 NOP  <||@
  Comment 284 424 NOP  <||@
  Comment 285 426 NOP  <||@
  Comment 286 428 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 290 430 rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:27]  <||@
  Comment 290 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r9|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 297 432 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 299 434 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B72 size: DWORD  <||@
  Comment 307 block B21 null  <||@
  Comment 307 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 307 438 NOP  <||@
  Comment 308 440 NOP  <||@
  Comment 309 442 NOP  <||@
  Comment 310 444 NOP  <||@
  Comment 311 446 NOP  <||@
  Comment 312 448 NOP  <||@
  Comment 313 450 NOP  <||@
  Comment 314 452 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 318 454 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 322 456 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 330 block B23 null  <||@
  Comment 330 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 330 470 NOP  <||@
  Comment 331 472 NOP  <||@
  Comment 332 474 NOP  <||@
  Comment 333 476 NOP  <||@
  Comment 334 478 CMPCONSTBRANCH x: [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 334 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 351 block B24 null  <||@
  Comment 351 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 482 NOP  <||@
  Comment 352 484 NOP  <||@
  Comment 353 486 NOP  <||@
  Comment 354 488 NOP  <||@
  Comment 355 490 NOP  <||@
  Comment 356 492 NOP  <||@
  Comment 357 494 r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 365 496 rcx|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 370 498 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B69 size: DWORD  <||@
  Comment 378 block B25 null  <||@
  Comment 378 500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 378 502 NOP  <||@
  Comment 379 504 NOP  <||@
  Comment 380 506 NOP  <||@
  Comment 381 508 NOP  <||@
  Comment 382 510 NOP  <||@
  Comment 383 512 NOP  <||@
  Comment 384 514 NOP  <||@
  Comment 385 516 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 389 518 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 395 520 CMPBRANCH (x: r11|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD  <||@
  Comment 404 block B27 null  <||@
  Comment 404 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 404 536 NOP  <||@
  Comment 405 538 NOP  <||@
  Comment 406 540 NOP  <||@
  Comment 407 542 NOP  <||@
  Comment 408 544 NOP  <||@
  Comment 409 546 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 413 548 TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 421 block B28 null  <||@
  Comment 421 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 421 552 NOP  <||@
  Comment 422 554 NOP  <||@
  Comment 423 556 NOP  <||@
  Comment 424 558 JUMP ~outgoingValues: [] destination: B28 -> B36  <||@
  Comment 424 block B36 null  <||@
  Comment 424 742 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 744 NOP  <||@
  Comment 425 746 NOP  <||@
  Comment 426 748 NOP  <||@
  Comment 427 750 NOP  <||@
  Comment 428 752 NOP  <||@
  Comment 429 754 NOP  <||@
  Comment 430 756 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 434 758 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 436 760 CMPBRANCH (x: rcx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B67 size: DWORD state [bci:27]  <||@
  Comment 436 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 436 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 449 block B37 null  <||@
  Comment 449 762 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 449 764 NOP  <||@
  Comment 450 766 NOP  <||@
  Comment 451 768 NOP  <||@
  Comment 452 770 NOP  <||@
  Comment 453 772 NOP  <||@
  Comment 454 774 NOP  <||@
  Comment 455 776 NOP  <||@
  Comment 456 778 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 460 780 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 464 782 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 472 block B39 null  <||@
  Comment 472 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 796 NOP  <||@
  Comment 473 798 NOP  <||@
  Comment 474 800 NOP  <||@
  Comment 475 802 NOP  <||@
  Comment 476 804 CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B66 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 476 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 493 block B40 null  <||@
  Comment 493 806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 493 808 NOP  <||@
  Comment 494 810 NOP  <||@
  Comment 495 812 NOP  <||@
  Comment 496 814 NOP  <||@
  Comment 497 816 NOP  <||@
  Comment 498 818 NOP  <||@
  Comment 499 820 r9|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27]  <||@
  Comment 499 [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 499 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 503 822 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 508 824 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 512 828 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 517 block B42 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 517 850 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 852 NOP  <||@
  Comment 545 854 NOP  <||@
  Comment 546 856 NOP  <||@
  Comment 547 858 NOP  <||@
  Comment 548 860 NOP  <||@
  Comment 549 862 NOP  <||@
  Comment 550 864 NOP  <||@
  Comment 551 866 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 555 868 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 562 870 CMPBRANCH (x: r11|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.15719294999340205 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 571 block B44 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 571 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 571 886 NOP  <||@
  Comment 572 888 NOP  <||@
  Comment 573 890 NOP  <||@
  Comment 574 892 NOP  <||@
  Comment 575 894 NOP  <||@
  Comment 576 896 rbx|DWORD[_] = MOV input: [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 580 898 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.9097640391284887 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 588 block B45 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 588 900 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 588 902 NOP  <||@
  Comment 589 904 NOP  <||@
  Comment 590 906 NOP  <||@
  Comment 591 908 JUMP ~outgoingValues: [] destination: B45 -> B53  <||@
  Comment 591 block B53 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 591 1084 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 591 1086 NOP  <||@
  Comment 592 1088 NOP  <||@
  Comment 593 1090 NOP  <||@
  Comment 594 1092 NOP  <||@
  Comment 595 1094 NOP  <||@
  Comment 596 1096 NOP  <||@
  Comment 597 1098 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 601 1100 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 603 1102 CMPBRANCH (x: rdi|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B60 size: DWORD state [bci:27]  <||@
  Comment 603 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3          |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |rcx|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |           |   |   |   |    <||@
  Comment 603 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 616 block B54 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 616 1104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 616 1106 NOP  <||@
  Comment 617 1108 NOP  <||@
  Comment 618 1110 NOP  <||@
  Comment 619 1112 NOP  <||@
  Comment 620 1114 NOP  <||@
  Comment 621 1116 NOP  <||@
  Comment 622 1118 NOP  <||@
  Comment 623 1120 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 627 1122 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 631 1124 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD  <||@
  Comment 639 block B56 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 639 1136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 639 1138 NOP  <||@
  Comment 640 1140 NOP  <||@
  Comment 641 1142 NOP  <||@
  Comment 642 1144 NOP  <||@
  Comment 643 1146 CMPCONSTBRANCH x: [rdx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.996048372267913 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 643 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 660 block B57 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 660 1148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 660 1150 NOP  <||@
  Comment 661 1152 NOP  <||@
  Comment 662 1154 NOP  <||@
  Comment 663 1156 NOP  <||@
  Comment 664 1158 NOP  <||@
  Comment 665 1160 NOP  <||@
  Comment 666 1162 NOP  <||@
  Comment 667 1164 SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:27]  <||@
  Comment 674 [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3          |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |rcx|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |           |   |   |   |    <||@
  Comment 674 {infopoint: SAFEPOINT}  <||@
  Comment 674 POLL_FAR  <||@
  Comment 676 1166 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 680 1170 JUMP ~outgoingValues: [] destination: B57 -> B41  <||@
  Comment 680 block B41 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 680 830 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 680 826 r8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 683 832 NOP  <||@
  Comment 684 834 NOP  <||@
  Comment 685 836 NOP  <||@
  Comment 686 838 NOP  <||@
  Comment 687 840 NOP  <||@
  Comment 688 842 NOP  <||@
  Comment 689 844 rcx|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:3]  <||@
  Comment 689 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 689 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 693 846 rdi|DWORD = SHL value: rcx|DWORD size: DWORD  <||@
  Comment 697 848 CMPBRANCH (x: rdi|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B65 size: DWORD state [bci:3]  <||@
  Comment 697 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 697 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 711 block B46 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 711 910 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 711 912 NOP  <||@
  Comment 712 914 NOP  <||@
  Comment 713 916 NOP  <||@
  Comment 714 918 NOP  <||@
  Comment 715 920 CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 715 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 727 block B47 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 727 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 727 924 stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 731 926 stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 735 928 NOP  <||@
  Comment 736 930 NOP  <||@
  Comment 737 932 NOP  <||@
  Comment 738 934 NOP  <||@
  Comment 739 936 NOP  <||@
  Comment 740 938 NOP  <||@
  Comment 741 940 NOP  <||@
  Comment 742 942 NOP  <||@
  Comment 743 944 NOP  <||@
  Comment 744 946 NOP  <||@
  Comment 745 948 NOP  <||@
  Comment 746 950 NOP  <||@
  Comment 747 952 NOP  <||@
  Comment 748 954 NOP  <||@
  Comment 749 956 NOP  <||@
  Comment 750 958 NOP  <||@
  Comment 751 960 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 761 962 rdx|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0  <||@
  Comment 765 964 rbx|QWORD = MOV input: [rdx|QWORD + 464] size: QWORD  <||@
  Comment 772 966 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 776 968 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 779 970 rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 782 972 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24]  <||@
  Comment 782 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 782 INLINE_INVOKE  <||@
  Comment 784 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |-  |-   <||@
  Comment 792 974 JUMP ~outgoingValues: [] destination: B47 -> B51  <||@
  Comment 792 block B51 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 792 1052 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 792 1054 NOP  <||@
  Comment 793 1056 NOP  <||@
  Comment 794 1058 NOP  <||@
  Comment 795 1060 NOP  <||@
  Comment 796 1062 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B61 size: DWORD  <||@
  Comment 804 block B52 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 804 1064 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 804 1066 NOP  <||@
  Comment 805 1068 NOP  <||@
  Comment 806 1070 NOP  <||@
  Comment 807 1072 rdi|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 811 1074 rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 815 1076 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 820 1078 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 824 1080 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 829 1082 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 834 block B48 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 834 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 834 978 stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 838 980 stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 842 982 NOP  <||@
  Comment 843 984 NOP  <||@
  Comment 844 986 NOP  <||@
  Comment 845 988 NOP  <||@
  Comment 846 990 CMPCONSTBRANCH x: rbx|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 846 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 858 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 858 1012 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 858 1014 NOP  <||@
  Comment 859 1016 NOP  <||@
  Comment 860 1018 NOP  <||@
  Comment 861 1020 NOP  <||@
  Comment 862 1022 NOP  <||@
  Comment 863 1024 NOP  <||@
  Comment 864 1026 NOP  <||@
  Comment 865 1028 NOP  <||@
  Comment 866 1030 NOP  <||@
  Comment 867 1032 NOP  <||@
  Comment 868 1034 NOP  <||@
  Comment 869 1036 NOP  <||@
  Comment 870 1038 NOP  <||@
  Comment 871 1040 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 875 1042 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 878 1044 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 882 1046 rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 885 1048 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24]  <||@
  Comment 885 INVOKEVIRTUAL  <||@
  Comment 895 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 900 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |-  |-   <||@
  Comment 908 1050 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 910 block B49 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 910 992 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 910 994 NOP  <||@
  Comment 911 996 NOP  <||@
  Comment 912 998 NOP  <||@
  Comment 913 1006 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 917 1008 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 922 1010 JUMP ~outgoingValues: [] destination: B49 -> B53  <||@
  Comment 927 block B4 null  <||@
  Comment 927 94 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 927 96 NOP  <||@
  Comment 928 98 NOP  <||@
  Comment 929 100 NOP  <||@
  Comment 930 102 JUMP ~outgoingValues: [] destination: B4 -> B7  <||@
  Comment 935 block B43 null  <||@
  Comment 935 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 935 874 stack:40|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 939 876 NOP  <||@
  Comment 940 878 NOP  <||@
  Comment 941 880 NOP  <||@
  Comment 942 882 JUMP ~outgoingValues: [] destination: B43 -> B62  <||@
  Comment 942 block B62 null  <||@
  Comment 942 1224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 942 1226 NOP  <||@
  Comment 943 1228 NOP  <||@
  Comment 944 1230 NOP  <||@
  Comment 945 1232 JUMP ~outgoingValues: [] destination: B62 -> B63  <||@
  Comment 945 block B63 null  <||@
  Comment 945 1234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 945 1236 NOP  <||@
  Comment 946 1238 NOP  <||@
  Comment 947 1240 NOP  <||@
  Comment 948 1242 rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 952 1244 JUMP ~outgoingValues: [] destination: B63 -> B75  <||@
  Comment 952 block B75 null  <||@
  Comment 952 1428 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 952 1430 NOP  <||@
  Comment 953 1432 NOP  <||@
  Comment 954 1434 NOP  <||@
  Comment 955 1436 NOP  <||@
  Comment 956 1438 NOP  <||@
  Comment 957 1440 NOP  <||@
  Comment 958 1442 NOP  <||@
  Comment 959 1444 NOP  <||@
  Comment 960 1446 rax|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 962 1448 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 971 POLL_RETURN_FAR  <||@
  Comment 985 block B55 null  <||@
  Comment 985 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 985 1128 NOP  <||@
  Comment 986 1130 NOP  <||@
  Comment 987 1132 NOP  <||@
  Comment 988 1134 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 988 block B59 null  <||@
  Comment 988 1182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 988 1184 NOP  <||@
  Comment 989 1186 NOP  <||@
  Comment 990 1188 NOP  <||@
  Comment 991 1190 JUMP ~outgoingValues: [] destination: B59 -> B64  <||@
  Comment 991 block B64 null  <||@
  Comment 991 1246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 991 1248 NOP  <||@
  Comment 992 1250 NOP  <||@
  Comment 993 1252 NOP  <||@
  Comment 994 1254 JUMP ~outgoingValues: [] destination: B64 -> B71  <||@
  Comment 994 block B71 null  <||@
  Comment 994 1352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 994 1354 NOP  <||@
  Comment 995 1356 NOP  <||@
  Comment 996 1358 NOP  <||@
  Comment 997 1360 NOP  <||@
  Comment 998 1362 NOP  <||@
  Comment 999 1364 NOP  <||@
  Comment 1000 1366 NOP  <||@
  Comment 1001 1368 NOP  <||@
  Comment 1002 1370 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1007 1372 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1016 POLL_RETURN_FAR  <||@
  Comment 1030 block B10 null  <||@
  Comment 1030 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 196 NOP  <||@
  Comment 1031 198 NOP  <||@
  Comment 1032 200 NOP  <||@
  Comment 1033 202 rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1036 204 JUMP ~outgoingValues: [] destination: B10 -> B75  <||@
  Comment 1038 block B26 null  <||@
  Comment 1038 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 524 NOP  <||@
  Comment 1039 526 NOP  <||@
  Comment 1040 528 NOP  <||@
  Comment 1041 530 rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1044 532 JUMP ~outgoingValues: [] destination: B26 -> B75  <||@
  Comment 1046 block B1 null  <||@
  Comment 1046 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1046 48 NOP  <||@
  Comment 1047 50 NOP  <||@
  Comment 1048 52 NOP  <||@
  Comment 1049 54 rsi|QWORD = MOVE input: Object[null]  <||@
  Comment 1056 56 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 1061 block B22 null  <||@
  Comment 1061 458 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1061 460 NOP  <||@
  Comment 1062 462 NOP  <||@
  Comment 1063 464 NOP  <||@
  Comment 1064 466 JUMP ~outgoingValues: [] destination: B22 -> B71  <||@
  Comment 1066 block B13 null  <||@
  Comment 1066 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1066 234 NOP  <||@
  Comment 1067 236 NOP  <||@
  Comment 1068 238 NOP  <||@
  Comment 1069 240 NOP  <||@
  Comment 1070 242 CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 1070 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 1082 block B14 null  <||@
  Comment 1082 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1082 246 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1086 248 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1091 250 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1095 252 NOP  <||@
  Comment 1096 254 NOP  <||@
  Comment 1097 256 NOP  <||@
  Comment 1098 258 NOP  <||@
  Comment 1099 260 NOP  <||@
  Comment 1100 262 NOP  <||@
  Comment 1101 264 NOP  <||@
  Comment 1102 266 NOP  <||@
  Comment 1103 268 NOP  <||@
  Comment 1104 270 NOP  <||@
  Comment 1105 272 NOP  <||@
  Comment 1106 274 NOP  <||@
  Comment 1107 276 NOP  <||@
  Comment 1108 278 NOP  <||@
  Comment 1109 280 NOP  <||@
  Comment 1110 282 NOP  <||@
  Comment 1111 284 NOP  <||@
  Comment 1112 286 rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:3]  <||@
  Comment 1112 [rbx:0, r8:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5            |6  |7 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 1112 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1116 288 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1126 290 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1130 292 rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD  <||@
  Comment 1137 294 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 1141 296 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1144 298 rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1147 300 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1150 302 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1153 304 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24]  <||@
  Comment 1153 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1153 INLINE_INVOKE  <||@
  Comment 1155 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |-  |-   <||@
  Comment 1163 306 JUMP ~outgoingValues: [] destination: B14 -> B18  <||@
  Comment 1163 block B18 null  <||@
  Comment 1163 382 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1163 384 NOP  <||@
  Comment 1164 386 NOP  <||@
  Comment 1165 388 NOP  <||@
  Comment 1166 390 NOP  <||@
  Comment 1167 392 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B74 size: DWORD  <||@
  Comment 1175 block B19 null  <||@
  Comment 1175 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1175 396 NOP  <||@
  Comment 1176 398 NOP  <||@
  Comment 1177 400 NOP  <||@
  Comment 1178 402 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1182 404 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1187 406 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 408 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 410 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 1201 block B38 null  <||@
  Comment 1201 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 786 NOP  <||@
  Comment 1202 788 NOP  <||@
  Comment 1203 790 NOP  <||@
  Comment 1204 792 JUMP ~outgoingValues: [] destination: B38 -> B71  <||@
  Comment 1209 block B29 null  <||@
  Comment 1209 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1209 562 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1214 564 NOP  <||@
  Comment 1215 566 NOP  <||@
  Comment 1216 568 NOP  <||@
  Comment 1217 570 NOP  <||@
  Comment 1218 572 CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.743297100699551 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 1218 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 1230 block B30 null  <||@
  Comment 1230 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1230 576 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1234 578 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1239 580 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1243 582 NOP  <||@
  Comment 1244 584 NOP  <||@
  Comment 1245 586 NOP  <||@
  Comment 1246 588 NOP  <||@
  Comment 1247 590 NOP  <||@
  Comment 1248 592 NOP  <||@
  Comment 1249 594 NOP  <||@
  Comment 1250 596 NOP  <||@
  Comment 1251 598 NOP  <||@
  Comment 1252 600 NOP  <||@
  Comment 1253 602 NOP  <||@
  Comment 1254 604 NOP  <||@
  Comment 1255 606 NOP  <||@
  Comment 1256 608 NOP  <||@
  Comment 1257 610 NOP  <||@
  Comment 1258 612 NOP  <||@
  Comment 1259 614 NOP  <||@
  Comment 1260 616 rsi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:27]  <||@
  Comment 1260 [rbx:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]         |              |   |                |   |   |   |    <||@
  Comment 1260 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1264 618 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1274 620 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1278 622 rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD  <||@
  Comment 1285 624 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 1289 626 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1292 628 rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1295 630 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1298 632 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1301 634 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 24]  <||@
  Comment 1301 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1301 INLINE_INVOKE  <||@
  Comment 1303 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |-  |-   <||@
  Comment 1311 636 JUMP ~outgoingValues: [] destination: B30 -> B34  <||@
  Comment 1311 block B34 null  <||@
  Comment 1311 712 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1311 714 NOP  <||@
  Comment 1312 716 NOP  <||@
  Comment 1313 718 NOP  <||@
  Comment 1314 720 NOP  <||@
  Comment 1315 722 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9887265628655122 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B68 size: DWORD  <||@
  Comment 1323 block B35 null  <||@
  Comment 1323 724 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1323 726 NOP  <||@
  Comment 1324 728 NOP  <||@
  Comment 1325 730 NOP  <||@
  Comment 1326 732 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1330 734 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1335 736 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1339 738 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1344 740 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1349 block B15 null  <||@
  Comment 1349 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1349 310 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1353 312 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1358 314 NOP  <||@
  Comment 1359 316 NOP  <||@
  Comment 1360 318 NOP  <||@
  Comment 1361 320 NOP  <||@
  Comment 1362 322 CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1362 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1374 block B17 null  <||@
  Comment 1374 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1374 344 NOP  <||@
  Comment 1375 346 NOP  <||@
  Comment 1376 348 NOP  <||@
  Comment 1377 350 NOP  <||@
  Comment 1378 352 NOP  <||@
  Comment 1379 354 NOP  <||@
  Comment 1380 356 NOP  <||@
  Comment 1381 358 NOP  <||@
  Comment 1382 360 NOP  <||@
  Comment 1383 362 NOP  <||@
  Comment 1384 364 NOP  <||@
  Comment 1385 366 NOP  <||@
  Comment 1386 368 NOP  <||@
  Comment 1387 370 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 1391 372 rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1394 374 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1398 376 rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 378 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24]  <||@
  Comment 1401 INVOKEVIRTUAL  <||@
  Comment 1411 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 1416 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |-  |-   <||@
  Comment 1424 380 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 1429 block B31 null  <||@
  Comment 1429 638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1429 640 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1433 642 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1438 644 NOP  <||@
  Comment 1439 646 NOP  <||@
  Comment 1440 648 NOP  <||@
  Comment 1441 650 NOP  <||@
  Comment 1442 652 CMPCONSTBRANCH x: rdi|DWORD[_] trueDestinationProbability: 0.0011327550265468342 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1442 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1454 block B33 null  <||@
  Comment 1454 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1454 674 NOP  <||@
  Comment 1455 676 NOP  <||@
  Comment 1456 678 NOP  <||@
  Comment 1457 680 NOP  <||@
  Comment 1458 682 NOP  <||@
  Comment 1459 684 NOP  <||@
  Comment 1460 686 NOP  <||@
  Comment 1461 688 NOP  <||@
  Comment 1462 690 NOP  <||@
  Comment 1463 692 NOP  <||@
  Comment 1464 694 NOP  <||@
  Comment 1465 696 NOP  <||@
  Comment 1466 698 NOP  <||@
  Comment 1467 700 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5a4f4fc9 encoding: base: 0 shift: 3  <||@
  Comment 1471 702 rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1474 704 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1478 706 rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 708 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 24]  <||@
  Comment 1481 INVOKEVIRTUAL  <||@
  Comment 1491 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 1496 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |-  |-   <||@
  Comment 1504 710 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1509 block B58 null  <||@
  Comment 1509 1172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1509 1174 NOP  <||@
  Comment 1510 1176 NOP  <||@
  Comment 1511 1178 NOP  <||@
  Comment 1512 1180 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 1517 block B70 null  <||@
  Comment 1517 1342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1517 1344 NOP  <||@
  Comment 1518 1346 NOP  <||@
  Comment 1519 1348 NOP  <||@
  Comment 1520 1350 JUMP ~outgoingValues: [] destination: B70 -> B71  <||@
  Comment 1525 block B66 null  <||@
  Comment 1525 1278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1525 1280 NOP  <||@
  Comment 1526 1282 NOP  <||@
  Comment 1527 1284 NOP  <||@
  Comment 1528 1286 JUMP ~outgoingValues: [] destination: B66 -> B71  <||@
  Comment 1533 block B61 null  <||@
  Comment 1533 1214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1533 1216 NOP  <||@
  Comment 1534 1218 NOP  <||@
  Comment 1535 1220 NOP  <||@
  Comment 1536 1222 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1541 block B74 null  <||@
  Comment 1541 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 1418 NOP  <||@
  Comment 1542 1420 NOP  <||@
  Comment 1543 1422 NOP  <||@
  Comment 1544 1424 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1548 1426 JUMP ~outgoingValues: [] destination: B74 -> B75  <||@
  Comment 1553 block B68 null  <||@
  Comment 1553 1310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1553 1312 NOP  <||@
  Comment 1554 1314 NOP  <||@
  Comment 1555 1316 NOP  <||@
  Comment 1556 1318 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1560 1320 JUMP ~outgoingValues: [] destination: B68 -> B75  <||@
  Comment 1565 block B16 null  <||@
  Comment 1565 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1565 326 NOP  <||@
  Comment 1566 328 NOP  <||@
  Comment 1567 330 NOP  <||@
  Comment 1568 336 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1572 338 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1577 340 JUMP ~outgoingValues: [] destination: B16 -> B20  <||@
  Comment 1582 block B32 null  <||@
  Comment 1582 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1582 656 NOP  <||@
  Comment 1583 658 NOP  <||@
  Comment 1584 660 NOP  <||@
  Comment 1585 666 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1589 668 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1594 670 JUMP ~outgoingValues: [] destination: B32 -> B36  <||@
  Comment 1599 block B76 null  <||@
  Comment 1599 1450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1599 1452 NOP  <||@
  Comment 1600 1454 NOP  <||@
  Comment 1601 1456 NOP  <||@
  Comment 1602 1458 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1609 1460 r10|DWORD = MOVE input: int[-80411|0xfffffffffffec5e5]  <||@
  Comment 1615 1462 JUMP ~outgoingValues: [] destination: B76 -> B79  <||@
  Comment 1615 block B79 null  <||@
  Comment 1615 1492 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1615 1494 NOP  <||@
  Comment 1616 1496 NOP  <||@
  Comment 1617 1498 NOP  <||@
  Comment 1618 1500 NOP  <||@
  Comment 1619 1502 NOP  <||@
  Comment 1620 1504 NOP  <||@
  Comment 1621 1506 NOP  <||@
  Comment 1622 1508 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1629 1510 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1636 1512 DEOPT info [bci:3]  <||@
  Comment 1636 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1641 [r8:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5            |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 1649 block B78 null  <||@
  Comment 1649 1478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1649 1480 NOP  <||@
  Comment 1650 1482 NOP  <||@
  Comment 1651 1484 NOP  <||@
  Comment 1652 1486 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1659 1488 r10|DWORD = MOVE input: int[-75836|0xfffffffffffed7c4]  <||@
  Comment 1665 1490 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 1667 block B72 null  <||@
  Comment 1667 1374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1667 1376 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1672 1378 NOP  <||@
  Comment 1673 1380 NOP  <||@
  Comment 1674 1382 NOP  <||@
  Comment 1675 1384 r10|DWORD = MOVE input: int[-85019|0xfffffffffffeb3e5]  <||@
  Comment 1681 1392 JUMP ~outgoingValues: [] destination: B72 -> B73  <||@
  Comment 1681 block B73 null  <||@
  Comment 1681 1394 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1681 1388 r11|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1685 1390 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 1396 NOP  <||@
  Comment 1691 1398 NOP  <||@
  Comment 1692 1400 NOP  <||@
  Comment 1693 1402 NOP  <||@
  Comment 1694 1404 NOP  <||@
  Comment 1695 1406 NOP  <||@
  Comment 1696 1408 NOP  <||@
  Comment 1697 1410 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1704 1412 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1715 1414 DEOPT info [bci:27]  <||@
  Comment 1715 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1720 [r8:0, r11:0]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0            |1             |2  |3         |4  |5  |6  |7 
     locals:  |r8|QWORD[.]  |r11|QWORD[.]  |-  |r9|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]   |              |   |          |   |   |   |    <||@
  Comment 1728 block B60 null  <||@
  Comment 1728 1192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1728 1194 NOP  <||@
  Comment 1729 1196 NOP  <||@
  Comment 1730 1198 NOP  <||@
  Comment 1731 1200 NOP  <||@
  Comment 1732 1202 NOP  <||@
  Comment 1733 1204 NOP  <||@
  Comment 1734 1206 NOP  <||@
  Comment 1735 1208 MOV x: [r15|QWORD + 1156] y: -106267 size: DWORD  <||@
  Comment 1746 1210 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1757 1212 DEOPT info [bci:27]  <||@
  Comment 1757 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1762 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3          |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |rcx|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]         |                   |   |           |   |   |   |    <||@
  Comment 1770 block B65 null  <||@
  Comment 1770 1256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1770 1258 NOP  <||@
  Comment 1771 1260 NOP  <||@
  Comment 1772 1262 NOP  <||@
  Comment 1773 1264 NOP  <||@
  Comment 1774 1266 NOP  <||@
  Comment 1775 1268 NOP  <||@
  Comment 1776 1270 NOP  <||@
  Comment 1777 1272 MOV x: [r15|QWORD + 1156] y: -102171 size: DWORD  <||@
  Comment 1788 1274 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1799 1276 DEOPT info [bci:3]  <||@
  Comment 1799 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1804 [r8:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5            |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 1812 block B77 null  <||@
  Comment 1812 1464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1812 1466 NOP  <||@
  Comment 1813 1468 NOP  <||@
  Comment 1814 1470 NOP  <||@
  Comment 1815 1472 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1822 1474 r10|DWORD = MOVE input: int[-76092|0xfffffffffffed6c4]  <||@
  Comment 1828 1476 JUMP ~outgoingValues: [] destination: B77 -> B79  <||@
  Comment 1833 block B67 null  <||@
  Comment 1833 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1833 1290 NOP  <||@
  Comment 1834 1292 NOP  <||@
  Comment 1835 1294 NOP  <||@
  Comment 1836 1296 NOP  <||@
  Comment 1837 1298 NOP  <||@
  Comment 1838 1300 NOP  <||@
  Comment 1839 1302 NOP  <||@
  Comment 1840 1304 MOV x: [r15|QWORD + 1156] y: -93723 size: DWORD  <||@
  Comment 1851 1306 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1862 1308 DEOPT info [bci:27]  <||@
  Comment 1862 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1867 [stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3         |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |stack:64|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]         |                   |   |          |   |   |   |    <||@
  Comment 1875 block B69 null  <||@
  Comment 1875 1322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1875 1324 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1880 1326 NOP  <||@
  Comment 1881 1328 NOP  <||@
  Comment 1882 1330 NOP  <||@
  Comment 1883 1332 r10|DWORD = MOVE input: int[-89627|0xfffffffffffea1e5]  <||@
  Comment 1889 1340 JUMP ~outgoingValues: [] destination: B69 -> B73  <||@
  Comment 1899 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1924 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1944 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1972 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1977 [r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2007 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2012 [r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2047 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2077 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2082 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r9|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 2112 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2117 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 2147 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2152 [rdx:0, rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |r8|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 2182 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2187 [rsi:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3          |4  |5  |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |rcx|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |           |   |   |   |    <||@
  Comment 2217 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2222 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2252 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2257 [rsi:0, r8:0, r10:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5            |6  |7 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2287 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2292 [rbx:0, r8:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:305) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5            |6  |7 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |r8|QWORD[.]  |-  |-   <||@
  Comment 2322 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2327 [rbx:0, r11:0, stack:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:56|QWORD[.]  |r11|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]         |              |   |                |   |   |   |    <||@
  Comment 2335 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2335 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2341 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
